{"version":3,"file":"hive-tx.min.js","mappings":"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","sources":["webpack://hiveTx/webpack/universalModuleDefinition","webpack://hiveTx/./node_modules/base-x/src/index.js","webpack://hiveTx/./node_modules/base64-js/index.js","webpack://hiveTx/./node_modules/bs58/index.js","webpack://hiveTx/./node_modules/buffer/index.js","webpack://hiveTx/./node_modules/bytebuffer-hex-custom/dist/bytebuffer-node.js","webpack://hiveTx/./node_modules/ieee754/index.js","webpack://hiveTx/./node_modules/long/dist/long.js","webpack://hiveTx/webpack/bootstrap","webpack://hiveTx/webpack/runtime/define property getters","webpack://hiveTx/webpack/runtime/hasOwnProperty shorthand","webpack://hiveTx/webpack/runtime/make namespace object","webpack://hiveTx/./config.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/_assert.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/crypto.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/utils.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/_md.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/sha256.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/_u64.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/sha512.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/ripemd160.js","webpack://hiveTx/./helpers/crypto.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/hmac.js","webpack://hiveTx/./node_modules/@noble/curves/esm/abstract/utils.js","webpack://hiveTx/./node_modules/@noble/curves/esm/abstract/modular.js","webpack://hiveTx/./node_modules/@noble/curves/esm/abstract/curve.js","webpack://hiveTx/./node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://hiveTx/./node_modules/@noble/curves/esm/_shortw_utils.js","webpack://hiveTx/./node_modules/@noble/curves/esm/secp256k1.js","webpack://hiveTx/./helpers/PublicKey.js","webpack://hiveTx/./helpers/Asset.js","webpack://hiveTx/./helpers/HexBuffer.js","webpack://hiveTx/./helpers/serializer.js","webpack://hiveTx/./transactions/signTransaction.js","webpack://hiveTx/./node_modules/axios/lib/helpers/bind.js","webpack://hiveTx/./node_modules/axios/lib/utils.js","webpack://hiveTx/./node_modules/axios/lib/core/AxiosError.js","webpack://hiveTx/./node_modules/axios/lib/helpers/toFormData.js","webpack://hiveTx/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://hiveTx/./node_modules/axios/lib/helpers/buildURL.js","webpack://hiveTx/./node_modules/axios/lib/core/InterceptorManager.js","webpack://hiveTx/./node_modules/axios/lib/defaults/transitional.js","webpack://hiveTx/./node_modules/axios/lib/platform/browser/index.js","webpack://hiveTx/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://hiveTx/./node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://hiveTx/./node_modules/axios/lib/platform/browser/classes/Blob.js","webpack://hiveTx/./node_modules/axios/lib/platform/common/utils.js","webpack://hiveTx/./node_modules/axios/lib/platform/index.js","webpack://hiveTx/./node_modules/axios/lib/helpers/formDataToJSON.js","webpack://hiveTx/./node_modules/axios/lib/defaults/index.js","webpack://hiveTx/./node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://hiveTx/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://hiveTx/./node_modules/axios/lib/core/AxiosHeaders.js","webpack://hiveTx/./node_modules/axios/lib/core/transformData.js","webpack://hiveTx/./node_modules/axios/lib/cancel/isCancel.js","webpack://hiveTx/./node_modules/axios/lib/cancel/CanceledError.js","webpack://hiveTx/./node_modules/axios/lib/core/settle.js","webpack://hiveTx/./node_modules/axios/lib/helpers/speedometer.js","webpack://hiveTx/./node_modules/axios/lib/helpers/progressEventReducer.js","webpack://hiveTx/./node_modules/axios/lib/helpers/throttle.js","webpack://hiveTx/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://hiveTx/./node_modules/axios/lib/helpers/cookies.js","webpack://hiveTx/./node_modules/axios/lib/core/buildFullPath.js","webpack://hiveTx/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://hiveTx/./node_modules/axios/lib/helpers/combineURLs.js","webpack://hiveTx/./node_modules/axios/lib/core/mergeConfig.js","webpack://hiveTx/./node_modules/axios/lib/helpers/resolveConfig.js","webpack://hiveTx/./node_modules/axios/lib/adapters/xhr.js","webpack://hiveTx/./node_modules/axios/lib/helpers/parseProtocol.js","webpack://hiveTx/./node_modules/axios/lib/helpers/composeSignals.js","webpack://hiveTx/./node_modules/axios/lib/helpers/trackStream.js","webpack://hiveTx/./node_modules/axios/lib/adapters/fetch.js","webpack://hiveTx/./node_modules/axios/lib/adapters/adapters.js","webpack://hiveTx/./node_modules/axios/lib/helpers/null.js","webpack://hiveTx/./node_modules/axios/lib/core/dispatchRequest.js","webpack://hiveTx/./node_modules/axios/lib/env/data.js","webpack://hiveTx/./node_modules/axios/lib/helpers/validator.js","webpack://hiveTx/./node_modules/axios/lib/core/Axios.js","webpack://hiveTx/./node_modules/axios/lib/cancel/CancelToken.js","webpack://hiveTx/./node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://hiveTx/./node_modules/axios/lib/axios.js","webpack://hiveTx/./node_modules/axios/lib/helpers/spread.js","webpack://hiveTx/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://hiveTx/./helpers/call.js","webpack://hiveTx/./helpers/Signature.js","webpack://hiveTx/./helpers/PrivateKey.js","webpack://hiveTx/./node_modules/@noble/ciphers/esm/_assert.js","webpack://hiveTx/./node_modules/@noble/ciphers/esm/utils.js","webpack://hiveTx/./node_modules/@noble/ciphers/esm/_polyval.js","webpack://hiveTx/./node_modules/@noble/ciphers/esm/aes.js","webpack://hiveTx/./helpers/aes.js","webpack://hiveTx/./helpers/deserializer.js","webpack://hiveTx/./helpers/memo.js","webpack://hiveTx/./helpers/utils.js","webpack://hiveTx/./index.js","webpack://hiveTx/./transactions/createTransaction.js","webpack://hiveTx/./helpers/globalProps.js","webpack://hiveTx/./transactions/broadcastTransaction.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hiveTx\"] = factory();\n\telse\n\t\troot[\"hiveTx\"] = factory();\n})(this, () => {\nreturn ","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*\n Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\n/**\n * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>\n * Backing buffer / Accessor: node Buffer\n * Released under the Apache License, Version 2.0\n * see: https://github.com/dcodeIO/bytebuffer.js for details\n */\nmodule.exports = (function() {\n    \"use strict\";\n\n    var buffer = require(\"buffer\"),\n        Buffer = buffer[\"Buffer\"],\n        Long = require(\"long\"),\n        memcpy = null;\n\n    /**\n     * Constructs a new ByteBuffer.\n     * @class The swiss army knife for binary data in JavaScript.\n     * @exports ByteBuffer\n     * @constructor\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\n     * @expose\n     */\n    var ByteBuffer = function(capacity, littleEndian, noAssert) {\n        if (typeof capacity === 'undefined')\n            capacity = ByteBuffer.DEFAULT_CAPACITY;\n        if (typeof littleEndian === 'undefined')\n            littleEndian = ByteBuffer.DEFAULT_ENDIAN;\n        if (typeof noAssert === 'undefined')\n            noAssert = ByteBuffer.DEFAULT_NOASSERT;\n        if (!noAssert) {\n            capacity = capacity | 0;\n            if (capacity < 0)\n                throw RangeError(\"Illegal capacity\");\n            littleEndian = !!littleEndian;\n            noAssert = !!noAssert;\n        }\n\n        /**\n         * Backing node Buffer.\n         * @type {!Buffer}\n         * @expose\n         */\n        this.buffer = capacity === 0 ? EMPTY_BUFFER : Buffer.alloc(capacity);\n\n        /**\n         * Absolute read/write offset.\n         * @type {number}\n         * @expose\n         * @see ByteBuffer#flip\n         * @see ByteBuffer#clear\n         */\n        this.offset = 0;\n\n        /**\n         * Marked offset.\n         * @type {number}\n         * @expose\n         * @see ByteBuffer#mark\n         * @see ByteBuffer#reset\n         */\n        this.markedOffset = -1;\n\n        /**\n         * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.\n         * @type {number}\n         * @expose\n         * @see ByteBuffer#flip\n         * @see ByteBuffer#clear\n         */\n        this.limit = capacity;\n\n        /**\n         * Whether to use little endian byte order, defaults to `false` for big endian.\n         * @type {boolean}\n         * @expose\n         */\n        this.littleEndian = littleEndian;\n\n        /**\n         * Whether to skip assertions of offsets and values, defaults to `false`.\n         * @type {boolean}\n         * @expose\n         */\n        this.noAssert = noAssert;\n    };\n\n    /**\n     * ByteBuffer version.\n     * @type {string}\n     * @const\n     * @expose\n     */\n    ByteBuffer.VERSION = \"1.0.1\";\n\n    /**\n     * Little endian constant that can be used instead of its boolean value. Evaluates to `true`.\n     * @type {boolean}\n     * @const\n     * @expose\n     */\n    ByteBuffer.LITTLE_ENDIAN = true;\n\n    /**\n     * Big endian constant that can be used instead of its boolean value. Evaluates to `false`.\n     * @type {boolean}\n     * @const\n     * @expose\n     */\n    ByteBuffer.BIG_ENDIAN = false;\n\n    /**\n     * Default initial capacity of `16`.\n     * @type {number}\n     * @expose\n     */\n    ByteBuffer.DEFAULT_CAPACITY = 16;\n\n    /**\n     * Default endianess of `false` for big endian.\n     * @type {boolean}\n     * @expose\n     */\n    ByteBuffer.DEFAULT_ENDIAN = ByteBuffer.BIG_ENDIAN;\n\n    /**\n     * Default no assertions flag of `false`.\n     * @type {boolean}\n     * @expose\n     */\n    ByteBuffer.DEFAULT_NOASSERT = false;\n\n    /**\n     * A `Long` class for representing a 64-bit two's-complement integer value.\n     * @type {!Long}\n     * @const\n     * @see https://npmjs.org/package/long\n     * @expose\n     */\n    ByteBuffer.Long = Long;\n\n    /**\n     * @alias ByteBuffer.prototype\n     * @inner\n     */\n    var ByteBufferPrototype = ByteBuffer.prototype;\n\n    /**\n     * An indicator used to reliably determine if an object is a ByteBuffer or not.\n     * @type {boolean}\n     * @const\n     * @expose\n     * @private\n     */\n    ByteBufferPrototype.__isByteBuffer__;\n\n    Object.defineProperty(ByteBufferPrototype, \"__isByteBuffer__\", {\n        value: true,\n        enumerable: false,\n        configurable: false\n    });\n\n    // helpers\n\n    /**\n     * @type {!Buffer}\n     * @inner\n     */\n    var EMPTY_BUFFER = Buffer.alloc(0);\n\n    /**\n     * String.fromCharCode reference for compile-time renaming.\n     * @type {function(...number):string}\n     * @inner\n     */\n    var stringFromCharCode = String.fromCharCode;\n\n    /**\n     * Creates a source function for a string.\n     * @param {string} s String to read from\n     * @returns {function():number|null} Source function returning the next char code respectively `null` if there are\n     *  no more characters left.\n     * @throws {TypeError} If the argument is invalid\n     * @inner\n     */\n    function stringSource(s) {\n        var i=0; return function() {\n            return i < s.length ? s.charCodeAt(i++) : null;\n        };\n    }\n\n    /**\n     * Creates a destination function for a string.\n     * @returns {function(number=):undefined|string} Destination function successively called with the next char code.\n     *  Returns the final string when called without arguments.\n     * @inner\n     */\n    function stringDestination() {\n        var cs = [], ps = []; return function() {\n            if (arguments.length === 0)\n                return ps.join('')+stringFromCharCode.apply(String, cs);\n            if (cs.length + arguments.length > 1024)\n                ps.push(stringFromCharCode.apply(String, cs)),\n                    cs.length = 0;\n            Array.prototype.push.apply(cs, arguments);\n        };\n    }\n\n    /**\n     * Gets the accessor type.\n     * @returns {Function} `Buffer` under node.js, `Uint8Array` respectively `DataView` in the browser (classes)\n     * @expose\n     */\n    ByteBuffer.accessor = function() {\n        return Buffer;\n    };\n    /**\n     * Allocates a new ByteBuffer backed by a buffer of the specified capacity.\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\n     * @returns {!ByteBuffer}\n     * @expose\n     */\n    ByteBuffer.allocate = function(capacity, littleEndian, noAssert) {\n        return new ByteBuffer(capacity, littleEndian, noAssert);\n    };\n\n    /**\n     * Concatenates multiple ByteBuffers into one.\n     * @param {!Array.<!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string>} buffers Buffers to concatenate\n     * @param {(string|boolean)=} encoding String encoding if `buffers` contains a string (\"base64\", \"hex\", \"binary\",\n     *  defaults to \"utf8\")\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order for the resulting ByteBuffer. Defaults\n     *  to {@link ByteBuffer.DEFAULT_ENDIAN}.\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values for the resulting ByteBuffer. Defaults to\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\n     * @returns {!ByteBuffer} Concatenated ByteBuffer\n     * @expose\n     */\n    ByteBuffer.concat = function(buffers, encoding, littleEndian, noAssert) {\n        if (typeof encoding === 'boolean' || typeof encoding !== 'string') {\n            noAssert = littleEndian;\n            littleEndian = encoding;\n            encoding = undefined;\n        }\n        var capacity = 0;\n        for (var i=0, k=buffers.length, length; i<k; ++i) {\n            if (!ByteBuffer.isByteBuffer(buffers[i]))\n                buffers[i] = ByteBuffer.wrap(buffers[i], encoding);\n            length = buffers[i].limit - buffers[i].offset;\n            if (length > 0) capacity += length;\n        }\n        if (capacity === 0)\n            return new ByteBuffer(0, littleEndian, noAssert);\n        var bb = new ByteBuffer(capacity, littleEndian, noAssert),\n            bi;\n        i=0; while (i<k) {\n            bi = buffers[i++];\n            length = bi.limit - bi.offset;\n            if (length <= 0) continue;\n            bi.buffer.copy(bb.buffer, bb.offset, bi.offset, bi.limit);\n            bb.offset += length;\n        }\n        bb.limit = bb.offset;\n        bb.offset = 0;\n        return bb;\n    };\n\n    /**\n     * Tests if the specified type is a ByteBuffer.\n     * @param {*} bb ByteBuffer to test\n     * @returns {boolean} `true` if it is a ByteBuffer, otherwise `false`\n     * @expose\n     */\n    ByteBuffer.isByteBuffer = function(bb) {\n        return (bb && bb[\"__isByteBuffer__\"]) === true;\n    };\n    /**\n     * Gets the backing buffer type.\n     * @returns {Function} `Buffer` under node.js, `ArrayBuffer` in the browser (classes)\n     * @expose\n     */\n    ByteBuffer.type = function() {\n        return Buffer;\n    };\n    /**\n     * Wraps a buffer or a string. Sets the allocated ByteBuffer's {@link ByteBuffer#offset} to `0` and its\n     *  {@link ByteBuffer#limit} to the length of the wrapped data.\n     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string|!Array.<number>} buffer Anything that can be wrapped\n     * @param {(string|boolean)=} encoding String encoding if `buffer` is a string (\"base64\", \"hex\", \"binary\", defaults to\n     *  \"utf8\")\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\n     * @returns {!ByteBuffer} A ByteBuffer wrapping `buffer`\n     * @expose\n     */\n    ByteBuffer.wrap = function(buffer, encoding, littleEndian, noAssert) {\n        if (typeof encoding !== 'string') {\n            noAssert = littleEndian;\n            littleEndian = encoding;\n            encoding = undefined;\n        }\n        if (typeof buffer === 'string') {\n            if (typeof encoding === 'undefined')\n                encoding = \"utf8\";\n            switch (encoding) {\n                case \"base64\":\n                    return ByteBuffer.fromBase64(buffer, littleEndian);\n                case \"hex\":\n                    return ByteBuffer.fromHex(buffer, littleEndian);\n                case \"binary\":\n                    return ByteBuffer.fromBinary(buffer, littleEndian);\n                case \"utf8\":\n                    return ByteBuffer.fromUTF8(buffer, littleEndian);\n                case \"debug\":\n                    return ByteBuffer.fromDebug(buffer, littleEndian);\n                default:\n                    throw Error(\"Unsupported encoding: \"+encoding);\n            }\n        }\n        if (buffer === null || typeof buffer !== 'object')\n            throw TypeError(\"Illegal buffer\");\n        var bb;\n        if (ByteBuffer.isByteBuffer(buffer)) {\n            bb = ByteBufferPrototype.clone.call(buffer);\n            bb.markedOffset = -1;\n            return bb;\n        }\n        var i = 0,\n            k = 0,\n            b;\n        if (buffer instanceof Uint8Array) { // Extract bytes from Uint8Array\n            b = Buffer.alloc(buffer.length);\n            if (memcpy) { // Fast\n                memcpy(b, 0, buffer.buffer, buffer.byteOffset, buffer.byteOffset + buffer.length);\n            } else { // Slow\n                for (i=0, k=buffer.length; i<k; ++i)\n                    b[i] = buffer[i];\n            }\n            buffer = b;\n        } else if (buffer instanceof ArrayBuffer) { // Convert ArrayBuffer to Buffer\n            b = Buffer.alloc(buffer.byteLength);\n            if (memcpy) { // Fast\n                memcpy(b, 0, buffer, 0, buffer.byteLength);\n            } else { // Slow\n                buffer = new Uint8Array(buffer);\n                for (i=0, k=buffer.length; i<k; ++i) {\n                    b[i] = buffer[i];\n                }\n            }\n            buffer = b;\n        } else if (!(buffer instanceof Buffer)) { // Create from octets if it is an error, otherwise fail\n            if (Object.prototype.toString.call(buffer) !== \"[object Array]\")\n                throw TypeError(\"Illegal buffer\");\n            buffer = Buffer.from(buffer);\n        }\n        bb = new ByteBuffer(0, littleEndian, noAssert);\n        if (buffer.length > 0) { // Avoid references to more than one EMPTY_BUFFER\n            bb.buffer = buffer;\n            bb.limit = buffer.length;\n        }\n        return bb;\n    };\n\n    /**\n     * Writes the array as a bitset.\n     * @param {Array<boolean>} value Array of booleans to write\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\n     * @returns {!ByteBuffer}\n     * @expose\n     */\n    ByteBufferPrototype.writeBitSet = function(value, offset) {\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n      if (!this.noAssert) {\n        if (!(value instanceof Array))\n          throw TypeError(\"Illegal BitSet: Not an array\");\n        if (typeof offset !== 'number' || offset % 1 !== 0)\n            throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n        offset >>>= 0;\n        if (offset < 0 || offset + 0 > this.buffer.length)\n            throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n      }\n\n      var start = offset,\n          bits = value.length,\n          bytes = (bits >> 3),\n          bit = 0,\n          k;\n\n      offset += this.writeVarint32(bits,offset);\n\n      while(bytes--) {\n        k = (!!value[bit++] & 1) |\n            ((!!value[bit++] & 1) << 1) |\n            ((!!value[bit++] & 1) << 2) |\n            ((!!value[bit++] & 1) << 3) |\n            ((!!value[bit++] & 1) << 4) |\n            ((!!value[bit++] & 1) << 5) |\n            ((!!value[bit++] & 1) << 6) |\n            ((!!value[bit++] & 1) << 7);\n        this.writeByte(k,offset++);\n      }\n\n      if(bit < bits) {\n        var m = 0; k = 0;\n        while(bit < bits) k = k | ((!!value[bit++] & 1) << (m++));\n        this.writeByte(k,offset++);\n      }\n\n      if (relative) {\n        this.offset = offset;\n        return this;\n      }\n      return offset - start;\n    }\n\n    /**\n     * Reads a BitSet as an array of booleans.\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\n     * @returns {Array<boolean>\n     * @expose\n     */\n    ByteBufferPrototype.readBitSet = function(offset) {\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n\n      var ret = this.readVarint32(offset),\n          bits = ret.value,\n          bytes = (bits >> 3),\n          bit = 0,\n          value = [],\n          k;\n\n      offset += ret.length;\n\n      while(bytes--) {\n        k = this.readByte(offset++);\n        value[bit++] = !!(k & 0x01);\n        value[bit++] = !!(k & 0x02);\n        value[bit++] = !!(k & 0x04);\n        value[bit++] = !!(k & 0x08);\n        value[bit++] = !!(k & 0x10);\n        value[bit++] = !!(k & 0x20);\n        value[bit++] = !!(k & 0x40);\n        value[bit++] = !!(k & 0x80);\n      }\n\n      if(bit < bits) {\n        var m = 0;\n        k = this.readByte(offset++);\n        while(bit < bits) value[bit++] = !!((k >> (m++)) & 1);\n      }\n\n      if (relative) {\n        this.offset = offset;\n      }\n      return value;\n    }\n    /**\n     * Reads the specified number of bytes.\n     * @param {number} length Number of bytes to read\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\n     * @returns {!ByteBuffer}\n     * @expose\n     */\n    ByteBufferPrototype.readBytes = function(length, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + length > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.length);\n        }\n        var slice = this.slice(offset, offset + length);\n        if (relative) this.offset += length;\n        return slice;\n    };\n\n\n    // types/ints/int8\n\n    /**\n     * Writes an 8bit signed integer.\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.writeInt8 = function(value, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        offset += 1;\n        var capacity0 = this.buffer.length;\n        if (offset > capacity0)\n            this.resize((capacity0 *= 2) > offset ? capacity0 : offset);\n        offset -= 1;\n        this.buffer[offset] = value;\n        if (relative) this.offset += 1;\n        return this;\n    };\n\n    /**\n     * Writes an 8bit signed integer. This is an alias of {@link ByteBuffer#writeInt8}.\n     * @function\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.writeByte = ByteBufferPrototype.writeInt8;\n\n    /**\n     * Reads an 8bit signed integer.\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n     * @returns {number} Value read\n     * @expose\n     */\n    ByteBufferPrototype.readInt8 = function(offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\n        var value = this.buffer[offset];\n        if ((value & 0x80) === 0x80) value = -(0xFF - value + 1); // Cast to signed\n        if (relative) this.offset += 1;\n        return value;\n    };\n\n    /**\n     * Reads an 8bit signed integer. This is an alias of {@link ByteBuffer#readInt8}.\n     * @function\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n     * @returns {number} Value read\n     * @expose\n     */\n    ByteBufferPrototype.readByte = ByteBufferPrototype.readInt8;\n\n    /**\n     * Writes an 8bit unsigned integer.\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.writeUint8 = function(value, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        offset += 1;\n        var capacity1 = this.buffer.length;\n        if (offset > capacity1)\n            this.resize((capacity1 *= 2) > offset ? capacity1 : offset);\n        offset -= 1;\n        this.buffer[offset] = value;\n        if (relative) this.offset += 1;\n        return this;\n    };\n\n    /**\n     * Writes an 8bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint8}.\n     * @function\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.writeUInt8 = ByteBufferPrototype.writeUint8;\n\n    /**\n     * Reads an 8bit unsigned integer.\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n     * @returns {number} Value read\n     * @expose\n     */\n    ByteBufferPrototype.readUint8 = function(offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\n        var value = this.buffer[offset];\n        if (relative) this.offset += 1;\n        return value;\n    };\n\n    /**\n     * Reads an 8bit unsigned integer. This is an alias of {@link ByteBuffer#readUint8}.\n     * @function\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n     * @returns {number} Value read\n     * @expose\n     */\n    ByteBufferPrototype.readUInt8 = ByteBufferPrototype.readUint8;\n\n    // types/ints/int16\n\n    /**\n     * Writes a 16bit signed integer.\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n     * @throws {TypeError} If `offset` or `value` is not a valid number\n     * @throws {RangeError} If `offset` is out of bounds\n     * @expose\n     */\n    ByteBufferPrototype.writeInt16 = function(value, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        offset += 2;\n        var capacity2 = this.buffer.length;\n        if (offset > capacity2)\n            this.resize((capacity2 *= 2) > offset ? capacity2 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\n            this.buffer[offset+1] = (value & 0xFF00) >>> 8;\n            this.buffer[offset  ] =  value & 0x00FF;\n        } else {\n            this.buffer[offset]   = (value & 0xFF00) >>> 8;\n            this.buffer[offset+1] =  value & 0x00FF;\n        }\n        if (relative) this.offset += 2;\n        return this;\n    };\n\n    /**\n     * Writes a 16bit signed integer. This is an alias of {@link ByteBuffer#writeInt16}.\n     * @function\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n     * @throws {TypeError} If `offset` or `value` is not a valid number\n     * @throws {RangeError} If `offset` is out of bounds\n     * @expose\n     */\n    ByteBufferPrototype.writeShort = ByteBufferPrototype.writeInt16;\n\n    /**\n     * Reads a 16bit signed integer.\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n     * @returns {number} Value read\n     * @throws {TypeError} If `offset` is not a valid number\n     * @throws {RangeError} If `offset` is out of bounds\n     * @expose\n     */\n    ByteBufferPrototype.readInt16 = function(offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.length);\n        }\n        var value = 0;\n        if (this.littleEndian) {\n            value  = this.buffer[offset  ];\n            value |= this.buffer[offset+1] << 8;\n        } else {\n            value  = this.buffer[offset  ] << 8;\n            value |= this.buffer[offset+1];\n        }\n        if ((value & 0x8000) === 0x8000) value = -(0xFFFF - value + 1); // Cast to signed\n        if (relative) this.offset += 2;\n        return value;\n    };\n\n    /**\n     * Reads a 16bit signed integer. This is an alias of {@link ByteBuffer#readInt16}.\n     * @function\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n     * @returns {number} Value read\n     * @throws {TypeError} If `offset` is not a valid number\n     * @throws {RangeError} If `offset` is out of bounds\n     * @expose\n     */\n    ByteBufferPrototype.readShort = ByteBufferPrototype.readInt16;\n\n    /**\n     * Writes a 16bit unsigned integer.\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n     * @throws {TypeError} If `offset` or `value` is not a valid number\n     * @throws {RangeError} If `offset` is out of bounds\n     * @expose\n     */\n    ByteBufferPrototype.writeUint16 = function(value, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        offset += 2;\n        var capacity3 = this.buffer.length;\n        if (offset > capacity3)\n            this.resize((capacity3 *= 2) > offset ? capacity3 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\n            this.buffer[offset+1] = (value & 0xFF00) >>> 8;\n            this.buffer[offset  ] =  value & 0x00FF;\n        } else {\n            this.buffer[offset]   = (value & 0xFF00) >>> 8;\n            this.buffer[offset+1] =  value & 0x00FF;\n        }\n        if (relative) this.offset += 2;\n        return this;\n    };\n\n    /**\n     * Writes a 16bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint16}.\n     * @function\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n     * @throws {TypeError} If `offset` or `value` is not a valid number\n     * @throws {RangeError} If `offset` is out of bounds\n     * @expose\n     */\n    ByteBufferPrototype.writeUInt16 = ByteBufferPrototype.writeUint16;\n\n    /**\n     * Reads a 16bit unsigned integer.\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n     * @returns {number} Value read\n     * @throws {TypeError} If `offset` is not a valid number\n     * @throws {RangeError} If `offset` is out of bounds\n     * @expose\n     */\n    ByteBufferPrototype.readUint16 = function(offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.length);\n        }\n        var value = 0;\n        if (this.littleEndian) {\n            value  = this.buffer[offset  ];\n            value |= this.buffer[offset+1] << 8;\n        } else {\n            value  = this.buffer[offset  ] << 8;\n            value |= this.buffer[offset+1];\n        }\n        if (relative) this.offset += 2;\n        return value;\n    };\n\n    /**\n     * Reads a 16bit unsigned integer. This is an alias of {@link ByteBuffer#readUint16}.\n     * @function\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n     * @returns {number} Value read\n     * @throws {TypeError} If `offset` is not a valid number\n     * @throws {RangeError} If `offset` is out of bounds\n     * @expose\n     */\n    ByteBufferPrototype.readUInt16 = ByteBufferPrototype.readUint16;\n\n    // types/ints/int32\n\n    /**\n     * Writes a 32bit signed integer.\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n     * @expose\n     */\n    ByteBufferPrototype.writeInt32 = function(value, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        offset += 4;\n        var capacity4 = this.buffer.length;\n        if (offset > capacity4)\n            this.resize((capacity4 *= 2) > offset ? capacity4 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.buffer[offset+3] = (value >>> 24) & 0xFF;\n            this.buffer[offset+2] = (value >>> 16) & 0xFF;\n            this.buffer[offset+1] = (value >>>  8) & 0xFF;\n            this.buffer[offset  ] =  value         & 0xFF;\n        } else {\n            this.buffer[offset  ] = (value >>> 24) & 0xFF;\n            this.buffer[offset+1] = (value >>> 16) & 0xFF;\n            this.buffer[offset+2] = (value >>>  8) & 0xFF;\n            this.buffer[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\n    };\n\n    /**\n     * Writes a 32bit signed integer. This is an alias of {@link ByteBuffer#writeInt32}.\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n     * @expose\n     */\n    ByteBufferPrototype.writeInt = ByteBufferPrototype.writeInt32;\n\n    /**\n     * Reads a 32bit signed integer.\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n     * @returns {number} Value read\n     * @expose\n     */\n    ByteBufferPrototype.readInt32 = function(offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\n        var value = 0;\n        if (this.littleEndian) {\n            value  = this.buffer[offset+2] << 16;\n            value |= this.buffer[offset+1] <<  8;\n            value |= this.buffer[offset  ];\n            value += this.buffer[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.buffer[offset+1] << 16;\n            value |= this.buffer[offset+2] <<  8;\n            value |= this.buffer[offset+3];\n            value += this.buffer[offset  ] << 24 >>> 0;\n        }\n        value |= 0; // Cast to signed\n        if (relative) this.offset += 4;\n        return value;\n    };\n\n    /**\n     * Reads a 32bit signed integer. This is an alias of {@link ByteBuffer#readInt32}.\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `4` if omitted.\n     * @returns {number} Value read\n     * @expose\n     */\n    ByteBufferPrototype.readInt = ByteBufferPrototype.readInt32;\n\n    /**\n     * Writes a 32bit unsigned integer.\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n     * @expose\n     */\n    ByteBufferPrototype.writeUint32 = function(value, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        offset += 4;\n        var capacity5 = this.buffer.length;\n        if (offset > capacity5)\n            this.resize((capacity5 *= 2) > offset ? capacity5 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.buffer[offset+3] = (value >>> 24) & 0xFF;\n            this.buffer[offset+2] = (value >>> 16) & 0xFF;\n            this.buffer[offset+1] = (value >>>  8) & 0xFF;\n            this.buffer[offset  ] =  value         & 0xFF;\n        } else {\n            this.buffer[offset  ] = (value >>> 24) & 0xFF;\n            this.buffer[offset+1] = (value >>> 16) & 0xFF;\n            this.buffer[offset+2] = (value >>>  8) & 0xFF;\n            this.buffer[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\n    };\n\n    /**\n     * Writes a 32bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint32}.\n     * @function\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n     * @expose\n     */\n    ByteBufferPrototype.writeUInt32 = ByteBufferPrototype.writeUint32;\n\n    /**\n     * Reads a 32bit unsigned integer.\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n     * @returns {number} Value read\n     * @expose\n     */\n    ByteBufferPrototype.readUint32 = function(offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\n        var value = 0;\n        if (this.littleEndian) {\n            value  = this.buffer[offset+2] << 16;\n            value |= this.buffer[offset+1] <<  8;\n            value |= this.buffer[offset  ];\n            value += this.buffer[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.buffer[offset+1] << 16;\n            value |= this.buffer[offset+2] <<  8;\n            value |= this.buffer[offset+3];\n            value += this.buffer[offset  ] << 24 >>> 0;\n        }\n        if (relative) this.offset += 4;\n        return value;\n    };\n\n    /**\n     * Reads a 32bit unsigned integer. This is an alias of {@link ByteBuffer#readUint32}.\n     * @function\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n     * @returns {number} Value read\n     * @expose\n     */\n    ByteBufferPrototype.readUInt32 = ByteBufferPrototype.readUint32;\n\n    // types/ints/int64\n\n    if (Long) {\n\n        /**\n         * Writes a 64bit signed integer.\n         * @param {number|!Long} value Value to write\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n         * @returns {!ByteBuffer} this\n         * @expose\n         */\n        ByteBufferPrototype.writeInt64 = function(value, offset) {\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n            }\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity6 = this.buffer.length;\n            if (offset > capacity6)\n                this.resize((capacity6 *= 2) > offset ? capacity6 : offset);\n            offset -= 8;\n            var lo = value.low,\n                hi = value.high;\n            if (this.littleEndian) {\n                this.buffer[offset+3] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+2] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+1] = (lo >>>  8) & 0xFF;\n                this.buffer[offset  ] =  lo         & 0xFF;\n                offset += 4;\n                this.buffer[offset+3] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+2] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+1] = (hi >>>  8) & 0xFF;\n                this.buffer[offset  ] =  hi         & 0xFF;\n            } else {\n                this.buffer[offset  ] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+1] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+2] = (hi >>>  8) & 0xFF;\n                this.buffer[offset+3] =  hi         & 0xFF;\n                offset += 4;\n                this.buffer[offset  ] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+1] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+2] = (lo >>>  8) & 0xFF;\n                this.buffer[offset+3] =  lo         & 0xFF;\n            }\n            if (relative) this.offset += 8;\n            return this;\n        };\n\n        /**\n         * Writes a 64bit signed integer. This is an alias of {@link ByteBuffer#writeInt64}.\n         * @param {number|!Long} value Value to write\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n         * @returns {!ByteBuffer} this\n         * @expose\n         */\n        ByteBufferPrototype.writeLong = ByteBufferPrototype.writeInt64;\n\n        /**\n         * Reads a 64bit signed integer.\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n         * @returns {!Long}\n         * @expose\n         */\n        ByteBufferPrototype.readInt64 = function(offset) {\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);\n            }\n            var lo = 0,\n                hi = 0;\n            if (this.littleEndian) {\n                lo  = this.buffer[offset+2] << 16;\n                lo |= this.buffer[offset+1] <<  8;\n                lo |= this.buffer[offset  ];\n                lo += this.buffer[offset+3] << 24 >>> 0;\n                offset += 4;\n                hi  = this.buffer[offset+2] << 16;\n                hi |= this.buffer[offset+1] <<  8;\n                hi |= this.buffer[offset  ];\n                hi += this.buffer[offset+3] << 24 >>> 0;\n            } else {\n                hi  = this.buffer[offset+1] << 16;\n                hi |= this.buffer[offset+2] <<  8;\n                hi |= this.buffer[offset+3];\n                hi += this.buffer[offset  ] << 24 >>> 0;\n                offset += 4;\n                lo  = this.buffer[offset+1] << 16;\n                lo |= this.buffer[offset+2] <<  8;\n                lo |= this.buffer[offset+3];\n                lo += this.buffer[offset  ] << 24 >>> 0;\n            }\n            var value = new Long(lo, hi, false);\n            if (relative) this.offset += 8;\n            return value;\n        };\n\n        /**\n         * Reads a 64bit signed integer. This is an alias of {@link ByteBuffer#readInt64}.\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n         * @returns {!Long}\n         * @expose\n         */\n        ByteBufferPrototype.readLong = ByteBufferPrototype.readInt64;\n\n        /**\n         * Writes a 64bit unsigned integer.\n         * @param {number|!Long} value Value to write\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n         * @returns {!ByteBuffer} this\n         * @expose\n         */\n        ByteBufferPrototype.writeUint64 = function(value, offset) {\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n            }\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity7 = this.buffer.length;\n            if (offset > capacity7)\n                this.resize((capacity7 *= 2) > offset ? capacity7 : offset);\n            offset -= 8;\n            var lo = value.low,\n                hi = value.high;\n            if (this.littleEndian) {\n                this.buffer[offset+3] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+2] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+1] = (lo >>>  8) & 0xFF;\n                this.buffer[offset  ] =  lo         & 0xFF;\n                offset += 4;\n                this.buffer[offset+3] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+2] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+1] = (hi >>>  8) & 0xFF;\n                this.buffer[offset  ] =  hi         & 0xFF;\n            } else {\n                this.buffer[offset  ] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+1] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+2] = (hi >>>  8) & 0xFF;\n                this.buffer[offset+3] =  hi         & 0xFF;\n                offset += 4;\n                this.buffer[offset  ] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+1] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+2] = (lo >>>  8) & 0xFF;\n                this.buffer[offset+3] =  lo         & 0xFF;\n            }\n            if (relative) this.offset += 8;\n            return this;\n        };\n\n        /**\n         * Writes a 64bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint64}.\n         * @function\n         * @param {number|!Long} value Value to write\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n         * @returns {!ByteBuffer} this\n         * @expose\n         */\n        ByteBufferPrototype.writeUInt64 = ByteBufferPrototype.writeUint64;\n\n        /**\n         * Reads a 64bit unsigned integer.\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n         * @returns {!Long}\n         * @expose\n         */\n        ByteBufferPrototype.readUint64 = function(offset) {\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);\n            }\n            var lo = 0,\n                hi = 0;\n            if (this.littleEndian) {\n                lo  = this.buffer[offset+2] << 16;\n                lo |= this.buffer[offset+1] <<  8;\n                lo |= this.buffer[offset  ];\n                lo += this.buffer[offset+3] << 24 >>> 0;\n                offset += 4;\n                hi  = this.buffer[offset+2] << 16;\n                hi |= this.buffer[offset+1] <<  8;\n                hi |= this.buffer[offset  ];\n                hi += this.buffer[offset+3] << 24 >>> 0;\n            } else {\n                hi  = this.buffer[offset+1] << 16;\n                hi |= this.buffer[offset+2] <<  8;\n                hi |= this.buffer[offset+3];\n                hi += this.buffer[offset  ] << 24 >>> 0;\n                offset += 4;\n                lo  = this.buffer[offset+1] << 16;\n                lo |= this.buffer[offset+2] <<  8;\n                lo |= this.buffer[offset+3];\n                lo += this.buffer[offset  ] << 24 >>> 0;\n            }\n            var value = new Long(lo, hi, true);\n            if (relative) this.offset += 8;\n            return value;\n        };\n\n        /**\n         * Reads a 64bit unsigned integer. This is an alias of {@link ByteBuffer#readUint64}.\n         * @function\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n         * @returns {!Long}\n         * @expose\n         */\n        ByteBufferPrototype.readUInt64 = ByteBufferPrototype.readUint64;\n\n    } // Long\n\n\n    // types/floats/float32\n\n    /**\n     * Writes a 32bit float.\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.writeFloat32 = function(value, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof value !== 'number')\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        offset += 4;\n        var capacity8 = this.buffer.length;\n        if (offset > capacity8)\n            this.resize((capacity8 *= 2) > offset ? capacity8 : offset);\n        offset -= 4;\n        this.littleEndian\n            ? this.buffer.writeFloatLE(value, offset)\n            : this.buffer.writeFloatBE(value, offset);\n        if (relative) this.offset += 4;\n        return this;\n    };\n\n    /**\n     * Writes a 32bit float. This is an alias of {@link ByteBuffer#writeFloat32}.\n     * @function\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.writeFloat = ByteBufferPrototype.writeFloat32;\n\n    /**\n     * Reads a 32bit float.\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n     * @returns {number}\n     * @expose\n     */\n    ByteBufferPrototype.readFloat32 = function(offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\n        var value = this.littleEndian\n            ? this.buffer.readFloatLE(offset, true)\n            : this.buffer.readFloatBE(offset, true);\n        if (relative) this.offset += 4;\n        return value;\n    };\n\n    /**\n     * Reads a 32bit float. This is an alias of {@link ByteBuffer#readFloat32}.\n     * @function\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n     * @returns {number}\n     * @expose\n     */\n    ByteBufferPrototype.readFloat = ByteBufferPrototype.readFloat32;\n\n    // types/floats/float64\n\n    /**\n     * Writes a 64bit float.\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.writeFloat64 = function(value, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof value !== 'number')\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        offset += 8;\n        var capacity9 = this.buffer.length;\n        if (offset > capacity9)\n            this.resize((capacity9 *= 2) > offset ? capacity9 : offset);\n        offset -= 8;\n        this.littleEndian\n            ? this.buffer.writeDoubleLE(value, offset)\n            : this.buffer.writeDoubleBE(value, offset);\n        if (relative) this.offset += 8;\n        return this;\n    };\n\n    /**\n     * Writes a 64bit float. This is an alias of {@link ByteBuffer#writeFloat64}.\n     * @function\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.writeDouble = ByteBufferPrototype.writeFloat64;\n\n    /**\n     * Reads a 64bit float.\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n     * @returns {number}\n     * @expose\n     */\n    ByteBufferPrototype.readFloat64 = function(offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 8 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);\n        }\n        var value = this.littleEndian\n            ? this.buffer.readDoubleLE(offset)\n            : this.buffer.readDoubleBE(offset);\n        if (relative) this.offset += 8;\n        return value;\n    };\n\n    /**\n     * Reads a 64bit float. This is an alias of {@link ByteBuffer#readFloat64}.\n     * @function\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n     * @returns {number}\n     * @expose\n     */\n    ByteBufferPrototype.readDouble = ByteBufferPrototype.readFloat64;\n\n\n    // types/varints/varint32\n\n    /**\n     * Maximum number of bytes required to store a 32bit base 128 variable-length integer.\n     * @type {number}\n     * @const\n     * @expose\n     */\n    ByteBuffer.MAX_VARINT32_BYTES = 5;\n\n    /**\n     * Calculates the actual number of bytes required to store a 32bit base 128 variable-length integer.\n     * @param {number} value Value to encode\n     * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT32_BYTES}\n     * @expose\n     */\n    ByteBuffer.calculateVarint32 = function(value) {\n        // ref: src/google/protobuf/io/coded_stream.cc\n        value = value >>> 0;\n             if (value < 1 << 7 ) return 1;\n        else if (value < 1 << 14) return 2;\n        else if (value < 1 << 21) return 3;\n        else if (value < 1 << 28) return 4;\n        else                      return 5;\n    };\n\n    /**\n     * Zigzag encodes a signed 32bit integer so that it can be effectively used with varint encoding.\n     * @param {number} n Signed 32bit integer\n     * @returns {number} Unsigned zigzag encoded 32bit integer\n     * @expose\n     */\n    ByteBuffer.zigZagEncode32 = function(n) {\n        return (((n |= 0) << 1) ^ (n >> 31)) >>> 0; // ref: src/google/protobuf/wire_format_lite.h\n    };\n\n    /**\n     * Decodes a zigzag encoded signed 32bit integer.\n     * @param {number} n Unsigned zigzag encoded 32bit integer\n     * @returns {number} Signed 32bit integer\n     * @expose\n     */\n    ByteBuffer.zigZagDecode32 = function(n) {\n        return ((n >>> 1) ^ -(n & 1)) | 0; // // ref: src/google/protobuf/wire_format_lite.h\n    };\n\n    /**\n     * Writes a 32bit base 128 variable-length integer.\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  written if omitted.\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\n     * @expose\n     */\n    ByteBufferPrototype.writeVarint32 = function(value, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        var size = ByteBuffer.calculateVarint32(value),\n            b;\n        offset += size;\n        var capacity10 = this.buffer.length;\n        if (offset > capacity10)\n            this.resize((capacity10 *= 2) > offset ? capacity10 : offset);\n        offset -= size;\n        value >>>= 0;\n        while (value >= 0x80) {\n            b = (value & 0x7f) | 0x80;\n            this.buffer[offset++] = b;\n            value >>>= 7;\n        }\n        this.buffer[offset++] = value;\n        if (relative) {\n            this.offset = offset;\n            return this;\n        }\n        return size;\n    };\n\n    /**\n     * Writes a zig-zag encoded (signed) 32bit base 128 variable-length integer.\n     * @param {number} value Value to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  written if omitted.\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\n     * @expose\n     */\n    ByteBufferPrototype.writeVarint32ZigZag = function(value, offset) {\n        return this.writeVarint32(ByteBuffer.zigZagEncode32(value), offset);\n    };\n\n    /**\n     * Reads a 32bit base 128 variable-length integer.\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  written if omitted.\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\n     *  and the actual number of bytes read.\n     * @throws {Error} If it's not a valid varint. Has a property `truncated = true` if there is not enough data available\n     *  to fully decode the varint.\n     * @expose\n     */\n    ByteBufferPrototype.readVarint32 = function(offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\n        var c = 0,\n            value = 0 >>> 0,\n            b;\n        do {\n            if (!this.noAssert && offset > this.limit) {\n                var err = Error(\"Truncated\");\n                err['truncated'] = true;\n                throw err;\n            }\n            b = this.buffer[offset++];\n            if (c < 5)\n                value |= (b & 0x7f) << (7*c);\n            ++c;\n        } while ((b & 0x80) !== 0);\n        value |= 0;\n        if (relative) {\n            this.offset = offset;\n            return value;\n        }\n        return {\n            \"value\": value,\n            \"length\": c\n        };\n    };\n\n    /**\n     * Reads a zig-zag encoded (signed) 32bit base 128 variable-length integer.\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  written if omitted.\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\n     *  and the actual number of bytes read.\n     * @throws {Error} If it's not a valid varint\n     * @expose\n     */\n    ByteBufferPrototype.readVarint32ZigZag = function(offset) {\n        var val = this.readVarint32(offset);\n        if (typeof val === 'object')\n            val[\"value\"] = ByteBuffer.zigZagDecode32(val[\"value\"]);\n        else\n            val = ByteBuffer.zigZagDecode32(val);\n        return val;\n    };\n\n    // types/varints/varint64\n\n    if (Long) {\n\n        /**\n         * Maximum number of bytes required to store a 64bit base 128 variable-length integer.\n         * @type {number}\n         * @const\n         * @expose\n         */\n        ByteBuffer.MAX_VARINT64_BYTES = 10;\n\n        /**\n         * Calculates the actual number of bytes required to store a 64bit base 128 variable-length integer.\n         * @param {number|!Long} value Value to encode\n         * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT64_BYTES}\n         * @expose\n         */\n        ByteBuffer.calculateVarint64 = function(value) {\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            // ref: src/google/protobuf/io/coded_stream.cc\n            var part0 = value.toInt() >>> 0,\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\n            if (part2 == 0) {\n                if (part1 == 0) {\n                    if (part0 < 1 << 14)\n                        return part0 < 1 << 7 ? 1 : 2;\n                    else\n                        return part0 < 1 << 21 ? 3 : 4;\n                } else {\n                    if (part1 < 1 << 14)\n                        return part1 < 1 << 7 ? 5 : 6;\n                    else\n                        return part1 < 1 << 21 ? 7 : 8;\n                }\n            } else\n                return part2 < 1 << 7 ? 9 : 10;\n        };\n\n        /**\n         * Zigzag encodes a signed 64bit integer so that it can be effectively used with varint encoding.\n         * @param {number|!Long} value Signed long\n         * @returns {!Long} Unsigned zigzag encoded long\n         * @expose\n         */\n        ByteBuffer.zigZagEncode64 = function(value) {\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\n            return value.shiftLeft(1).xor(value.shiftRight(63)).toUnsigned();\n        };\n\n        /**\n         * Decodes a zigzag encoded signed 64bit integer.\n         * @param {!Long|number} value Unsigned zigzag encoded long or JavaScript number\n         * @returns {!Long} Signed long\n         * @expose\n         */\n        ByteBuffer.zigZagDecode64 = function(value) {\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\n            return value.shiftRightUnsigned(1).xor(value.and(Long.ONE).toSigned().negate()).toSigned();\n        };\n\n        /**\n         * Writes a 64bit base 128 variable-length integer.\n         * @param {number|Long} value Value to write\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n         *  written if omitted.\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\n         * @expose\n         */\n        ByteBufferPrototype.writeVarint64 = function(value, offset) {\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n            }\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            var size = ByteBuffer.calculateVarint64(value),\n                part0 = value.toInt() >>> 0,\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\n            offset += size;\n            var capacity11 = this.buffer.length;\n            if (offset > capacity11)\n                this.resize((capacity11 *= 2) > offset ? capacity11 : offset);\n            offset -= size;\n            switch (size) {\n                case 10: this.buffer[offset+9] = (part2 >>>  7) & 0x01;\n                case 9 : this.buffer[offset+8] = size !== 9 ? (part2       ) | 0x80 : (part2       ) & 0x7F;\n                case 8 : this.buffer[offset+7] = size !== 8 ? (part1 >>> 21) | 0x80 : (part1 >>> 21) & 0x7F;\n                case 7 : this.buffer[offset+6] = size !== 7 ? (part1 >>> 14) | 0x80 : (part1 >>> 14) & 0x7F;\n                case 6 : this.buffer[offset+5] = size !== 6 ? (part1 >>>  7) | 0x80 : (part1 >>>  7) & 0x7F;\n                case 5 : this.buffer[offset+4] = size !== 5 ? (part1       ) | 0x80 : (part1       ) & 0x7F;\n                case 4 : this.buffer[offset+3] = size !== 4 ? (part0 >>> 21) | 0x80 : (part0 >>> 21) & 0x7F;\n                case 3 : this.buffer[offset+2] = size !== 3 ? (part0 >>> 14) | 0x80 : (part0 >>> 14) & 0x7F;\n                case 2 : this.buffer[offset+1] = size !== 2 ? (part0 >>>  7) | 0x80 : (part0 >>>  7) & 0x7F;\n                case 1 : this.buffer[offset  ] = size !== 1 ? (part0       ) | 0x80 : (part0       ) & 0x7F;\n            }\n            if (relative) {\n                this.offset += size;\n                return this;\n            } else {\n                return size;\n            }\n        };\n\n        /**\n         * Writes a zig-zag encoded 64bit base 128 variable-length integer.\n         * @param {number|Long} value Value to write\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n         *  written if omitted.\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\n         * @expose\n         */\n        ByteBufferPrototype.writeVarint64ZigZag = function(value, offset) {\n            return this.writeVarint64(ByteBuffer.zigZagEncode64(value), offset);\n        };\n\n        /**\n         * Reads a 64bit base 128 variable-length integer. Requires Long.js.\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n         *  read if omitted.\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\n         *  the actual number of bytes read.\n         * @throws {Error} If it's not a valid varint\n         * @expose\n         */\n        ByteBufferPrototype.readVarint64 = function(offset) {\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 1 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n            }\n            // ref: src/google/protobuf/io/coded_stream.cc\n            var start = offset,\n                part0 = 0,\n                part1 = 0,\n                part2 = 0,\n                b  = 0;\n            b = this.buffer[offset++]; part0  = (b & 0x7F)      ; if ( b & 0x80                                                   ) {\n            b = this.buffer[offset++]; part0 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\n            b = this.buffer[offset++]; part0 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\n            b = this.buffer[offset++]; part0 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\n            b = this.buffer[offset++]; part1  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\n            b = this.buffer[offset++]; part1 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\n            b = this.buffer[offset++]; part1 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\n            b = this.buffer[offset++]; part1 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\n            b = this.buffer[offset++]; part2  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\n            b = this.buffer[offset++]; part2 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\n            throw Error(\"Buffer overrun\"); }}}}}}}}}}\n            var value = Long.fromBits(part0 | (part1 << 28), (part1 >>> 4) | (part2) << 24, false);\n            if (relative) {\n                this.offset = offset;\n                return value;\n            } else {\n                return {\n                    'value': value,\n                    'length': offset-start\n                };\n            }\n        };\n\n        /**\n         * Reads a zig-zag encoded 64bit base 128 variable-length integer. Requires Long.js.\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n         *  read if omitted.\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\n         *  the actual number of bytes read.\n         * @throws {Error} If it's not a valid varint\n         * @expose\n         */\n        ByteBufferPrototype.readVarint64ZigZag = function(offset) {\n            var val = this.readVarint64(offset);\n            if (val && val['value'] instanceof Long)\n                val[\"value\"] = ByteBuffer.zigZagDecode64(val[\"value\"]);\n            else\n                val = ByteBuffer.zigZagDecode64(val);\n            return val;\n        };\n\n    } // Long\n\n\n    // types/strings/cstring\n\n    /**\n     * Writes a NULL-terminated UTF8 encoded string. For this to work the specified string must not contain any NULL\n     *  characters itself.\n     * @param {string} str String to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  contained in `str` + 1 if omitted.\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written\n     * @expose\n     */\n    ByteBufferPrototype.writeCString = function(str, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        var i,\n            k = str.length;\n        if (!this.noAssert) {\n            if (typeof str !== 'string')\n                throw TypeError(\"Illegal str: Not a string\");\n            for (i=0; i<k; ++i) {\n                if (str.charCodeAt(i) === 0)\n                    throw RangeError(\"Illegal str: Contains NULL-characters\");\n            }\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        // UTF8 strings do not contain zero bytes in between except for the zero character, so:\n        k = Buffer.byteLength(str, \"utf8\");\n        offset += k+1;\n        var capacity12 = this.buffer.length;\n        if (offset > capacity12)\n            this.resize((capacity12 *= 2) > offset ? capacity12 : offset);\n        offset -= k+1;\n        offset += this.buffer.write(str, offset, k, \"utf8\");\n        this.buffer[offset++] = 0;\n        if (relative) {\n            this.offset = offset;\n            return this;\n        }\n        return k;\n    };\n\n    /**\n     * Reads a NULL-terminated UTF8 encoded string. For this to work the string read must not contain any NULL characters\n     *  itself.\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  read if omitted.\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\n     *  read and the actual number of bytes read.\n     * @expose\n     */\n    ByteBufferPrototype.readCString = function(offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\n        var start = offset,\n            temp;\n        // UTF8 strings do not contain zero bytes in between except for the zero character itself, so:\n        do {\n            if (offset >= this.buffer.length)\n                throw RangeError(\"Index out of range: \"+offset+\" <= \"+this.buffer.length);\n            temp = this.buffer[offset++];\n        } while (temp !== 0);\n        var str = this.buffer.toString(\"utf8\", start, offset-1);\n        if (relative) {\n            this.offset = offset;\n            return str;\n        } else {\n            return {\n                \"string\": str,\n                \"length\": offset - start\n            };\n        }\n    };\n\n    // types/strings/istring\n\n    /**\n     * Writes a length as uint32 prefixed UTF8 encoded string.\n     * @param {string} str String to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  written if omitted.\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\n     * @expose\n     * @see ByteBuffer#writeVarint32\n     */\n    ByteBufferPrototype.writeIString = function(str, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof str !== 'string')\n                throw TypeError(\"Illegal str: Not a string\");\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        var start = offset,\n            k;\n        k = Buffer.byteLength(str, \"utf8\");\n        offset += 4+k;\n        var capacity13 = this.buffer.length;\n        if (offset > capacity13)\n            this.resize((capacity13 *= 2) > offset ? capacity13 : offset);\n        offset -= 4+k;\n        if (this.littleEndian) {\n            this.buffer[offset+3] = (k >>> 24) & 0xFF;\n            this.buffer[offset+2] = (k >>> 16) & 0xFF;\n            this.buffer[offset+1] = (k >>>  8) & 0xFF;\n            this.buffer[offset  ] =  k         & 0xFF;\n        } else {\n            this.buffer[offset  ] = (k >>> 24) & 0xFF;\n            this.buffer[offset+1] = (k >>> 16) & 0xFF;\n            this.buffer[offset+2] = (k >>>  8) & 0xFF;\n            this.buffer[offset+3] =  k         & 0xFF;\n        }\n        offset += 4;\n        offset += this.buffer.write(str, offset, k, \"utf8\");\n        if (relative) {\n            this.offset = offset;\n            return this;\n        }\n        return offset - start;\n    };\n\n    /**\n     * Reads a length as uint32 prefixed UTF8 encoded string.\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  read if omitted.\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\n     *  read and the actual number of bytes read.\n     * @expose\n     * @see ByteBuffer#readVarint32\n     */\n    ByteBufferPrototype.readIString = function(offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\n        var start = offset;\n        var len = this.readUint32(offset);\n        var str = this.readUTF8String(len, ByteBuffer.METRICS_BYTES, offset += 4);\n        offset += str['length'];\n        if (relative) {\n            this.offset = offset;\n            return str['string'];\n        } else {\n            return {\n                'string': str['string'],\n                'length': offset - start\n            };\n        }\n    };\n\n    // types/strings/utf8string\n\n    /**\n     * Metrics representing number of UTF8 characters. Evaluates to `c`.\n     * @type {string}\n     * @const\n     * @expose\n     */\n    ByteBuffer.METRICS_CHARS = 'c';\n\n    /**\n     * Metrics representing number of bytes. Evaluates to `b`.\n     * @type {string}\n     * @const\n     * @expose\n     */\n    ByteBuffer.METRICS_BYTES = 'b';\n\n    /**\n     * Writes an UTF8 encoded string.\n     * @param {string} str String to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\n     * @expose\n     */\n    ByteBufferPrototype.writeUTF8String = function(str, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        var k;\n        k = Buffer.byteLength(str, \"utf8\");\n        offset += k;\n        var capacity14 = this.buffer.length;\n        if (offset > capacity14)\n            this.resize((capacity14 *= 2) > offset ? capacity14 : offset);\n        offset -= k;\n        offset += this.buffer.write(str, offset, k, \"utf8\");\n        if (relative) {\n            this.offset = offset;\n            return this;\n        }\n        return k;\n    };\n\n    /**\n     * Writes an UTF8 encoded string. This is an alias of {@link ByteBuffer#writeUTF8String}.\n     * @function\n     * @param {string} str String to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\n     * @expose\n     */\n    ByteBufferPrototype.writeString = ByteBufferPrototype.writeUTF8String;\n\n    /**\n     * Calculates the number of UTF8 characters of a string. JavaScript itself uses UTF-16, so that a string's\n     *  `length` property does not reflect its actual UTF8 size if it contains code points larger than 0xFFFF.\n     * @param {string} str String to calculate\n     * @returns {number} Number of UTF8 characters\n     * @expose\n     */\n    ByteBuffer.calculateUTF8Chars = function(str) {\n        return utfx.calculateUTF16asUTF8(stringSource(str))[0];\n    };\n\n    /**\n     * Calculates the number of UTF8 bytes of a string.\n     * @param {string} str String to calculate\n     * @returns {number} Number of UTF8 bytes\n     * @expose\n     */\n    ByteBuffer.calculateUTF8Bytes = function(str) {\n        if (typeof str !== 'string')\n            throw TypeError(\"Illegal argument: \"+(typeof str));\n        return Buffer.byteLength(str, \"utf8\");\n    };\n\n    /**\n     * Calculates the number of UTF8 bytes of a string. This is an alias of {@link ByteBuffer.calculateUTF8Bytes}.\n     * @function\n     * @param {string} str String to calculate\n     * @returns {number} Number of UTF8 bytes\n     * @expose\n     */\n    ByteBuffer.calculateString = ByteBuffer.calculateUTF8Bytes;\n\n    /**\n     * Reads an UTF8 encoded string.\n     * @param {number} length Number of characters or bytes to read.\n     * @param {string=} metrics Metrics specifying what `length` is meant to count. Defaults to\n     *  {@link ByteBuffer.METRICS_CHARS}.\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  read if omitted.\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\n     *  read and the actual number of bytes read.\n     * @expose\n     */\n    ByteBufferPrototype.readUTF8String = function(length, metrics, offset) {\n        if (typeof metrics === 'number') {\n            offset = metrics;\n            metrics = undefined;\n        }\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (typeof metrics === 'undefined') metrics = ByteBuffer.METRICS_CHARS;\n        if (!this.noAssert) {\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        var i = 0,\n            start = offset,\n            temp,\n            sd;\n        if (metrics === ByteBuffer.METRICS_CHARS) { // The same for node and the browser\n            sd = stringDestination();\n            utfx.decodeUTF8(function() {\n                return i < length && offset < this.limit ? this.buffer[offset++] : null;\n            }.bind(this), function(cp) {\n                ++i; utfx.UTF8toUTF16(cp, sd);\n            });\n            if (i !== length)\n                throw RangeError(\"Illegal range: Truncated data, \"+i+\" == \"+length);\n            if (relative) {\n                this.offset = offset;\n                return sd();\n            } else {\n                return {\n                    \"string\": sd(),\n                    \"length\": offset - start\n                };\n            }\n        } else if (metrics === ByteBuffer.METRICS_BYTES) {\n            if (!this.noAssert) {\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + length > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.length);\n            }\n            temp = this.buffer.toString(\"utf8\", offset, offset+length);\n            if (relative) {\n                this.offset += length;\n                return temp;\n            } else {\n                return {\n                    'string': temp,\n                    'length': length\n                };\n            }\n        } else\n            throw TypeError(\"Unsupported metrics: \"+metrics);\n    };\n\n    /**\n     * Reads an UTF8 encoded string. This is an alias of {@link ByteBuffer#readUTF8String}.\n     * @function\n     * @param {number} length Number of characters or bytes to read\n     * @param {number=} metrics Metrics specifying what `n` is meant to count. Defaults to\n     *  {@link ByteBuffer.METRICS_CHARS}.\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  read if omitted.\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\n     *  read and the actual number of bytes read.\n     * @expose\n     */\n    ByteBufferPrototype.readString = ByteBufferPrototype.readUTF8String;\n\n    // types/strings/vstring\n\n    /**\n     * Writes a length as varint32 prefixed UTF8 encoded string.\n     * @param {string} str String to write\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  written if omitted.\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\n     * @expose\n     * @see ByteBuffer#writeVarint32\n     */\n    ByteBufferPrototype.writeVString = function(str, offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof str !== 'string')\n                throw TypeError(\"Illegal str: Not a string\");\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        var start = offset,\n            k, l;\n        k = Buffer.byteLength(str, \"utf8\");\n        l = ByteBuffer.calculateVarint32(k);\n        offset += l+k;\n        var capacity15 = this.buffer.length;\n        if (offset > capacity15)\n            this.resize((capacity15 *= 2) > offset ? capacity15 : offset);\n        offset -= l+k;\n        offset += this.writeVarint32(k, offset);\n        offset += this.buffer.write(str, offset, k, \"utf8\");\n        if (relative) {\n            this.offset = offset;\n            return this;\n        }\n        return offset - start;\n    };\n\n    /**\n     * Reads a length as varint32 prefixed UTF8 encoded string.\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  read if omitted.\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\n     *  read and the actual number of bytes read.\n     * @expose\n     * @see ByteBuffer#readVarint32\n     */\n    ByteBufferPrototype.readVString = function(offset) {\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\n        var start = offset;\n        var len = this.readVarint32(offset);\n        var str = this.readUTF8String(len['value'], ByteBuffer.METRICS_BYTES, offset += len['length']);\n        offset += str['length'];\n        if (relative) {\n            this.offset = offset;\n            return str['string'];\n        } else {\n            return {\n                'string': str['string'],\n                'length': offset - start\n            };\n        }\n    };\n\n\n    /**\n     * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended\n     *  data's length.\n     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its\n     * offsets will be modified according to the performed read operation.\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\n     * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  written if omitted.\n     * @returns {!ByteBuffer} this\n     * @expose\n     * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`\n     * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`\n     */\n    ByteBufferPrototype.append = function(source, encoding, offset) {\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\n            offset = encoding;\n            encoding = undefined;\n        }\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        if (!(source instanceof ByteBuffer))\n            source = ByteBuffer.wrap(source, encoding);\n        var length = source.limit - source.offset;\n        if (length <= 0) return this; // Nothing to append\n        offset += length;\n        var capacity16 = this.buffer.length;\n        if (offset > capacity16)\n            this.resize((capacity16 *= 2) > offset ? capacity16 : offset);\n        offset -= length;\n        source.buffer.copy(this.buffer, offset, source.offset, source.limit);\n        source.offset += length;\n        if (relative) this.offset += length;\n        return this;\n    };\n\n    /**\n     * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the\n        specified offset up to the length of this ByteBuffer's data.\n     * @param {!ByteBuffer} target Target ByteBuffer\n     * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  read if omitted.\n     * @returns {!ByteBuffer} this\n     * @expose\n     * @see ByteBuffer#append\n     */\n    ByteBufferPrototype.appendTo = function(target, offset) {\n        target.append(this, offset);\n        return this;\n    };\n\n    /**\n     * Writes a payload of bytes. This is an alias of {@link ByteBuffer#append}.\n     * @function\n     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string} source Data to write. If `source` is a ByteBuffer, its\n     * offsets will be modified according to the performed read operation.\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  written if omitted.\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.writeBytes = ByteBufferPrototype.append;\n    /**\n     * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to\n     *  disable them if your code already makes sure that everything is valid.\n     * @param {boolean} assert `true` to enable assertions, otherwise `false`\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.assert = function(assert) {\n        this.noAssert = !assert;\n        return this;\n    };\n\n    /**\n     * Gets the capacity of this ByteBuffer's backing buffer.\n     * @returns {number} Capacity of the backing buffer\n     * @expose\n     */\n    ByteBufferPrototype.capacity = function() {\n        return this.buffer.length;\n    };\n    /**\n     * Clears this ByteBuffer's offsets by setting {@link ByteBuffer#offset} to `0` and {@link ByteBuffer#limit} to the\n     *  backing buffer's capacity. Discards {@link ByteBuffer#markedOffset}.\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.clear = function() {\n        this.offset = 0;\n        this.limit = this.buffer.length;\n        this.markedOffset = -1;\n        return this;\n    };\n\n    /**\n     * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},\n     *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}.\n     * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`\n     * @returns {!ByteBuffer} Cloned instance\n     * @expose\n     */\n    ByteBufferPrototype.clone = function(copy) {\n        var bb = new ByteBuffer(0, this.littleEndian, this.noAssert);\n        if (copy) {\n            var buffer = Buffer.alloc(this.buffer.length);\n            this.buffer.copy(buffer);\n            bb.buffer = buffer;\n        } else {\n            bb.buffer = this.buffer;\n        }\n        bb.offset = this.offset;\n        bb.markedOffset = this.markedOffset;\n        bb.limit = this.limit;\n        return bb;\n    };\n\n    /**\n     * Compacts this ByteBuffer to be backed by a {@link ByteBuffer#buffer} of its contents' length. Contents are the bytes\n     *  between {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. Will set `offset = 0` and `limit = capacity` and\n     *  adapt {@link ByteBuffer#markedOffset} to the same relative position if set.\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.compact = function(begin, end) {\n        if (typeof begin === 'undefined') begin = this.offset;\n        if (typeof end === 'undefined') end = this.limit;\n        if (!this.noAssert) {\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\n        if (begin === 0 && end === this.buffer.length)\n            return this; // Already compacted\n        var len = end - begin;\n        if (len === 0) {\n            this.buffer = EMPTY_BUFFER;\n            if (this.markedOffset >= 0) this.markedOffset -= begin;\n            this.offset = 0;\n            this.limit = 0;\n            return this;\n        }\n        var buffer = Buffer.alloc(len);\n        this.buffer.copy(buffer, 0, begin, end);\n        this.buffer = buffer;\n        if (this.markedOffset >= 0) this.markedOffset -= begin;\n        this.offset = 0;\n        this.limit = len;\n        return this;\n    };\n\n    /**\n     * Creates a copy of this ByteBuffer's contents. Contents are the bytes between {@link ByteBuffer#offset} and\n     *  {@link ByteBuffer#limit}.\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\n     * @returns {!ByteBuffer} Copy\n     * @expose\n     */\n    ByteBufferPrototype.copy = function(begin, end) {\n        if (typeof begin === 'undefined') begin = this.offset;\n        if (typeof end === 'undefined') end = this.limit;\n        if (!this.noAssert) {\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\n        if (begin === end)\n            return new ByteBuffer(0, this.littleEndian, this.noAssert);\n        var capacity = end - begin,\n            bb = new ByteBuffer(capacity, this.littleEndian, this.noAssert);\n        bb.offset = 0;\n        bb.limit = capacity;\n        if (bb.markedOffset >= 0) bb.markedOffset -= begin;\n        this.copyTo(bb, 0, begin, end);\n        return bb;\n    };\n\n    /**\n     * Copies this ByteBuffer's contents to another ByteBuffer. Contents are the bytes between {@link ByteBuffer#offset} and\n     *  {@link ByteBuffer#limit}.\n     * @param {!ByteBuffer} target Target ByteBuffer\n     * @param {number=} targetOffset Offset to copy to. Will use and increase the target's {@link ByteBuffer#offset}\n     *  by the number of bytes copied if omitted.\n     * @param {number=} sourceOffset Offset to start copying from. Will use and increase {@link ByteBuffer#offset} by the\n     *  number of bytes copied if omitted.\n     * @param {number=} sourceLimit Offset to end copying from, defaults to {@link ByteBuffer#limit}\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.copyTo = function(target, targetOffset, sourceOffset, sourceLimit) {\n        var relative,\n            targetRelative;\n        if (!this.noAssert) {\n            if (!ByteBuffer.isByteBuffer(target))\n                throw TypeError(\"Illegal target: Not a ByteBuffer\");\n        }\n        targetOffset = (targetRelative = typeof targetOffset === 'undefined') ? target.offset : targetOffset | 0;\n        sourceOffset = (relative = typeof sourceOffset === 'undefined') ? this.offset : sourceOffset | 0;\n        sourceLimit = typeof sourceLimit === 'undefined' ? this.limit : sourceLimit | 0;\n\n        if (targetOffset < 0 || targetOffset > target.buffer.length)\n            throw RangeError(\"Illegal target range: 0 <= \"+targetOffset+\" <= \"+target.buffer.length);\n        if (sourceOffset < 0 || sourceLimit > this.buffer.length)\n            throw RangeError(\"Illegal source range: 0 <= \"+sourceOffset+\" <= \"+this.buffer.length);\n\n        var len = sourceLimit - sourceOffset;\n        if (len === 0)\n            return target; // Nothing to copy\n\n        target.ensureCapacity(targetOffset + len);\n\n        this.buffer.copy(target.buffer, targetOffset, sourceOffset, sourceLimit);\n\n        if (relative) this.offset += len;\n        if (targetRelative) target.offset += len;\n\n        return this;\n    };\n\n    /**\n     * Makes sure that this ByteBuffer is backed by a {@link ByteBuffer#buffer} of at least the specified capacity. If the\n     *  current capacity is exceeded, it will be doubled. If double the current capacity is less than the required capacity,\n     *  the required capacity will be used instead.\n     * @param {number} capacity Required capacity\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.ensureCapacity = function(capacity) {\n        var current = this.buffer.length;\n        if (current < capacity)\n            return this.resize((current *= 2) > capacity ? current : capacity);\n        return this;\n    };\n\n    /**\n     * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\n     * @param {number|string} value Byte value to fill with. If given as a string, the first character is used.\n     * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n     *  written if omitted. defaults to {@link ByteBuffer#offset}.\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\n     * @returns {!ByteBuffer} this\n     * @expose\n     * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes\n     */\n    ByteBufferPrototype.fill = function(value, begin, end) {\n        var relative = typeof begin === 'undefined';\n        if (relative) begin = this.offset;\n        if (typeof value === 'string' && value.length > 0)\n            value = value.charCodeAt(0);\n        if (typeof begin === 'undefined') begin = this.offset;\n        if (typeof end === 'undefined') end = this.limit;\n        if (!this.noAssert) {\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\n        if (begin >= end)\n            return this; // Nothing to fill\n        this.buffer.fill(value, begin, end);\n        begin = end;\n        if (relative) this.offset = begin;\n        return this;\n    };\n\n    /**\n     * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and\n     *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete.\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.flip = function() {\n        this.limit = this.offset;\n        this.offset = 0;\n        return this;\n    };\n    /**\n     * Marks an offset on this ByteBuffer to be used later.\n     * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}.\n     * @returns {!ByteBuffer} this\n     * @throws {TypeError} If `offset` is not a valid number\n     * @throws {RangeError} If `offset` is out of bounds\n     * @see ByteBuffer#reset\n     * @expose\n     */\n    ByteBufferPrototype.mark = function(offset) {\n        offset = typeof offset === 'undefined' ? this.offset : offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        this.markedOffset = offset;\n        return this;\n    };\n    /**\n     * Sets the byte order.\n     * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.order = function(littleEndian) {\n        if (!this.noAssert) {\n            if (typeof littleEndian !== 'boolean')\n                throw TypeError(\"Illegal littleEndian: Not a boolean\");\n        }\n        this.littleEndian = !!littleEndian;\n        return this;\n    };\n\n    /**\n     * Switches (to) little endian byte order.\n     * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.LE = function(littleEndian) {\n        this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : true;\n        return this;\n    };\n\n    /**\n     * Switches (to) big endian byte order.\n     * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.BE = function(bigEndian) {\n        this.littleEndian = typeof bigEndian !== 'undefined' ? !bigEndian : false;\n        return this;\n    };\n    /**\n     * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\n     *  will be resized and its contents moved accordingly.\n     * @param {!ByteBuffer|string||!Buffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be modified\n     *  according to the performed read operation.\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\n     *  prepended if omitted.\n     * @returns {!ByteBuffer} this\n     * @expose\n     * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`\n     * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`\n     */\n    ByteBufferPrototype.prepend = function(source, encoding, offset) {\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\n            offset = encoding;\n            encoding = undefined;\n        }\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\n        if (!(source instanceof ByteBuffer))\n            source = ByteBuffer.wrap(source, encoding);\n        var len = source.limit - source.offset;\n        if (len <= 0) return this; // Nothing to prepend\n        var diff = len - offset;\n        if (diff > 0) { // Not enough space before offset, so resize + move\n            var buffer = Buffer.alloc(this.buffer.length + diff);\n            this.buffer.copy(buffer, len, offset, this.buffer.length);\n            this.buffer = buffer;\n            this.offset += diff;\n            if (this.markedOffset >= 0) this.markedOffset += diff;\n            this.limit += diff;\n            offset += diff;\n        }        source.buffer.copy(this.buffer, offset - len, source.offset, source.limit);\n\n        source.offset = source.limit;\n        if (relative)\n            this.offset -= len;\n        return this;\n    };\n\n    /**\n     * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\n     *  will be resized and its contents moved accordingly.\n     * @param {!ByteBuffer} target Target ByteBuffer\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\n     *  prepended if omitted.\n     * @returns {!ByteBuffer} this\n     * @expose\n     * @see ByteBuffer#prepend\n     */\n    ByteBufferPrototype.prependTo = function(target, offset) {\n        target.prepend(this, offset);\n        return this;\n    };\n    /**\n     * Prints debug information about this ByteBuffer's contents.\n     * @param {function(string)=} out Output function to call, defaults to console.log\n     * @expose\n     */\n    ByteBufferPrototype.printDebug = function(out) {\n        if (typeof out !== 'function') out = console.log.bind(console);\n        out(\n            this.toString()+\"\\n\"+\n            \"-------------------------------------------------------------------\\n\"+\n            this.toDebug(/* columns */ true)\n        );\n    };\n\n    /**\n     * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and\n     *  {@link ByteBuffer#limit}, so this returns `limit - offset`.\n     * @returns {number} Remaining readable bytes. May be negative if `offset > limit`.\n     * @expose\n     */\n    ByteBufferPrototype.remaining = function() {\n        return this.limit - this.offset;\n    };\n    /**\n     * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}\n     *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been\n     *  marked, sets `offset = 0`.\n     * @returns {!ByteBuffer} this\n     * @see ByteBuffer#mark\n     * @expose\n     */\n    ByteBufferPrototype.reset = function() {\n        if (this.markedOffset >= 0) {\n            this.offset = this.markedOffset;\n            this.markedOffset = -1;\n        } else {\n            this.offset = 0;\n        }\n        return this;\n    };\n    /**\n     * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that\n     *  large or larger.\n     * @param {number} capacity Capacity required\n     * @returns {!ByteBuffer} this\n     * @throws {TypeError} If `capacity` is not a number\n     * @throws {RangeError} If `capacity < 0`\n     * @expose\n     */\n    ByteBufferPrototype.resize = function(capacity) {\n        if (!this.noAssert) {\n            if (typeof capacity !== 'number' || capacity % 1 !== 0)\n                throw TypeError(\"Illegal capacity: \"+capacity+\" (not an integer)\");\n            capacity |= 0;\n            if (capacity < 0)\n                throw RangeError(\"Illegal capacity: 0 <= \"+capacity);\n        }\n        if (this.buffer.length < capacity) {\n            var buffer = Buffer.alloc(capacity);\n            this.buffer.copy(buffer);\n            this.buffer = buffer;\n        }\n        return this;\n    };\n    /**\n     * Reverses this ByteBuffer's contents.\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.reverse = function(begin, end) {\n        if (typeof begin === 'undefined') begin = this.offset;\n        if (typeof end === 'undefined') end = this.limit;\n        if (!this.noAssert) {\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\n        if (begin === end)\n            return this; // Nothing to reverse\n        Array.prototype.reverse.call(this.buffer.slice(begin, end));\n        return this;\n    };\n    /**\n     * Skips the next `length` bytes. This will just advance\n     * @param {number} length Number of bytes to skip. May also be negative to move the offset back.\n     * @returns {!ByteBuffer} this\n     * @expose\n     */\n    ByteBufferPrototype.skip = function(length) {\n        if (!this.noAssert) {\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n        }\n        var offset = this.offset + length;\n        if (!this.noAssert) {\n            if (offset < 0 || offset > this.buffer.length)\n                throw RangeError(\"Illegal length: 0 <= \"+this.offset+\" + \"+length+\" <= \"+this.buffer.length);\n        }\n        this.offset = offset;\n        return this;\n    };\n\n    /**\n     * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`.\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\n     * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}\n     * @expose\n     */\n    ByteBufferPrototype.slice = function(begin, end) {\n        if (typeof begin === 'undefined') begin = this.offset;\n        if (typeof end === 'undefined') end = this.limit;\n        if (!this.noAssert) {\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\n        var bb = this.clone();\n        bb.offset = begin;\n        bb.limit = end;\n        return bb;\n    };\n    /**\n     * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if\n     *  possible. Defaults to `false`\n     * @returns {!Buffer} Contents as a Buffer\n     * @expose\n     */\n    ByteBufferPrototype.toBuffer = function(forceCopy) {\n        var offset = this.offset,\n            limit = this.limit;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: Not an integer\");\n            offset >>>= 0;\n            if (typeof limit !== 'number' || limit % 1 !== 0)\n                throw TypeError(\"Illegal limit: Not an integer\");\n            limit >>>= 0;\n            if (offset < 0 || offset > limit || limit > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.length);\n        }\n        if (forceCopy) {\n            var buffer = Buffer.alloc(limit - offset);\n            this.buffer.copy(buffer, 0, offset, limit);\n            return buffer;\n        } else {\n            if (offset === 0 && limit === this.buffer.length)\n                return this.buffer;\n            else\n                return this.buffer.slice(offset, limit);\n        }\n    };\n\n    /**\n     * Returns a copy of the backing buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\n     */\n    ByteBufferPrototype.toArrayBuffer = function() {\n        var offset = this.offset,\n            limit = this.limit;\n        if (!this.noAssert) {\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: Not an integer\");\n            offset >>>= 0;\n            if (typeof limit !== 'number' || limit % 1 !== 0)\n                throw TypeError(\"Illegal limit: Not an integer\");\n            limit >>>= 0;\n            if (offset < 0 || offset > limit || limit > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.length);\n        }\n        var ab = new ArrayBuffer(limit - offset);\n        if (memcpy) { // Fast\n            memcpy(ab, 0, this.buffer, offset, limit);\n        } else { // Slow\n            var dst = new Uint8Array(ab);\n            for (var i=offset; i<limit; ++i)\n                dst[i-offset] = this.buffer[i];\n        }\n        return ab;\n    };\n\n    /**\n     * Converts the ByteBuffer's contents to a string.\n     * @param {string=} encoding Output encoding. Returns an informative string representation if omitted but also allows\n     *  direct conversion to \"utf8\", \"hex\", \"base64\" and \"binary\" encoding. \"debug\" returns a hex representation with\n     *  highlighted offsets.\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\n     * @returns {string} String representation\n     * @throws {Error} If `encoding` is invalid\n     * @expose\n     */\n    ByteBufferPrototype.toString = function(encoding, begin, end) {\n        if (typeof encoding === 'undefined')\n            return \"ByteBufferNB(offset=\"+this.offset+\",markedOffset=\"+this.markedOffset+\",limit=\"+this.limit+\",capacity=\"+this.capacity()+\")\";\n        if (typeof encoding === 'number')\n            encoding = \"utf8\",\n            begin = encoding,\n            end = begin;\n        switch (encoding) {\n            case \"utf8\":\n                return this.toUTF8(begin, end);\n            case \"base64\":\n                return this.toBase64(begin, end);\n            case \"hex\":\n                return this.toHex(begin, end);\n            case \"binary\":\n                return this.toBinary(begin, end);\n            case \"debug\":\n                return this.toDebug();\n            case \"columns\":\n                return this.toColumns();\n            default:\n                throw Error(\"Unsupported encoding: \"+encoding);\n        }\n    };\n\n    // encodings/base64\n\n    /**\n     * Encodes this ByteBuffer's contents to a base64 encoded string.\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}.\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}.\n     * @returns {string} Base64 encoded string\n     * @throws {RangeError} If `begin` or `end` is out of bounds\n     * @expose\n     */\n    ByteBufferPrototype.toBase64 = function(begin, end) {\n        if (typeof begin === 'undefined')\n            begin = this.offset;\n        if (typeof end === 'undefined')\n            end = this.limit;\n        begin = begin | 0; end = end | 0;\n        if (begin < 0 || end > this.capacity || begin > end)\n            throw RangeError(\"begin, end\");\n        return this.buffer.toString(\"base64\", begin, end);\n    };\n\n    /**\n     * Decodes a base64 encoded string to a ByteBuffer.\n     * @param {string} str String to decode\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\n     * @returns {!ByteBuffer} ByteBuffer\n     * @expose\n     */\n    ByteBuffer.fromBase64 = function(str, littleEndian) {\n        return ByteBuffer.wrap(Buffer.from(str, \"base64\"), littleEndian);\n        return bb;\n    };\n\n    /**\n     * Encodes a binary string to base64 like `window.btoa` does.\n     * @param {string} str Binary string\n     * @returns {string} Base64 encoded string\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa\n     * @expose\n     */\n    ByteBuffer.btoa = function(str) {\n        return ByteBuffer.fromBinary(str).toBase64();\n    };\n\n    /**\n     * Decodes a base64 encoded string to binary like `window.atob` does.\n     * @param {string} b64 Base64 encoded string\n     * @returns {string} Binary string\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.atob\n     * @expose\n     */\n    ByteBuffer.atob = function(b64) {\n        return ByteBuffer.fromBase64(b64).toBinary();\n    };\n\n    // encodings/binary\n\n    /**\n     * Encodes this ByteBuffer to a binary encoded string, that is using only characters 0x00-0xFF as bytes.\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\n     * @returns {string} Binary encoded string\n     * @throws {RangeError} If `offset > limit`\n     * @expose\n     */\n    ByteBufferPrototype.toBinary = function(begin, end) {\n        if (typeof begin === 'undefined')\n            begin = this.offset;\n        if (typeof end === 'undefined')\n            end = this.limit;\n        begin |= 0; end |= 0;\n        if (begin < 0 || end > this.capacity() || begin > end)\n            throw RangeError(\"begin, end\");\n        return this.buffer.toString(\"binary\", begin, end);\n    };\n\n    /**\n     * Decodes a binary encoded string, that is using only characters 0x00-0xFF as bytes, to a ByteBuffer.\n     * @param {string} str String to decode\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\n     * @returns {!ByteBuffer} ByteBuffer\n     * @expose\n     */\n    ByteBuffer.fromBinary = function(str, littleEndian) {\n        return ByteBuffer.wrap(Buffer.from(str, \"binary\"), littleEndian);\n        return bb;\n    };\n\n    // encodings/debug\n\n    /**\n     * Encodes this ByteBuffer to a hex encoded string with marked offsets. Offset symbols are:\n     * * `<` : offset,\n     * * `'` : markedOffset,\n     * * `>` : limit,\n     * * `|` : offset and limit,\n     * * `[` : offset and markedOffset,\n     * * `]` : markedOffset and limit,\n     * * `!` : offset, markedOffset and limit\n     * @param {boolean=} columns If `true` returns two columns hex + ascii, defaults to `false`\n     * @returns {string|!Array.<string>} Debug string or array of lines if `asArray = true`\n     * @expose\n     * @example `>00'01 02<03` contains four bytes with `limit=0, markedOffset=1, offset=3`\n     * @example `00[01 02 03>` contains four bytes with `offset=markedOffset=1, limit=4`\n     * @example `00|01 02 03` contains four bytes with `offset=limit=1, markedOffset=-1`\n     * @example `|` contains zero bytes with `offset=limit=0, markedOffset=-1`\n     */\n    ByteBufferPrototype.toDebug = function(columns) {\n        var i = -1,\n            k = this.buffer.length,\n            b,\n            hex = \"\",\n            asc = \"\",\n            out = \"\";\n        while (i<k) {\n            if (i !== -1) {\n                b = this.buffer[i];\n                if (b < 0x10) hex += \"0\"+b.toString(16).toUpperCase();\n                else hex += b.toString(16).toUpperCase();\n                if (columns)\n                    asc += b > 32 && b < 127 ? String.fromCharCode(b) : '.';\n            }\n            ++i;\n            if (columns) {\n                if (i > 0 && i % 16 === 0 && i !== k) {\n                    while (hex.length < 3*16+3) hex += \" \";\n                    out += hex+asc+\"\\n\";\n                    hex = asc = \"\";\n                }\n            }\n            if (i === this.offset && i === this.limit)\n                hex += i === this.markedOffset ? \"!\" : \"|\";\n            else if (i === this.offset)\n                hex += i === this.markedOffset ? \"[\" : \"<\";\n            else if (i === this.limit)\n                hex += i === this.markedOffset ? \"]\" : \">\";\n            else\n                hex += i === this.markedOffset ? \"'\" : (columns || (i !== 0 && i !== k) ? \" \" : \"\");\n        }\n        if (columns && hex !== \" \") {\n            while (hex.length < 3*16+3)\n                hex += \" \";\n            out += hex + asc + \"\\n\";\n        }\n        return columns ? out : hex;\n    };\n\n    /**\n     * Decodes a hex encoded string with marked offsets to a ByteBuffer.\n     * @param {string} str Debug string to decode (not be generated with `columns = true`)\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\n     * @returns {!ByteBuffer} ByteBuffer\n     * @expose\n     * @see ByteBuffer#toDebug\n     */\n    ByteBuffer.fromDebug = function(str, littleEndian, noAssert) {\n        var k = str.length,\n            bb = new ByteBuffer(((k+1)/3)|0, littleEndian, noAssert);\n        var i = 0, j = 0, ch, b,\n            rs = false, // Require symbol next\n            ho = false, hm = false, hl = false, // Already has offset (ho), markedOffset (hm), limit (hl)?\n            fail = false;\n        while (i<k) {\n            switch (ch = str.charAt(i++)) {\n                case '!':\n                    if (!noAssert) {\n                        if (ho || hm || hl) {\n                            fail = true;\n                            break;\n                        }\n                        ho = hm = hl = true;\n                    }\n                    bb.offset = bb.markedOffset = bb.limit = j;\n                    rs = false;\n                    break;\n                case '|':\n                    if (!noAssert) {\n                        if (ho || hl) {\n                            fail = true;\n                            break;\n                        }\n                        ho = hl = true;\n                    }\n                    bb.offset = bb.limit = j;\n                    rs = false;\n                    break;\n                case '[':\n                    if (!noAssert) {\n                        if (ho || hm) {\n                            fail = true;\n                            break;\n                        }\n                        ho = hm = true;\n                    }\n                    bb.offset = bb.markedOffset = j;\n                    rs = false;\n                    break;\n                case '<':\n                    if (!noAssert) {\n                        if (ho) {\n                            fail = true;\n                            break;\n                        }\n                        ho = true;\n                    }\n                    bb.offset = j;\n                    rs = false;\n                    break;\n                case ']':\n                    if (!noAssert) {\n                        if (hl || hm) {\n                            fail = true;\n                            break;\n                        }\n                        hl = hm = true;\n                    }\n                    bb.limit = bb.markedOffset = j;\n                    rs = false;\n                    break;\n                case '>':\n                    if (!noAssert) {\n                        if (hl) {\n                            fail = true;\n                            break;\n                        }\n                        hl = true;\n                    }\n                    bb.limit = j;\n                    rs = false;\n                    break;\n                case \"'\":\n                    if (!noAssert) {\n                        if (hm) {\n                            fail = true;\n                            break;\n                        }\n                        hm = true;\n                    }\n                    bb.markedOffset = j;\n                    rs = false;\n                    break;\n                case ' ':\n                    rs = false;\n                    break;\n                default:\n                    if (!noAssert) {\n                        if (rs) {\n                            fail = true;\n                            break;\n                        }\n                    }\n                    b = parseInt(ch+str.charAt(i++), 16);\n                    if (!noAssert) {\n                        if (isNaN(b) || b < 0 || b > 255)\n                            throw TypeError(\"Illegal str: Not a debug encoded string\");\n                    }\n                    bb.buffer[j++] = b;\n                    rs = true;\n            }\n            if (fail)\n                throw TypeError(\"Illegal str: Invalid symbol at \"+i);\n        }\n        if (!noAssert) {\n            if (!ho || !hl)\n                throw TypeError(\"Illegal str: Missing offset or limit\");\n            if (j<bb.buffer.length)\n                throw TypeError(\"Illegal str: Not a debug encoded string (is it hex?) \"+j+\" < \"+k);\n        }\n        return bb;\n    };\n\n    // encodings/hex\n\n    /**\n     * Encodes this ByteBuffer's contents to a hex encoded string.\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\n     * @returns {string} Hex encoded string\n     * @expose\n     */\n    ByteBufferPrototype.toHex = function(begin, end) {\n        begin = typeof begin === 'undefined' ? this.offset : begin;\n        end = typeof end === 'undefined' ? this.limit : end;\n        if (!this.noAssert) {\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\n        return this.buffer.toString(\"hex\", begin, end);\n    };\n\n    /**\n     * Decodes a hex encoded string to a ByteBuffer.\n     * @param {string} str String to decode\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\n     * @returns {!ByteBuffer} ByteBuffer\n     * @expose\n     */\n    ByteBuffer.fromHex = function(str, littleEndian, noAssert) {\n        if (!noAssert) {\n            if (typeof str !== 'string')\n                throw TypeError(\"Illegal str: Not a string\");\n            if (str.length % 2 !== 0)\n                throw TypeError(\"Illegal str: Length not a multiple of 2\");\n        }\n        var bb = new ByteBuffer(0, littleEndian, true);\n        bb.buffer = Buffer.from(str, \"hex\");\n        bb.limit = bb.buffer.length;\n        return bb;\n    };\n\n    // utfx-embeddable\n\n    /**\r\n     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/utfx for details\r\n     */\r\n    var utfx = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * utfx namespace.\r\n         * @inner\r\n         * @type {!Object.<string,*>}\r\n         */\r\n        var utfx = {};\r\n\r\n        /**\r\n         * Maximum valid code point.\r\n         * @type {number}\r\n         * @const\r\n         */\r\n        utfx.MAX_CODEPOINT = 0x10FFFF;\r\n\r\n        /**\r\n         * Encodes UTF8 code points to UTF8 bytes.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\r\n         */\r\n        utfx.encodeUTF8 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src,\r\n                src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp < 0x80)\r\n                    dst(cp&0x7F);\r\n                else if (cp < 0x800)\r\n                    dst(((cp>>6)&0x1F)|0xC0),\r\n                    dst((cp&0x3F)|0x80);\r\n                else if (cp < 0x10000)\r\n                    dst(((cp>>12)&0x0F)|0xE0),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                else\r\n                    dst(((cp>>18)&0x07)|0xF0),\r\n                    dst(((cp>>12)&0x3F)|0x80),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes UTF8 bytes to UTF8 code points.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\r\n         *  remaining bytes.\r\n         */\r\n        utfx.decodeUTF8 = function(src, dst) {\r\n            var a, b, c, d, fail = function(b) {\r\n                b = b.slice(0, b.indexOf(null));\r\n                var err = Error(b.toString());\r\n                err.name = \"TruncatedError\";\r\n                err['bytes'] = b;\r\n                throw err;\r\n            };\r\n            while ((a = src()) !== null) {\r\n                if ((a&0x80) === 0)\r\n                    dst(a);\r\n                else if ((a&0xE0) === 0xC0)\r\n                    ((b = src()) === null) && fail([a, b]),\r\n                    dst(((a&0x1F)<<6) | (b&0x3F));\r\n                else if ((a&0xF0) === 0xE0)\r\n                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),\r\n                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));\r\n                else if ((a&0xF8) === 0xF0)\r\n                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),\r\n                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));\r\n                else throw RangeError(\"Illegal starting byte: \"+a);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts UTF16 characters to UTF8 code points.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each converted code\r\n         *  point.\r\n         */\r\n        utfx.UTF16toUTF8 = function(src, dst) {\r\n            var c1, c2 = null;\r\n            while (true) {\r\n                if ((c1 = c2 !== null ? c2 : src()) === null)\r\n                    break;\r\n                if (c1 >= 0xD800 && c1 <= 0xDFFF) {\r\n                    if ((c2 = src()) !== null) {\r\n                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);\r\n                            c2 = null; continue;\r\n                        }\r\n                    }\r\n                }\r\n                dst(c1);\r\n            }\r\n            if (c2 !== null) dst(c2);\r\n        };\r\n\r\n        /**\r\n         * Converts UTF8 code points to UTF16 characters.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a code point is out of range\r\n         */\r\n        utfx.UTF8toUTF16 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src, src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp <= 0xFFFF)\r\n                    dst(cp);\r\n                else\r\n                    cp -= 0x10000,\r\n                    dst((cp>>10)+0xD800),\r\n                    dst((cp%0x400)+0xDC00);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts and encodes UTF16 characters to UTF8 bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\r\n         *  if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         */\r\n        utfx.encodeUTF16toUTF8 = function(src, dst) {\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                utfx.encodeUTF8(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Decodes and converts UTF8 bytes to UTF16 characters.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\r\n         */\r\n        utfx.decodeUTF8toUTF16 = function(src, dst) {\r\n            utfx.decodeUTF8(src, function(cp) {\r\n                utfx.UTF8toUTF16(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an UTF8 code point.\r\n         * @param {number} cp UTF8 code point\r\n         * @returns {number} Byte length\r\n         */\r\n        utfx.calculateCodePoint = function(cp) {\r\n            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 bytes required to store UTF8 code points.\r\n         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\r\n         *  `null` if there are no more code points left.\r\n         * @returns {number} The number of UTF8 bytes required\r\n         */\r\n        utfx.calculateUTF8 = function(src) {\r\n            var cp, l=0;\r\n            while ((cp = src()) !== null)\r\n                l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            return l;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\r\n         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\r\n         */\r\n        utfx.calculateUTF16asUTF8 = function(src) {\r\n            var n=0, l=0;\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                ++n; l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            });\r\n            return [n,l];\r\n        };\r\n\r\n        return utfx;\r\n    }();\r\n\n    // encodings/utf8\n\n    /**\n     * Encodes this ByteBuffer's contents between {@link ByteBuffer#offset} and {@link ByteBuffer#limit} to an UTF8 encoded\n     *  string.\n     * @returns {string} Hex encoded string\n     * @throws {RangeError} If `offset > limit`\n     * @expose\n     */\n    ByteBufferPrototype.toUTF8 = function(begin, end) {\n        if (typeof begin === 'undefined') begin = this.offset;\n        if (typeof end === 'undefined') end = this.limit;\n        if (!this.noAssert) {\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\n        return this.buffer.toString(\"utf8\", begin, end);\n    };\n\n    /**\n     * Decodes an UTF8 encoded string to a ByteBuffer.\n     * @param {string} str String to decode\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\n     * @returns {!ByteBuffer} ByteBuffer\n     * @expose\n     */\n    ByteBuffer.fromUTF8 = function(str, littleEndian, noAssert) {\n        if (!noAssert)\n            if (typeof str !== 'string')\n                throw TypeError(\"Illegal str: Not a string\");\n        var bb = new ByteBuffer(0, littleEndian, noAssert);\n        bb.buffer = Buffer.from(str, \"utf8\");\n        bb.limit = bb.buffer.length;\n        return bb;\n    };\n\n\n    /**\n     * node-memcpy. This is an optional binding dependency and may not be present.\n     * @function\n     * @param {!(Buffer|ArrayBuffer|Uint8Array)} target Destination\n     * @param {number|!(Buffer|ArrayBuffer)} targetStart Destination start, defaults to 0.\n     * @param {(!(Buffer|ArrayBuffer|Uint8Array)|number)=} source Source\n     * @param {number=} sourceStart Source start, defaults to 0.\n     * @param {number=} sourceEnd Source end, defaults to capacity.\n     * @returns {number} Number of bytes copied\n     * @throws {Error} If any index is out of bounds\n     * @expose\n     */\n    ByteBuffer.memcpy = memcpy;\n\n    return ByteBuffer;\n\n})();\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/long.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\r\n\r\n})(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.low = low | 0;\r\n\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.high = high | 0;\r\n\r\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         */\r\n        this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @private\r\n     */\r\n    Long.prototype.__isLong__;\r\n\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    /**\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function isLong(obj) {\r\n        return (obj && obj[\"__isLong__\"]) === true;\r\n    }\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     */\r\n    Long.isLong = isLong;\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromInt(value, unsigned) {\r\n        var obj, cachedObj, cache;\r\n        if (unsigned) {\r\n            value >>>= 0;\r\n            if (cache = (0 <= value && value < 256)) {\r\n                cachedObj = UINT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n            if (cache)\r\n                UINT_CACHE[value] = obj;\r\n            return obj;\r\n        } else {\r\n            value |= 0;\r\n            if (cache = (-128 <= value && value < 128)) {\r\n                cachedObj = INT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n            if (cache)\r\n                INT_CACHE[value] = obj;\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @function\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromInt = fromInt;\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromNumber(value, unsigned) {\r\n        if (isNaN(value) || !isFinite(value))\r\n            return unsigned ? UZERO : ZERO;\r\n        if (unsigned) {\r\n            if (value < 0)\r\n                return UZERO;\r\n            if (value >= TWO_PWR_64_DBL)\r\n                return MAX_UNSIGNED_VALUE;\r\n        } else {\r\n            if (value <= -TWO_PWR_63_DBL)\r\n                return MIN_VALUE;\r\n            if (value + 1 >= TWO_PWR_63_DBL)\r\n                return MAX_VALUE;\r\n        }\r\n        if (value < 0)\r\n            return fromNumber(-value, unsigned).neg();\r\n        return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @function\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromNumber = fromNumber;\r\n\r\n    /**\r\n     * @param {number} lowBits\r\n     * @param {number} highBits\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromBits(lowBits, highBits, unsigned) {\r\n        return new Long(lowBits, highBits, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @function\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromBits = fromBits;\r\n\r\n    /**\r\n     * @function\r\n     * @param {number} base\r\n     * @param {number} exponent\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @param {(boolean|number)=} unsigned\r\n     * @param {number=} radix\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromString(str, unsigned, radix) {\r\n        if (str.length === 0)\r\n            throw Error('empty string');\r\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n            return ZERO;\r\n        if (typeof unsigned === 'number') {\r\n            // For goog.math.long compatibility\r\n            radix = unsigned,\r\n            unsigned = false;\r\n        } else {\r\n            unsigned = !! unsigned;\r\n        }\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0)\r\n            throw Error('interior hyphen');\r\n        else if (p === 0) {\r\n            return fromString(str.substring(1), unsigned, radix).neg();\r\n        }\r\n\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n        var result = ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i),\r\n                value = parseInt(str.substring(i, i + size), radix);\r\n            if (size < 8) {\r\n                var power = fromNumber(pow_dbl(radix, size));\r\n                result = result.mul(power).add(fromNumber(value));\r\n            } else {\r\n                result = result.mul(radixToPower);\r\n                result = result.add(fromNumber(value));\r\n            }\r\n        }\r\n        result.unsigned = unsigned;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @function\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromString = fromString;\r\n\r\n    /**\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromValue(val) {\r\n        if (val /* is compatible */ instanceof Long)\r\n            return val;\r\n        if (typeof val === 'number')\r\n            return fromNumber(val);\r\n        if (typeof val === 'string')\r\n            return fromString(val);\r\n        // Throws for non-objects, converts non-instanceof Long:\r\n        return fromBits(val.low, val.high, val.unsigned);\r\n    }\r\n\r\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     */\r\n    Long.fromValue = fromValue;\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ZERO = fromInt(0);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.ZERO = ZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UZERO = fromInt(0, true);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.UZERO = UZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ONE = fromInt(1);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     */\r\n    Long.ONE = ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UONE = fromInt(1, true);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     */\r\n    Long.UONE = UONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var NEG_ONE = fromInt(-1);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     */\r\n    Long.NEG_ONE = NEG_ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_VALUE = MAX_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MIN_VALUE = MIN_VALUE;\r\n\r\n    /**\r\n     * @alias Long.prototype\r\n     * @inner\r\n     */\r\n    var LongPrototype = Long.prototype;\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toInt = function toInt() {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toNumber = function toNumber() {\r\n        if (this.unsigned)\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     */\r\n    LongPrototype.toString = function toString(radix) {\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n        if (this.isZero())\r\n            return '0';\r\n        if (this.isNegative()) { // Unsigned Longs are never negative\r\n            if (this.eq(MIN_VALUE)) {\r\n                // We need to change the Long value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixLong = fromNumber(radix),\r\n                    div = this.div(radixLong),\r\n                    rem1 = div.mul(radixLong).sub(this);\r\n                return div.toString(radix) + rem1.toInt().toString(radix);\r\n            } else\r\n                return '-' + this.neg().toString(radix);\r\n        }\r\n\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n            rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower),\r\n                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n                digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     */\r\n    LongPrototype.getHighBits = function getHighBits() {\r\n        return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     */\r\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n        return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     */\r\n    LongPrototype.getLowBits = function getLowBits() {\r\n        return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     */\r\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n        return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n        if (this.isNegative()) // Unsigned Longs are never negative\r\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isZero = function isZero() {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isNegative = function isNegative() {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isPositive = function isPositive() {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isOdd = function isOdd() {\r\n        return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isEven = function isEven() {\r\n        return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.equals = function equals(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.eq = LongPrototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.notEquals = function notEquals(other) {\r\n        return !this.eq(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.neq = LongPrototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThan = function lessThan(other) {\r\n        return this.comp(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lt = LongPrototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThan = function greaterThan(other) {\r\n        return this.comp(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.compare = function compare(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.eq(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(),\r\n            otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        // At this point the sign bits are the same\r\n        if (!this.unsigned)\r\n            return this.sub(other).isNegative() ? -1 : 1;\r\n        // Both are positive if at least one is unsigned\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.comp = LongPrototype.compare;\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.negate = function negate() {\r\n        if (!this.unsigned && this.eq(MIN_VALUE))\r\n            return MIN_VALUE;\r\n        return this.not().add(ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.neg = LongPrototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     */\r\n    LongPrototype.add = function add(addend) {\r\n        if (!isLong(addend))\r\n            addend = fromValue(addend);\r\n\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.subtract = function subtract(subtrahend) {\r\n        if (!isLong(subtrahend))\r\n            subtrahend = fromValue(subtrahend);\r\n        return this.add(subtrahend.neg());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.sub = LongPrototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.multiply = function multiply(multiplier) {\r\n        if (this.isZero())\r\n            return ZERO;\r\n        if (!isLong(multiplier))\r\n            multiplier = fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return ZERO;\r\n        if (this.eq(MIN_VALUE))\r\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n        if (multiplier.eq(MIN_VALUE))\r\n            return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.neg().mul(multiplier.neg());\r\n            else\r\n                return this.neg().mul(multiplier).neg();\r\n        } else if (multiplier.isNegative())\r\n            return this.mul(multiplier.neg()).neg();\r\n\r\n        // If both longs are small, use float multiplication\r\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.mul = LongPrototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n     *  unsigned if this Long is unsigned.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.divide = function divide(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw Error('division by zero');\r\n        if (this.isZero())\r\n            return this.unsigned ? UZERO : ZERO;\r\n        var approx, rem, res;\r\n        if (!this.unsigned) {\r\n            // This section is only relevant for signed longs and is derived from the\r\n            // closure library as a whole.\r\n            if (this.eq(MIN_VALUE)) {\r\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                    return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n                else if (divisor.eq(MIN_VALUE))\r\n                    return ONE;\r\n                else {\r\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                    var halfThis = this.shr(1);\r\n                    approx = halfThis.div(divisor).shl(1);\r\n                    if (approx.eq(ZERO)) {\r\n                        return divisor.isNegative() ? ONE : NEG_ONE;\r\n                    } else {\r\n                        rem = this.sub(divisor.mul(approx));\r\n                        res = approx.add(rem.div(divisor));\r\n                        return res;\r\n                    }\r\n                }\r\n            } else if (divisor.eq(MIN_VALUE))\r\n                return this.unsigned ? UZERO : ZERO;\r\n            if (this.isNegative()) {\r\n                if (divisor.isNegative())\r\n                    return this.neg().div(divisor.neg());\r\n                return this.neg().div(divisor).neg();\r\n            } else if (divisor.isNegative())\r\n                return this.div(divisor.neg()).neg();\r\n            res = ZERO;\r\n        } else {\r\n            // The algorithm below has not been made for unsigned longs. It's therefore\r\n            // required to take special care of the MSB prior to running it.\r\n            if (!divisor.unsigned)\r\n                divisor = divisor.toUnsigned();\r\n            if (divisor.gt(this))\r\n                return UZERO;\r\n            if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n                return UONE;\r\n            res = UZERO;\r\n        }\r\n\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        rem = this;\r\n        while (rem.gte(divisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n                delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n                approxRes = fromNumber(approx),\r\n                approxRem = approxRes.mul(divisor);\r\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n                approx -= delta;\r\n                approxRes = fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.mul(divisor);\r\n            }\r\n\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero())\r\n                approxRes = ONE;\r\n\r\n            res = res.add(approxRes);\r\n            rem = rem.sub(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.div = LongPrototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.modulo = function modulo(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.mod = LongPrototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.not = function not() {\r\n        return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.and = function and(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.or = function or(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.xor = function xor(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRight = function shiftRight(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits &= 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            } else if (numBits === 32)\r\n                return fromBits(high, 0, this.unsigned);\r\n            else\r\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     */\r\n    LongPrototype.toSigned = function toSigned() {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     */\r\n    LongPrototype.toUnsigned = function toUnsigned() {\r\n        if (this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, true);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to its byte representation.\r\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n     * @returns {!Array.<number>} Byte representation\r\n     */\r\n    LongPrototype.toBytes = function(le) {\r\n        return le ? this.toBytesLE() : this.toBytesBE();\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its little endian byte representation.\r\n     * @returns {!Array.<number>} Little endian byte representation\r\n     */\r\n    LongPrototype.toBytesLE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n             lo         & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n             hi         & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 24) & 0xff\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its big endian byte representation.\r\n     * @returns {!Array.<number>} Big endian byte representation\r\n     */\r\n    LongPrototype.toBytesBE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n            (hi >>> 24) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n             hi         & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n             lo         & 0xff\r\n        ];\r\n    }\r\n\r\n    return Long;\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const config = {\r\n  node: 'https://api.hive.blog',\r\n  chain_id: 'beeab0de00000000000000000000000000000000000000000000000000000000',\r\n  address_prefix: 'STM',\r\n  axiosAdapter: null\r\n}\r\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","import { HashMD } from './_md.js';\nimport { rotl, wrapConstructor } from './utils.js';\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ new Uint8Array(new Array(16).fill(0).map((_, i) => i));\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = /* @__PURE__ */ [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n    0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n    0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst R_BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends HashMD {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            R_BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + R_BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + R_BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        R_BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n//# sourceMappingURL=ripemd160.js.map","import { sha256 as sh256 } from '@noble/hashes/sha256'\r\nimport { sha512 as sh512 } from '@noble/hashes/sha512'\r\nimport { ripemd160 as rp160 } from '@noble/hashes/ripemd160'\r\n\r\nexport const sha256 = (input) => {\r\n  return Buffer.from(sh256(input))\r\n}\r\n\r\nexport const sha512 = (input) => {\r\n  return Buffer.from(sh512(input))\r\n}\r\n\r\nexport const ripemd160 = (input) => {\r\n  return Buffer.from(rp160(input))\r\n}\r\n","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport { validateBasic, wNAF } from './curve.js';\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve } from './_shortw_utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","// const crypto = require('crypto')\r\n\r\nimport { ripemd160 } from './crypto.js'\r\nimport bs58 from 'bs58'\r\nimport { config } from '../config.js'\r\nimport { secp256k1 } from '@noble/curves/secp256k1'\r\n\r\nconst DEFAULT_ADDRESS_PREFIX = config.address_prefix\r\n\r\n/** ECDSA (secp256k1) public key. */\r\nexport class PublicKey {\r\n  constructor (key, prefix = DEFAULT_ADDRESS_PREFIX) {\r\n    this.key = key\r\n    this.prefix = prefix\r\n    // assert(secp256k1.publicKeyVerify(key), 'invalid public key')\r\n  }\r\n\r\n  /** Create a new instance from a WIF-encoded key. */\r\n  static fromString (wif) {\r\n    const { key, prefix } = decodePublic(wif)\r\n    return new PublicKey(key, prefix)\r\n  }\r\n\r\n  /** Create a new instance. */\r\n  static from (value) {\r\n    if (value instanceof PublicKey) {\r\n      return value\r\n    } else {\r\n      return PublicKey.fromString(value)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verify a 32-byte signature.\r\n   * @param message 32-byte message to verify.\r\n   * @param signature Signature to verify.\r\n   */\r\n  verify (message, signature) {\r\n    return secp256k1.verify(signature.data, message, this.key)\r\n  }\r\n\r\n  /** Return a WIF-encoded representation of the key. */\r\n  toString () {\r\n    return encodePublic(this.key, this.prefix)\r\n  }\r\n\r\n  /** Return JSON representation of this key, same as toString(). */\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n\r\n  /** Used by `utils.inspect` and `console.log` in node.js. */\r\n  inspect () {\r\n    return `PublicKey: ${this.toString()}`\r\n  }\r\n}\r\n\r\nconst encodePublic = (key, prefix) => {\r\n  const checksum = ripemd160(key)\r\n  return prefix + bs58.encode(Buffer.concat([key, checksum.subarray(0, 4)]))\r\n}\r\n\r\n/** Decode bs58+ripemd160-checksum encoded public key. */\r\nconst decodePublic = encodedKey => {\r\n  const prefix = encodedKey.slice(0, 3)\r\n  encodedKey = encodedKey.slice(3)\r\n  const buffer = Buffer.from(bs58.decode(encodedKey))\r\n  const key = buffer.subarray(0, -4)\r\n  return { key, prefix }\r\n}\r\n","/** Class representing a hive asset,\r\n * e.g. `1.000 HIVE` or `12.112233 VESTS`. */\r\nexport class Asset {\r\n  /** Create a new Asset instance from a string, e.g. `42.000 HIVE`. */\r\n  static fromString (string, expectedSymbol = null) {\r\n    const [amountString, symbol] = string.split(' ')\r\n    if (\r\n      ['STEEM', 'VESTS', 'SBD', 'TESTS', 'TBD', 'HIVE', 'HBD'].indexOf(\r\n        symbol\r\n      ) === -1\r\n    ) {\r\n      throw new Error(`Invalid asset symbol: ${symbol}`)\r\n    }\r\n    if (expectedSymbol && symbol !== expectedSymbol) {\r\n      throw new Error(\r\n        `Invalid asset, expected symbol: ${expectedSymbol} got: ${symbol}`\r\n      )\r\n    }\r\n    const amount = Number.parseFloat(amountString)\r\n    if (!Number.isFinite(amount)) {\r\n      throw new Error(`Invalid asset amount: ${amountString}`)\r\n    }\r\n    return new Asset(amount, symbol)\r\n  }\r\n\r\n  /**\r\n   * Convenience to create new Asset.\r\n   * @param symbol Symbol to use when created from number. Will also be used to validate\r\n   *               the asset, throws if the passed value has a different symbol than this.\r\n   */\r\n  static from (value, symbol = null) {\r\n    if (value instanceof Asset) {\r\n      if (symbol && value.symbol !== symbol) {\r\n        throw new Error(\r\n          `Invalid asset, expected symbol: ${symbol} got: ${value.symbol}`\r\n        )\r\n      }\r\n      return value\r\n    } else if (typeof value === 'number' && Number.isFinite(value)) {\r\n      return new Asset(value, symbol || 'STEEM')\r\n    } else if (typeof value === 'string') {\r\n      return Asset.fromString(value, symbol)\r\n    } else {\r\n      throw new Error(`Invalid asset '${String(value)}'`)\r\n    }\r\n  }\r\n\r\n  // We convert HIVE & HBD strings to STEEM & SBD because the serialization should be based on STEEM & SBD\r\n  constructor (amount, symbol) {\r\n    this.amount = amount\r\n    this.symbol =\r\n      symbol === 'HIVE' ? 'STEEM' : symbol === 'HBD' ? 'SBD' : symbol\r\n  }\r\n\r\n  /** Return asset precision. */\r\n  getPrecision () {\r\n    switch (this.symbol) {\r\n      case 'TESTS':\r\n      case 'TBD':\r\n      case 'STEEM':\r\n      case 'SBD':\r\n      case 'HBD':\r\n      case 'HIVE':\r\n        return 3\r\n      case 'VESTS':\r\n        return 6\r\n    }\r\n  }\r\n\r\n  /** Return a string representation of this asset, e.g. `42.000 HIVE`. */\r\n  toString () {\r\n    return `${this.amount.toFixed(this.getPrecision())} ${this.symbol}`\r\n  }\r\n\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n}\r\n","/** Buffer wrapper that serializes to a hex-encoded string. */\r\nexport class HexBuffer {\r\n  /** Convenience to create a new HexBuffer, does not copy data if value passed is already a buffer. */\r\n  static from (value) {\r\n    if (value instanceof HexBuffer) {\r\n      return value\r\n    } else if (value instanceof Buffer) {\r\n      return new HexBuffer(value)\r\n    } else if (typeof value === 'string') {\r\n      return new HexBuffer(Buffer.from(value, 'hex'))\r\n    } else {\r\n      return new HexBuffer(Buffer.from(value))\r\n    }\r\n  }\r\n\r\n  constructor (buffer) {\r\n    this.buffer = buffer\r\n  }\r\n\r\n  toString (encoding = 'hex') {\r\n    return this.buffer.toString(encoding)\r\n  }\r\n\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n}\r\n","import { PublicKey } from './PublicKey.js'\r\nimport { Asset } from './Asset.js'\r\nimport { HexBuffer } from './HexBuffer.js'\r\n\r\nconst VoidSerializer = () => {\r\n  throw new Error('Void can not be serialized')\r\n}\r\nconst StringSerializer = (buffer, data) => {\r\n  buffer.writeVString(data)\r\n}\r\n\r\nconst Int8Serializer = (buffer, data) => {\r\n  buffer.writeInt8(data)\r\n}\r\n\r\nconst Int16Serializer = (buffer, data) => {\r\n  buffer.writeInt16(data)\r\n}\r\n\r\nconst Int32Serializer = (buffer, data) => {\r\n  buffer.writeInt32(data)\r\n}\r\n\r\nconst Int64Serializer = (buffer, data) => {\r\n  buffer.writeInt64(data)\r\n}\r\n\r\nconst UInt8Serializer = (buffer, data) => {\r\n  buffer.writeUint8(data)\r\n}\r\n\r\nconst UInt16Serializer = (buffer, data) => {\r\n  buffer.writeUint16(data)\r\n}\r\n\r\nconst UInt32Serializer = (buffer, data) => {\r\n  buffer.writeUint32(data)\r\n}\r\n\r\nconst UInt64Serializer = (buffer, data) => {\r\n  buffer.writeUint64(data)\r\n}\r\n\r\nconst BooleanSerializer = (buffer, data) => {\r\n  buffer.writeByte(data ? 1 : 0)\r\n}\r\n\r\nconst StaticVariantSerializer = (itemSerializers) => {\r\n  return (buffer, data) => {\r\n    const [id, item] = data\r\n    buffer.writeVarint32(id)\r\n    itemSerializers[id](buffer, item)\r\n  }\r\n}\r\n\r\n/**\r\n * Serialize asset.\r\n * @note This looses precision for amounts larger than 2^53-1/10^precision.\r\n *       Should not be a problem in real-word usage.\r\n */\r\nconst AssetSerializer = (buffer, data) => {\r\n  const asset = Asset.from(data)\r\n  const precision = asset.getPrecision()\r\n  buffer.writeInt64(Math.round(asset.amount * Math.pow(10, precision)))\r\n  buffer.writeUint8(precision)\r\n  for (let i = 0; i < 7; i++) {\r\n    buffer.writeUint8(asset.symbol.charCodeAt(i) || 0)\r\n  }\r\n}\r\n\r\nconst DateSerializer = (buffer, data) => {\r\n  buffer.writeUint32(Math.floor(new Date(data + 'Z').getTime() / 1000))\r\n}\r\n\r\nconst PublicKeySerializer = (buffer, data) => {\r\n  if (\r\n    data === null ||\r\n    (typeof data === 'string' &&\r\n      data.slice(-39) === '1111111111111111111111111111111114T1Anm')\r\n  ) {\r\n    buffer.append(Buffer.alloc(33, 0))\r\n  } else {\r\n    buffer.append(PublicKey.from(data).key)\r\n  }\r\n}\r\n\r\nconst BinarySerializer = (size = null) => {\r\n  return (buffer, data) => {\r\n    data = HexBuffer.from(data)\r\n    const len = data.buffer.length\r\n    if (size) {\r\n      if (len !== size) {\r\n        throw new Error(\r\n          `Unable to serialize binary. Expected ${size} bytes, got ${len}`\r\n        )\r\n      }\r\n    } else {\r\n      buffer.writeVarint32(len)\r\n    }\r\n    buffer.append(data.buffer)\r\n  }\r\n}\r\n\r\nconst VariableBinarySerializer = BinarySerializer()\r\n\r\nconst FlatMapSerializer = (keySerializer, valueSerializer) => {\r\n  return (buffer, data) => {\r\n    buffer.writeVarint32(data.length)\r\n    for (const [key, value] of data) {\r\n      keySerializer(buffer, key)\r\n      valueSerializer(buffer, value)\r\n    }\r\n  }\r\n}\r\n\r\nconst ArraySerializer = (itemSerializer) => {\r\n  return (buffer, data) => {\r\n    buffer.writeVarint32(data.length)\r\n    for (const item of data) {\r\n      itemSerializer(buffer, item)\r\n    }\r\n  }\r\n}\r\n\r\nconst ObjectSerializer = (keySerializers) => {\r\n  return (buffer, data) => {\r\n    for (const [key, serializer] of keySerializers) {\r\n      try {\r\n        serializer(buffer, data[key])\r\n      } catch (error) {\r\n        error.message = `${key}: ${error.message}`\r\n        throw error\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst OptionalSerializer = (valueSerializer) => {\r\n  return (buffer, data) => {\r\n    if (data !== undefined) {\r\n      buffer.writeByte(1)\r\n      valueSerializer(buffer, data)\r\n    } else {\r\n      buffer.writeByte(0)\r\n    }\r\n  }\r\n}\r\n\r\nconst AuthoritySerializer = ObjectSerializer([\r\n  ['weight_threshold', UInt32Serializer],\r\n  ['account_auths', FlatMapSerializer(StringSerializer, UInt16Serializer)],\r\n  ['key_auths', FlatMapSerializer(PublicKeySerializer, UInt16Serializer)]\r\n])\r\n\r\nconst BeneficiarySerializer = ObjectSerializer([\r\n  ['account', StringSerializer],\r\n  ['weight', UInt16Serializer]\r\n])\r\n\r\nconst PriceSerializer = ObjectSerializer([\r\n  ['base', AssetSerializer],\r\n  ['quote', AssetSerializer]\r\n])\r\n\r\nconst SignedBlockHeaderSerializer = ObjectSerializer([\r\n  ['previous', BinarySerializer(20)],\r\n  ['timestamp', DateSerializer],\r\n  ['witness', StringSerializer],\r\n  ['transaction_merkle_root', BinarySerializer(20)],\r\n  ['extensions', ArraySerializer(VoidSerializer)],\r\n  ['witness_signature', BinarySerializer(65)]\r\n])\r\n\r\nconst ChainPropertiesSerializer = ObjectSerializer([\r\n  ['account_creation_fee', AssetSerializer],\r\n  ['maximum_block_size', UInt32Serializer],\r\n  ['hbd_interest_rate', UInt16Serializer]\r\n])\r\n\r\nconst OperationDataSerializer = (operationId, definitions) => {\r\n  const objectSerializer = ObjectSerializer(definitions)\r\n  return (buffer, data) => {\r\n    buffer.writeVarint32(operationId)\r\n    objectSerializer(buffer, data)\r\n  }\r\n}\r\n\r\nconst OperationSerializers = {}\r\n\r\nOperationSerializers.account_create = OperationDataSerializer(9, [\r\n  ['fee', AssetSerializer],\r\n  ['creator', StringSerializer],\r\n  ['new_account_name', StringSerializer],\r\n  ['owner', AuthoritySerializer],\r\n  ['active', AuthoritySerializer],\r\n  ['posting', AuthoritySerializer],\r\n  ['memo_key', PublicKeySerializer],\r\n  ['json_metadata', StringSerializer]\r\n])\r\n\r\nOperationSerializers.account_create_with_delegation = OperationDataSerializer(\r\n  41,\r\n  [\r\n    ['fee', AssetSerializer],\r\n    ['delegation', AssetSerializer],\r\n    ['creator', StringSerializer],\r\n    ['new_account_name', StringSerializer],\r\n    ['owner', AuthoritySerializer],\r\n    ['active', AuthoritySerializer],\r\n    ['posting', AuthoritySerializer],\r\n    ['memo_key', PublicKeySerializer],\r\n    ['json_metadata', StringSerializer],\r\n    ['extensions', ArraySerializer(VoidSerializer)]\r\n  ]\r\n)\r\n\r\nOperationSerializers.account_update = OperationDataSerializer(10, [\r\n  ['account', StringSerializer],\r\n  ['owner', OptionalSerializer(AuthoritySerializer)],\r\n  ['active', OptionalSerializer(AuthoritySerializer)],\r\n  ['posting', OptionalSerializer(AuthoritySerializer)],\r\n  ['memo_key', PublicKeySerializer],\r\n  ['json_metadata', StringSerializer]\r\n])\r\n\r\nOperationSerializers.account_witness_proxy = OperationDataSerializer(13, [\r\n  ['account', StringSerializer],\r\n  ['proxy', StringSerializer]\r\n])\r\n\r\nOperationSerializers.account_witness_vote = OperationDataSerializer(12, [\r\n  ['account', StringSerializer],\r\n  ['witness', StringSerializer],\r\n  ['approve', BooleanSerializer]\r\n])\r\n\r\nOperationSerializers.cancel_transfer_from_savings = OperationDataSerializer(\r\n  34,\r\n  [\r\n    ['from', StringSerializer],\r\n    ['request_id', UInt32Serializer]\r\n  ]\r\n)\r\n\r\nOperationSerializers.change_recovery_account = OperationDataSerializer(26, [\r\n  ['account_to_recover', StringSerializer],\r\n  ['new_recovery_account', StringSerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.claim_account = OperationDataSerializer(22, [\r\n  ['creator', StringSerializer],\r\n  ['fee', AssetSerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.claim_reward_balance = OperationDataSerializer(39, [\r\n  ['account', StringSerializer],\r\n  ['reward_hive', AssetSerializer],\r\n  ['reward_hbd', AssetSerializer],\r\n  ['reward_vests', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.comment = OperationDataSerializer(1, [\r\n  ['parent_author', StringSerializer],\r\n  ['parent_permlink', StringSerializer],\r\n  ['author', StringSerializer],\r\n  ['permlink', StringSerializer],\r\n  ['title', StringSerializer],\r\n  ['body', StringSerializer],\r\n  ['json_metadata', StringSerializer]\r\n])\r\n\r\nOperationSerializers.comment_options = OperationDataSerializer(19, [\r\n  ['author', StringSerializer],\r\n  ['permlink', StringSerializer],\r\n  ['max_accepted_payout', AssetSerializer],\r\n  ['percent_hbd', UInt16Serializer],\r\n  ['allow_votes', BooleanSerializer],\r\n  ['allow_curation_rewards', BooleanSerializer],\r\n  [\r\n    'extensions',\r\n    ArraySerializer(\r\n      StaticVariantSerializer([\r\n        ObjectSerializer([\r\n          ['beneficiaries', ArraySerializer(BeneficiarySerializer)]\r\n        ])\r\n      ])\r\n    )\r\n  ]\r\n])\r\n\r\nOperationSerializers.convert = OperationDataSerializer(8, [\r\n  ['owner', StringSerializer],\r\n  ['requestid', UInt32Serializer],\r\n  ['amount', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.create_claimed_account = OperationDataSerializer(23, [\r\n  ['creator', StringSerializer],\r\n  ['new_account_name', StringSerializer],\r\n  ['owner', AuthoritySerializer],\r\n  ['active', AuthoritySerializer],\r\n  ['posting', AuthoritySerializer],\r\n  ['memo_key', PublicKeySerializer],\r\n  ['json_metadata', StringSerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.custom = OperationDataSerializer(15, [\r\n  ['required_auths', ArraySerializer(StringSerializer)],\r\n  ['id', UInt16Serializer],\r\n  ['data', VariableBinarySerializer]\r\n])\r\n\r\nOperationSerializers.custom_binary = OperationDataSerializer(35, [\r\n  ['required_owner_auths', ArraySerializer(StringSerializer)],\r\n  ['required_active_auths', ArraySerializer(StringSerializer)],\r\n  ['required_posting_auths', ArraySerializer(StringSerializer)],\r\n  ['required_auths', ArraySerializer(AuthoritySerializer)],\r\n  ['id', StringSerializer],\r\n  ['data', VariableBinarySerializer]\r\n])\r\n\r\nOperationSerializers.custom_json = OperationDataSerializer(18, [\r\n  ['required_auths', ArraySerializer(StringSerializer)],\r\n  ['required_posting_auths', ArraySerializer(StringSerializer)],\r\n  ['id', StringSerializer],\r\n  ['json', StringSerializer]\r\n])\r\n\r\nOperationSerializers.decline_voting_rights = OperationDataSerializer(36, [\r\n  ['account', StringSerializer],\r\n  ['decline', BooleanSerializer]\r\n])\r\n\r\nOperationSerializers.delegate_vesting_shares = OperationDataSerializer(40, [\r\n  ['delegator', StringSerializer],\r\n  ['delegatee', StringSerializer],\r\n  ['vesting_shares', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.delete_comment = OperationDataSerializer(17, [\r\n  ['author', StringSerializer],\r\n  ['permlink', StringSerializer]\r\n])\r\n\r\nOperationSerializers.escrow_approve = OperationDataSerializer(31, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['agent', StringSerializer],\r\n  ['who', StringSerializer],\r\n  ['escrow_id', UInt32Serializer],\r\n  ['approve', BooleanSerializer]\r\n])\r\n\r\nOperationSerializers.escrow_dispute = OperationDataSerializer(28, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['agent', StringSerializer],\r\n  ['who', StringSerializer],\r\n  ['escrow_id', UInt32Serializer]\r\n])\r\n\r\nOperationSerializers.escrow_release = OperationDataSerializer(29, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['agent', StringSerializer],\r\n  ['who', StringSerializer],\r\n  ['receiver', StringSerializer],\r\n  ['escrow_id', UInt32Serializer],\r\n  ['hbd_amount', AssetSerializer],\r\n  ['hive_amount', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.escrow_transfer = OperationDataSerializer(27, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['agent', StringSerializer],\r\n  ['escrow_id', UInt32Serializer],\r\n  ['hbd_amount', AssetSerializer],\r\n  ['hive_amount', AssetSerializer],\r\n  ['fee', AssetSerializer],\r\n  ['ratification_deadline', DateSerializer],\r\n  ['escrow_expiration', DateSerializer],\r\n  ['json_meta', StringSerializer]\r\n])\r\n\r\nOperationSerializers.feed_publish = OperationDataSerializer(7, [\r\n  ['publisher', StringSerializer],\r\n  ['exchange_rate', PriceSerializer]\r\n])\r\n\r\nOperationSerializers.limit_order_cancel = OperationDataSerializer(6, [\r\n  ['owner', StringSerializer],\r\n  ['orderid', UInt32Serializer]\r\n])\r\n\r\nOperationSerializers.limit_order_create = OperationDataSerializer(5, [\r\n  ['owner', StringSerializer],\r\n  ['orderid', UInt32Serializer],\r\n  ['amount_to_sell', AssetSerializer],\r\n  ['min_to_receive', AssetSerializer],\r\n  ['fill_or_kill', BooleanSerializer],\r\n  ['expiration', DateSerializer]\r\n])\r\n\r\nOperationSerializers.limit_order_create2 = OperationDataSerializer(21, [\r\n  ['owner', StringSerializer],\r\n  ['orderid', UInt32Serializer],\r\n  ['amount_to_sell', AssetSerializer],\r\n  ['fill_or_kill', BooleanSerializer],\r\n  ['exchange_rate', PriceSerializer],\r\n  ['expiration', DateSerializer]\r\n])\r\n\r\nOperationSerializers.recover_account = OperationDataSerializer(25, [\r\n  ['account_to_recover', StringSerializer],\r\n  ['new_owner_authority', AuthoritySerializer],\r\n  ['recent_owner_authority', AuthoritySerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.report_over_production = OperationDataSerializer(16, [\r\n  ['reporter', StringSerializer],\r\n  ['first_block', SignedBlockHeaderSerializer],\r\n  ['second_block', SignedBlockHeaderSerializer]\r\n])\r\n\r\nOperationSerializers.request_account_recovery = OperationDataSerializer(24, [\r\n  ['recovery_account', StringSerializer],\r\n  ['account_to_recover', StringSerializer],\r\n  ['new_owner_authority', AuthoritySerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.reset_account = OperationDataSerializer(37, [\r\n  ['reset_account', StringSerializer],\r\n  ['account_to_reset', StringSerializer],\r\n  ['new_owner_authority', AuthoritySerializer]\r\n])\r\n\r\nOperationSerializers.set_reset_account = OperationDataSerializer(38, [\r\n  ['account', StringSerializer],\r\n  ['current_reset_account', StringSerializer],\r\n  ['reset_account', StringSerializer]\r\n])\r\n\r\nOperationSerializers.set_withdraw_vesting_route = OperationDataSerializer(20, [\r\n  ['from_account', StringSerializer],\r\n  ['to_account', StringSerializer],\r\n  ['percent', UInt16Serializer],\r\n  ['auto_vest', BooleanSerializer]\r\n])\r\n\r\nOperationSerializers.transfer = OperationDataSerializer(2, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['amount', AssetSerializer],\r\n  ['memo', StringSerializer]\r\n])\r\n\r\nOperationSerializers.transfer_from_savings = OperationDataSerializer(33, [\r\n  ['from', StringSerializer],\r\n  ['request_id', UInt32Serializer],\r\n  ['to', StringSerializer],\r\n  ['amount', AssetSerializer],\r\n  ['memo', StringSerializer]\r\n])\r\n\r\nOperationSerializers.transfer_to_savings = OperationDataSerializer(32, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['amount', AssetSerializer],\r\n  ['memo', StringSerializer]\r\n])\r\n\r\nOperationSerializers.transfer_to_vesting = OperationDataSerializer(3, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['amount', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.vote = OperationDataSerializer(0, [\r\n  ['voter', StringSerializer],\r\n  ['author', StringSerializer],\r\n  ['permlink', StringSerializer],\r\n  ['weight', Int16Serializer]\r\n])\r\n\r\nOperationSerializers.withdraw_vesting = OperationDataSerializer(4, [\r\n  ['account', StringSerializer],\r\n  ['vesting_shares', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.witness_update = OperationDataSerializer(11, [\r\n  ['owner', StringSerializer],\r\n  ['url', StringSerializer],\r\n  ['block_signing_key', PublicKeySerializer],\r\n  ['props', ChainPropertiesSerializer],\r\n  ['fee', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.witness_set_properties = OperationDataSerializer(42, [\r\n  ['owner', StringSerializer],\r\n  ['props', FlatMapSerializer(StringSerializer, VariableBinarySerializer)],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.account_update2 = OperationDataSerializer(43, [\r\n  ['account', StringSerializer],\r\n  ['owner', OptionalSerializer(AuthoritySerializer)],\r\n  ['active', OptionalSerializer(AuthoritySerializer)],\r\n  ['posting', OptionalSerializer(AuthoritySerializer)],\r\n  ['memo_key', OptionalSerializer(PublicKeySerializer)],\r\n  ['json_metadata', StringSerializer],\r\n  ['posting_json_metadata', StringSerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.create_proposal = OperationDataSerializer(44, [\r\n  ['creator', StringSerializer],\r\n  ['receiver', StringSerializer],\r\n  ['start_date', DateSerializer],\r\n  ['end_date', DateSerializer],\r\n  ['daily_pay', AssetSerializer],\r\n  ['subject', StringSerializer],\r\n  ['permlink', StringSerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.update_proposal_votes = OperationDataSerializer(45, [\r\n  ['voter', StringSerializer],\r\n  ['proposal_ids', ArraySerializer(Int64Serializer)],\r\n  ['approve', BooleanSerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.remove_proposal = OperationDataSerializer(46, [\r\n  ['proposal_owner', StringSerializer],\r\n  ['proposal_ids', ArraySerializer(Int64Serializer)],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nconst ProposalUpdateSerializer = ObjectSerializer([\r\n  ['end_date', DateSerializer]\r\n])\r\n\r\nOperationSerializers.update_proposal = OperationDataSerializer(47, [\r\n  ['proposal_id', UInt64Serializer],\r\n  ['creator', StringSerializer],\r\n  ['daily_pay', AssetSerializer],\r\n  ['subject', StringSerializer],\r\n  ['permlink', StringSerializer],\r\n  [\r\n    'extensions',\r\n    ArraySerializer(\r\n      StaticVariantSerializer([VoidSerializer, ProposalUpdateSerializer])\r\n    )\r\n  ]\r\n])\r\n\r\nOperationSerializers.collateralized_convert = OperationDataSerializer(48, [\r\n  ['owner', StringSerializer],\r\n  ['requestid', UInt32Serializer],\r\n  ['amount', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.recurrent_transfer = OperationDataSerializer(49, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['amount', AssetSerializer],\r\n  ['memo', StringSerializer],\r\n  ['recurrence', UInt16Serializer],\r\n  ['executions', UInt16Serializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nconst OperationSerializer = (buffer, operation) => {\r\n  const serializer = OperationSerializers[operation[0]]\r\n  if (!serializer) {\r\n    throw new Error(`No serializer for operation: ${operation[0]}`)\r\n  }\r\n  try {\r\n    serializer(buffer, operation[1])\r\n  } catch (error) {\r\n    error.message = `${operation[0]}: ${error.message}`\r\n    throw error\r\n  }\r\n}\r\n\r\nconst TransactionSerializer = ObjectSerializer([\r\n  ['ref_block_num', UInt16Serializer],\r\n  ['ref_block_prefix', UInt32Serializer],\r\n  ['expiration', DateSerializer],\r\n  ['operations', ArraySerializer(OperationSerializer)],\r\n  ['extensions', ArraySerializer(StringSerializer)]\r\n])\r\n\r\nconst EncryptedMemoSerializer = ObjectSerializer([\r\n  ['from', PublicKeySerializer],\r\n  ['to', PublicKeySerializer],\r\n  ['nonce', UInt64Serializer],\r\n  ['check', UInt32Serializer],\r\n  ['encrypted', BinarySerializer()]\r\n])\r\n\r\nexport const Serializer = {\r\n  Array: ArraySerializer,\r\n  Asset: AssetSerializer,\r\n  Authority: AuthoritySerializer,\r\n  Binary: BinarySerializer,\r\n  Boolean: BooleanSerializer,\r\n  Date: DateSerializer,\r\n  FlatMap: FlatMapSerializer,\r\n  Int16: Int16Serializer,\r\n  Int32: Int32Serializer,\r\n  Int64: Int64Serializer,\r\n  Int8: Int8Serializer,\r\n  Memo: EncryptedMemoSerializer,\r\n  Object: ObjectSerializer,\r\n  Operation: OperationSerializer,\r\n  Optional: OptionalSerializer,\r\n  Price: PriceSerializer,\r\n  PublicKey: PublicKeySerializer,\r\n  StaticVariant: StaticVariantSerializer,\r\n  String: StringSerializer,\r\n  Transaction: TransactionSerializer,\r\n  UInt16: UInt16Serializer,\r\n  UInt32: UInt32Serializer,\r\n  UInt64: UInt64Serializer,\r\n  UInt8: UInt8Serializer,\r\n  Void: VoidSerializer\r\n}\r\n","import ByteBuffer from 'bytebuffer-hex-custom'\r\nimport { config } from '../config.js'\r\nimport { sha256 } from '../helpers/crypto.js'\r\nimport { Serializer } from '../helpers/serializer.js'\r\n\r\nconst CHAIN_ID = Buffer.from(config.chain_id, 'hex')\r\n\r\n/**\r\n * Sign a transaction by keys (supports multi signature)\r\n * @param transaction - transaction to be signed\r\n * @param keys - Array of keys<Buffer>\r\n */\r\nexport const signTransaction = (transaction, keys) => {\r\n  const CHAIN_ID = Buffer.from(config.chain_id, 'hex')\r\n  const { digest, txId } = transactionDigest(transaction, CHAIN_ID)\r\n  const signedTransaction = { ...transaction }\r\n  if (!signedTransaction.signatures) {\r\n    signedTransaction.signatures = []\r\n  }\r\n  if (!Array.isArray(keys)) {\r\n    keys = [keys]\r\n  }\r\n  for (const key of keys) {\r\n    const signature = key.sign(digest)\r\n    signedTransaction.signatures.push(signature.customToString())\r\n  }\r\n\r\n  return { signedTransaction, txId }\r\n}\r\n\r\n/** Serialize transaction */\r\nexport const transactionDigest = (transaction, chainId = CHAIN_ID) => {\r\n  const buffer = new ByteBuffer(\r\n    ByteBuffer.DEFAULT_CAPACITY,\r\n    ByteBuffer.LITTLE_ENDIAN\r\n  )\r\n  const temp = { ...transaction }\r\n  try {\r\n    Serializer.Transaction(buffer, temp)\r\n  } catch (cause) {\r\n    throw new Error('Unable to serialize transaction')\r\n  }\r\n  buffer.flip()\r\n  const transactionData = Buffer.from(buffer.toBuffer())\r\n  const txId = sha256(transactionData).toString('hex').slice(0, 40)\r\n  const digest = sha256(Buffer.concat([chainId, transactionData]))\r\n  return { digest, txId }\r\n}\r\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\n\nexport default (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  }, freq);\n}\n","'use strict';\n\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  const threshold = 1000 / freq;\n  let timer = null;\n  return function throttled() {\n    const force = this === true;\n\n    const now = Date.now();\n    if (force || now - timestamp > threshold) {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n      timestamp = now;\n      return fn.apply(null, arguments);\n    }\n    if (!timer) {\n      timer = setTimeout(() => {\n        timer = null;\n        timestamp = Date.now();\n        return fn.apply(null, arguments);\n      }, threshold - (now - timestamp));\n    }\n  };\n}\n\nexport default throttle;\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport progressEventReducer from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType} = _config;\n    let onCanceled;\n    function done() {\n      if (_config.cancelToken) {\n        _config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (_config.signal) {\n        _config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, _config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, _config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        _config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof _config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(_config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof _config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(_config.onUploadProgress));\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst composeSignals = (signals, timeout) => {\n  let controller = new AbortController();\n\n  let aborted;\n\n  const onabort = function (cancel) {\n    if (!aborted) {\n      aborted = true;\n      unsubscribe();\n      const err = cancel instanceof Error ? cancel : this.reason;\n      controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n    }\n  }\n\n  let timer = timeout && setTimeout(() => {\n    onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n  }, timeout)\n\n  const unsubscribe = () => {\n    if (signals) {\n      timer && clearTimeout(timer);\n      timer = null;\n      signals.forEach(signal => {\n        signal &&\n        (signal.removeEventListener ? signal.removeEventListener('abort', onabort) : signal.unsubscribe(onabort));\n      });\n      signals = null;\n    }\n  }\n\n  signals.forEach((signal) => signal && signal.addEventListener && signal.addEventListener('abort', onabort));\n\n  const {signal} = controller;\n\n  signal.unsubscribe = unsubscribe;\n\n  return [signal, () => {\n    timer && clearTimeout(timer);\n    timer = null;\n  }];\n}\n\nexport default composeSignals;\n","\n\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize, encode) {\n  for await (const chunk of iterable) {\n    yield* streamChunk(ArrayBuffer.isView(chunk) ? chunk : (await encode(String(chunk))), chunkSize);\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish, encode) => {\n  const iterator = readBytes(stream, chunkSize, encode);\n\n  let bytes = 0;\n\n  return new ReadableStream({\n    type: 'bytes',\n\n    async pull(controller) {\n      const {done, value} = await iterator.next();\n\n      if (done) {\n        controller.close();\n        onFinish();\n        return;\n      }\n\n      let len = value.byteLength;\n      onProgress && onProgress(bytes += len);\n      controller.enqueue(new Uint8Array(value));\n    },\n    cancel(reason) {\n      onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport progressEventReducer from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst fetchProgressDecorator = (total, fn) => {\n  const lengthComputable = total != null;\n  return (loaded) => setTimeout(() => fn({\n    lengthComputable,\n    total,\n    loaded\n  }));\n}\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst supportsRequestStream = isReadableStreamSupported && (() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n})();\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported && !!(()=> {\n  try {\n    return utils.isReadableStream(new Response('').body);\n  } catch(err) {\n    // return undefined\n  }\n})();\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    return (await new Request(body).arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let [composedSignal, stopTimeout] = (signal || cancelToken || timeout) ?\n    composeSignals([signal, cancelToken], timeout) : [];\n\n  let finished, request;\n\n  const onFinish = () => {\n    !finished && setTimeout(() => {\n      composedSignal && composedSignal.unsubscribe();\n    });\n\n    finished = true;\n  }\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, fetchProgressDecorator(\n          requestContentLength,\n          progressEventReducer(onUploadProgress)\n        ), null, encodeText);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'cors' : 'omit';\n    }\n\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      withCredentials\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || isStreamResponse)) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onDownloadProgress && fetchProgressDecorator(\n          responseContentLength,\n          progressEventReducer(onDownloadProgress, true)\n        ), isStreamResponse && onFinish, encodeText),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && onFinish();\n\n    stopTimeout && stopTimeout();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    onFinish();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.7.2\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import axios from 'axios'\r\nimport { config } from '../config.js'\r\n\r\n/**\r\n * Make calls to hive node\r\n * @param {string}method - e.g. condenser_api.get_dynamic_global_properties\r\n * @param {[any]|object}params - an array or object\r\n * @param {number}timeout - optional - default 10 seconds\r\n */\r\nexport const call = async (method, params = [], timeout = 10) => {\r\n  let resolved = 0\r\n  const conf = {}\r\n  if (config.axiosAdapter !== null) {\r\n    conf.adapter = config.axiosAdapter\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        config.node,\r\n        JSON.stringify({\r\n          jsonrpc: '2.0',\r\n          method,\r\n          params,\r\n          id: 1\r\n        }),\r\n        conf\r\n      )\r\n      .then(res => {\r\n        if (res && res.status === 200) {\r\n          resolved = 1\r\n          resolve(res.data)\r\n        }\r\n      })\r\n    setTimeout(() => {\r\n      if (!resolved) {\r\n        reject(new Error('Network timeout.'))\r\n      }\r\n    }, timeout * 1000)\r\n  })\r\n}\r\n","import { PublicKey } from './PublicKey.js'\r\nimport { secp256k1 } from '@noble/curves/secp256k1'\r\n\r\n/** ECDSA (secp256k1) signature. */\r\nexport class Signature {\r\n  constructor (data, recovery, compressed = true) {\r\n    this.data = data\r\n    this.recovery = recovery\r\n    this.compressed = compressed\r\n  }\r\n\r\n  static from (string) {\r\n    if (typeof string === 'string') {\r\n      const temp = Buffer.from(string, 'hex')\r\n      let recovery = parseInt(temp.subarray(0, 1).toString('hex'), 16) - 31\r\n      let compressed = true\r\n      // non-compressed signatures have -4\r\n      // https://github.com/bitcoin/bitcoin/blob/95ea54ba089610019a74c1176a2c7c0dba144b1c/src/key.cpp#L257\r\n      if (recovery < 0) {\r\n        compressed = false\r\n        recovery = recovery + 4\r\n      }\r\n      const data = temp.subarray(1)\r\n      return new Signature(data, recovery, compressed)\r\n    } else {\r\n      return new Error('Expected string for data')\r\n    }\r\n  }\r\n\r\n  toBuffer () {\r\n    const buffer = Buffer.alloc(65)\r\n    if (this.compressed) {\r\n      buffer.writeUInt8(this.recovery + 31, 0)\r\n    } else {\r\n      buffer.writeUInt8(this.recovery + 27, 0)\r\n    }\r\n    this.data.copy(buffer, 1)\r\n    return buffer\r\n  }\r\n\r\n  customToString () {\r\n    return this.toBuffer().toString('hex')\r\n  }\r\n\r\n  getPublicKey (message) {\r\n    if (Buffer.isBuffer(message) && message.length !== 32) {\r\n      return new Error('Expected a valid sha256 hash as message')\r\n    }\r\n    if (typeof message === 'string' && message.length !== 64) {\r\n      return new Error('Expected a valid sha256 hash as message')\r\n    }\r\n    const sig = secp256k1.Signature.fromCompact(this.data)\r\n    const temp = new secp256k1.Signature(sig.r, sig.s, this.recovery)\r\n    return new PublicKey(Buffer.from(temp.recoverPublicKey(message).toHex(), 'hex'))\r\n  }\r\n}\r\n","import bs58 from 'bs58'\r\nimport { secp256k1 } from '@noble/curves/secp256k1'\r\nimport { config } from '../config.js'\r\nimport { sha256, sha512 } from './crypto.js'\r\nimport { PublicKey } from './PublicKey.js'\r\nimport { Signature } from './Signature.js'\r\n\r\nconst NETWORK_ID = Buffer.from([0x80])\r\nconst DEFAULT_ADDRESS_PREFIX = config.address_prefix\r\n\r\n/** ECDSA (secp256k1) private key. */\r\nexport class PrivateKey {\r\n  constructor (key) {\r\n    this.key = key\r\n    try {\r\n      secp256k1.getPublicKey(key)\r\n    } catch (e) {\r\n      throw new Error('invalid private key')\r\n    }\r\n  }\r\n\r\n  /** Convenience to create a new instance from WIF string or buffer */\r\n  static from (value) {\r\n    if (typeof value === 'string') {\r\n      return PrivateKey.fromString(value)\r\n    } else {\r\n      return new PrivateKey(value)\r\n    }\r\n  }\r\n\r\n  /** Create a new instance from a WIF-encoded key. */\r\n  static fromString (wif) {\r\n    return new PrivateKey(decodePrivate(wif).subarray(1))\r\n  }\r\n\r\n  /** Create a new instance from a seed. */\r\n  static fromSeed (seed) {\r\n    return new PrivateKey(sha256(seed))\r\n  }\r\n\r\n  /** Create key from username and password. */\r\n  static fromLogin (username, password, role = 'active') {\r\n    const seed = username + role + password\r\n    return PrivateKey.fromSeed(seed)\r\n  }\r\n\r\n  /**\r\n   * Sign message.\r\n   * @param message 32-byte message.\r\n   */\r\n  sign (message) {\r\n    const options = {\r\n      extraEntropy: true,\r\n      lowS: true\r\n    }\r\n    const rv = secp256k1.sign(message, this.key, options)\r\n    return Signature.from((rv.recovery + 31).toString(16) + rv.toCompactHex())\r\n  }\r\n\r\n  /** Derive the public key for this private key. */\r\n  createPublic (prefix = DEFAULT_ADDRESS_PREFIX) {\r\n    return new PublicKey(secp256k1.getPublicKey(this.key), prefix)\r\n  }\r\n\r\n  /** Return a WIF-encoded representation of the key. */\r\n  toString () {\r\n    return encodePrivate(Buffer.concat([NETWORK_ID, this.key]))\r\n  }\r\n\r\n  /**\r\n   * Used by `utils.inspect` and `console.log` in node.js. Does not show the full key\r\n   * to get the full encoded key you need to explicitly call {@link toString}.\r\n   */\r\n  inspect () {\r\n    const key = this.toString()\r\n    return `PrivateKey: ${key.slice(0, 6)}...${key.slice(-6)}`\r\n  }\r\n\r\n  /**\r\n   * Get shared secret for memo cryptography\r\n   */\r\n  getSharedSecret (publicKey) {\r\n    const s = secp256k1.getSharedSecret(this.key, publicKey.key)\r\n    // strip the parity byte\r\n    return sha512(s.subarray(1))\r\n  }\r\n\r\n  /**\r\n   * Returns a randomly generated instance of PrivateKey\r\n   * Might take up to 250ms\r\n   */\r\n  static randomKey () {\r\n    return new PrivateKey(Buffer.from(secp256k1.utils.randomPrivateKey()))\r\n  }\r\n}\r\n\r\nconst doubleSha256 = input => {\r\n  const dbl = sha256(sha256(input))\r\n  return dbl\r\n}\r\n\r\n/** Encode bs58+doubleSha256-checksum private key. */\r\nconst encodePrivate = key => {\r\n  // assert.equal(key.readUInt8(0), 0x80, 'private key network id mismatch')\r\n  const checksum = doubleSha256(key)\r\n  return bs58.encode(Buffer.concat([key, checksum.slice(0, 4)]))\r\n}\r\n\r\n/** Decode bs58+doubleSha256-checksum encoded private key. */\r\nconst decodePrivate = encodedKey => {\r\n  const buffer = Buffer.from(bs58.decode(encodedKey))\r\n  // assert.deepEqual(buffer.slice(0, 1), NETWORK_ID, 'private key network id mismatch')\r\n  // const checksum = buffer.slice(-4)\r\n  const key = buffer.slice(0, -4)\r\n  // const checksumVerify = doubleSha256(key).slice(0, 4)\r\n  // assert.deepEqual(checksumVerify, checksum, 'private key checksum mismatch')\r\n  return key\r\n}\r\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('hash must be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\nimport { bytes as abytes, isBytes } from './_assert.js';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u16 = (arr) => new Uint16Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 2));\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`string expected, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    else if (isBytes(data))\n        data = data.slice();\n    else\n        throw new Error(`Uint8Array expected, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts == null || typeof opts !== 'object')\n        throw new Error('options must be defined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n// For runtime check if class implements interface\nexport class Hash {\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nexport const wrapCipher = (params, c) => {\n    Object.assign(c, params);\n    return c;\n};\n// Polyfill for Safari 14\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\nexport function u64Lengths(ciphertext, AAD) {\n    const num = new Uint8Array(16);\n    const view = createView(num);\n    setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n    setBigUint64(view, 8, BigInt(ciphertext.length), true);\n    return num;\n}\n//# sourceMappingURL=utils.js.map","import { createView, toBytes, u32 } from './utils.js';\nimport { bytes as abytes, exists as aexists, output as aoutput } from './_assert.js';\n// GHash from AES-GCM and its little-endian \"mirror image\" Polyval from AES-SIV.\n// Implemented in terms of GHash with conversion function for keys\n// GCM GHASH from NIST SP800-38d, SIV from RFC 8452.\n// https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf\n// GHASH   modulo: x^128 + x^7   + x^2   + x     + 1\n// POLYVAL modulo: x^128 + x^127 + x^126 + x^121 + 1\nconst BLOCK_SIZE = 16;\n// TODO: rewrite\n// temporary padding buffer\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\nconst ZEROS32 = u32(ZEROS16);\nconst POLY = 0xe1; // v = 2*v % POLY\n// v = 2*v % POLY\n// NOTE: because x + x = 0 (add/sub is same), mul2(x) != x+x\n// We can multiply any number using montgomery ladder and this function (works as double, add is simple xor)\nconst mul2 = (s0, s1, s2, s3) => {\n    const hiBit = s3 & 1;\n    return {\n        s3: (s2 << 31) | (s3 >>> 1),\n        s2: (s1 << 31) | (s2 >>> 1),\n        s1: (s0 << 31) | (s1 >>> 1),\n        s0: (s0 >>> 1) ^ ((POLY << 24) & -(hiBit & 1)), // reduce % poly\n    };\n};\nconst swapLE = (n) => (((n >>> 0) & 0xff) << 24) |\n    (((n >>> 8) & 0xff) << 16) |\n    (((n >>> 16) & 0xff) << 8) |\n    ((n >>> 24) & 0xff) |\n    0;\n/**\n * `mulX_POLYVAL(ByteReverse(H))` from spec\n * @param k mutated in place\n */\nexport function _toGHASHKey(k) {\n    k.reverse();\n    const hiBit = k[15] & 1;\n    // k >>= 1\n    let carry = 0;\n    for (let i = 0; i < k.length; i++) {\n        const t = k[i];\n        k[i] = (t >>> 1) | carry;\n        carry = (t & 1) << 7;\n    }\n    k[0] ^= -hiBit & 0xe1; // if (hiBit) n ^= 0xe1000000000000000000000000000000;\n    return k;\n}\nconst estimateWindow = (bytes) => {\n    if (bytes > 64 * 1024)\n        return 8;\n    if (bytes > 1024)\n        return 4;\n    return 2;\n};\nclass GHASH {\n    // We select bits per window adaptively based on expectedLength\n    constructor(key, expectedLength) {\n        this.blockLen = BLOCK_SIZE;\n        this.outputLen = BLOCK_SIZE;\n        this.s0 = 0;\n        this.s1 = 0;\n        this.s2 = 0;\n        this.s3 = 0;\n        this.finished = false;\n        key = toBytes(key);\n        abytes(key, 16);\n        const kView = createView(key);\n        let k0 = kView.getUint32(0, false);\n        let k1 = kView.getUint32(4, false);\n        let k2 = kView.getUint32(8, false);\n        let k3 = kView.getUint32(12, false);\n        // generate table of doubled keys (half of montgomery ladder)\n        const doubles = [];\n        for (let i = 0; i < 128; i++) {\n            doubles.push({ s0: swapLE(k0), s1: swapLE(k1), s2: swapLE(k2), s3: swapLE(k3) });\n            ({ s0: k0, s1: k1, s2: k2, s3: k3 } = mul2(k0, k1, k2, k3));\n        }\n        const W = estimateWindow(expectedLength || 1024);\n        if (![1, 2, 4, 8].includes(W))\n            throw new Error(`ghash: wrong window size=${W}, should be 2, 4 or 8`);\n        this.W = W;\n        const bits = 128; // always 128 bits;\n        const windows = bits / W;\n        const windowSize = (this.windowSize = 2 ** W);\n        const items = [];\n        // Create precompute table for window of W bits\n        for (let w = 0; w < windows; w++) {\n            // truth table: 00, 01, 10, 11\n            for (let byte = 0; byte < windowSize; byte++) {\n                // prettier-ignore\n                let s0 = 0, s1 = 0, s2 = 0, s3 = 0;\n                for (let j = 0; j < W; j++) {\n                    const bit = (byte >>> (W - j - 1)) & 1;\n                    if (!bit)\n                        continue;\n                    const { s0: d0, s1: d1, s2: d2, s3: d3 } = doubles[W * w + j];\n                    (s0 ^= d0), (s1 ^= d1), (s2 ^= d2), (s3 ^= d3);\n                }\n                items.push({ s0, s1, s2, s3 });\n            }\n        }\n        this.t = items;\n    }\n    _updateBlock(s0, s1, s2, s3) {\n        (s0 ^= this.s0), (s1 ^= this.s1), (s2 ^= this.s2), (s3 ^= this.s3);\n        const { W, t, windowSize } = this;\n        // prettier-ignore\n        let o0 = 0, o1 = 0, o2 = 0, o3 = 0;\n        const mask = (1 << W) - 1; // 2**W will kill performance.\n        let w = 0;\n        for (const num of [s0, s1, s2, s3]) {\n            for (let bytePos = 0; bytePos < 4; bytePos++) {\n                const byte = (num >>> (8 * bytePos)) & 0xff;\n                for (let bitPos = 8 / W - 1; bitPos >= 0; bitPos--) {\n                    const bit = (byte >>> (W * bitPos)) & mask;\n                    const { s0: e0, s1: e1, s2: e2, s3: e3 } = t[w * windowSize + bit];\n                    (o0 ^= e0), (o1 ^= e1), (o2 ^= e2), (o3 ^= e3);\n                    w += 1;\n                }\n            }\n        }\n        this.s0 = o0;\n        this.s1 = o1;\n        this.s2 = o2;\n        this.s3 = o3;\n    }\n    update(data) {\n        data = toBytes(data);\n        aexists(this);\n        const b32 = u32(data);\n        const blocks = Math.floor(data.length / BLOCK_SIZE);\n        const left = data.length % BLOCK_SIZE;\n        for (let i = 0; i < blocks; i++) {\n            this._updateBlock(b32[i * 4 + 0], b32[i * 4 + 1], b32[i * 4 + 2], b32[i * 4 + 3]);\n        }\n        if (left) {\n            ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n            this._updateBlock(ZEROS32[0], ZEROS32[1], ZEROS32[2], ZEROS32[3]);\n            ZEROS32.fill(0); // clean tmp buffer\n        }\n        return this;\n    }\n    destroy() {\n        const { t } = this;\n        // clean precompute table\n        for (const elm of t) {\n            (elm.s0 = 0), (elm.s1 = 0), (elm.s2 = 0), (elm.s3 = 0);\n        }\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        const { s0, s1, s2, s3 } = this;\n        const o32 = u32(out);\n        o32[0] = s0;\n        o32[1] = s1;\n        o32[2] = s2;\n        o32[3] = s3;\n        return out;\n    }\n    digest() {\n        const res = new Uint8Array(BLOCK_SIZE);\n        this.digestInto(res);\n        this.destroy();\n        return res;\n    }\n}\nclass Polyval extends GHASH {\n    constructor(key, expectedLength) {\n        key = toBytes(key);\n        const ghKey = _toGHASHKey(key.slice());\n        super(ghKey, expectedLength);\n        ghKey.fill(0);\n    }\n    update(data) {\n        data = toBytes(data);\n        aexists(this);\n        const b32 = u32(data);\n        const left = data.length % BLOCK_SIZE;\n        const blocks = Math.floor(data.length / BLOCK_SIZE);\n        for (let i = 0; i < blocks; i++) {\n            this._updateBlock(swapLE(b32[i * 4 + 3]), swapLE(b32[i * 4 + 2]), swapLE(b32[i * 4 + 1]), swapLE(b32[i * 4 + 0]));\n        }\n        if (left) {\n            ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n            this._updateBlock(swapLE(ZEROS32[3]), swapLE(ZEROS32[2]), swapLE(ZEROS32[1]), swapLE(ZEROS32[0]));\n            ZEROS32.fill(0); // clean tmp buffer\n        }\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // tmp ugly hack\n        const { s0, s1, s2, s3 } = this;\n        const o32 = u32(out);\n        o32[0] = s0;\n        o32[1] = s1;\n        o32[2] = s2;\n        o32[3] = s3;\n        return out.reverse();\n    }\n}\nfunction wrapConstructorWithKey(hashCons) {\n    const hashC = (msg, key) => hashCons(key, msg.length).update(toBytes(msg)).digest();\n    const tmp = hashCons(new Uint8Array(16), 0);\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (key, expectedLength) => hashCons(key, expectedLength);\n    return hashC;\n}\nexport const ghash = wrapConstructorWithKey((key, expectedLength) => new GHASH(key, expectedLength));\nexport const polyval = wrapConstructorWithKey((key, expectedLength) => new Polyval(key, expectedLength));\n//# sourceMappingURL=_polyval.js.map","// prettier-ignore\nimport { wrapCipher, createView, setBigUint64, equalBytes, u32, u8, } from './utils.js';\nimport { ghash, polyval } from './_polyval.js';\nimport { bytes as abytes } from './_assert.js';\n/*\nAES (Advanced Encryption Standard) aka Rijndael block cipher.\n\nData is split into 128-bit blocks. Encrypted in 10/12/14 rounds (128/192/256 bits). In every round:\n1. **S-box**, table substitution\n2. **Shift rows**, cyclic shift left of all rows of data array\n3. **Mix columns**, multiplying every column by fixed polynomial\n4. **Add round key**, round_key xor i-th column of array\n\nResources:\n- FIPS-197 https://csrc.nist.gov/files/pubs/fips/197/final/docs/fips-197.pdf\n- Original proposal: https://csrc.nist.gov/csrc/media/projects/cryptographic-standards-and-guidelines/documents/aes-development/rijndael-ammended.pdf\n*/\nconst BLOCK_SIZE = 16;\nconst BLOCK_SIZE32 = 4;\nconst EMPTY_BLOCK = new Uint8Array(BLOCK_SIZE);\nconst POLY = 0x11b; // 1 + x + x**3 + x**4 + x**8\n// TODO: remove multiplication, binary ops only\nfunction mul2(n) {\n    return (n << 1) ^ (POLY & -(n >> 7));\n}\nfunction mul(a, b) {\n    let res = 0;\n    for (; b > 0; b >>= 1) {\n        // Montgomery ladder\n        res ^= a & -(b & 1); // if (b&1) res ^=a (but const-time).\n        a = mul2(a); // a = 2*a\n    }\n    return res;\n}\n// AES S-box is generated using finite field inversion,\n// an affine transform, and xor of a constant 0x63.\nconst sbox = /* @__PURE__ */ (() => {\n    let t = new Uint8Array(256);\n    for (let i = 0, x = 1; i < 256; i++, x ^= mul2(x))\n        t[i] = x;\n    const box = new Uint8Array(256);\n    box[0] = 0x63; // first elm\n    for (let i = 0; i < 255; i++) {\n        let x = t[255 - i];\n        x |= x << 8;\n        box[t[i]] = (x ^ (x >> 4) ^ (x >> 5) ^ (x >> 6) ^ (x >> 7) ^ 0x63) & 0xff;\n    }\n    return box;\n})();\n// Inverted S-box\nconst invSbox = /* @__PURE__ */ sbox.map((_, j) => sbox.indexOf(j));\n// Rotate u32 by 8\nconst rotr32_8 = (n) => (n << 24) | (n >>> 8);\nconst rotl32_8 = (n) => (n << 8) | (n >>> 24);\n// T-table is optimization suggested in 5.2 of original proposal (missed from FIPS-197). Changes:\n// - LE instead of BE\n// - bigger tables: T0 and T1 are merged into T01 table and T2 & T3 into T23;\n//   so index is u16, instead of u8. This speeds up things, unexpectedly\nfunction genTtable(sbox, fn) {\n    if (sbox.length !== 256)\n        throw new Error('Wrong sbox length');\n    const T0 = new Uint32Array(256).map((_, j) => fn(sbox[j]));\n    const T1 = T0.map(rotl32_8);\n    const T2 = T1.map(rotl32_8);\n    const T3 = T2.map(rotl32_8);\n    const T01 = new Uint32Array(256 * 256);\n    const T23 = new Uint32Array(256 * 256);\n    const sbox2 = new Uint16Array(256 * 256);\n    for (let i = 0; i < 256; i++) {\n        for (let j = 0; j < 256; j++) {\n            const idx = i * 256 + j;\n            T01[idx] = T0[i] ^ T1[j];\n            T23[idx] = T2[i] ^ T3[j];\n            sbox2[idx] = (sbox[i] << 8) | sbox[j];\n        }\n    }\n    return { sbox, sbox2, T0, T1, T2, T3, T01, T23 };\n}\nconst tableEncoding = /* @__PURE__ */ genTtable(sbox, (s) => (mul(s, 3) << 24) | (s << 16) | (s << 8) | mul(s, 2));\nconst tableDecoding = /* @__PURE__ */ genTtable(invSbox, (s) => (mul(s, 11) << 24) | (mul(s, 13) << 16) | (mul(s, 9) << 8) | mul(s, 14));\nconst xPowers = /* @__PURE__ */ (() => {\n    const p = new Uint8Array(16);\n    for (let i = 0, x = 1; i < 16; i++, x = mul2(x))\n        p[i] = x;\n    return p;\n})();\nexport function expandKeyLE(key) {\n    abytes(key);\n    const len = key.length;\n    if (![16, 24, 32].includes(len))\n        throw new Error(`aes: wrong key size: should be 16, 24 or 32, got: ${len}`);\n    const { sbox2 } = tableEncoding;\n    const k32 = u32(key);\n    const Nk = k32.length;\n    const subByte = (n) => applySbox(sbox2, n, n, n, n);\n    const xk = new Uint32Array(len + 28); // expanded key\n    xk.set(k32);\n    // 4.3.1 Key expansion\n    for (let i = Nk; i < xk.length; i++) {\n        let t = xk[i - 1];\n        if (i % Nk === 0)\n            t = subByte(rotr32_8(t)) ^ xPowers[i / Nk - 1];\n        else if (Nk > 6 && i % Nk === 4)\n            t = subByte(t);\n        xk[i] = xk[i - Nk] ^ t;\n    }\n    return xk;\n}\nexport function expandKeyDecLE(key) {\n    const encKey = expandKeyLE(key);\n    const xk = encKey.slice();\n    const Nk = encKey.length;\n    const { sbox2 } = tableEncoding;\n    const { T0, T1, T2, T3 } = tableDecoding;\n    // Inverse key by chunks of 4 (rounds)\n    for (let i = 0; i < Nk; i += 4) {\n        for (let j = 0; j < 4; j++)\n            xk[i + j] = encKey[Nk - i - 4 + j];\n    }\n    encKey.fill(0);\n    // apply InvMixColumn except first & last round\n    for (let i = 4; i < Nk - 4; i++) {\n        const x = xk[i];\n        const w = applySbox(sbox2, x, x, x, x);\n        xk[i] = T0[w & 0xff] ^ T1[(w >>> 8) & 0xff] ^ T2[(w >>> 16) & 0xff] ^ T3[w >>> 24];\n    }\n    return xk;\n}\n// Apply tables\nfunction apply0123(T01, T23, s0, s1, s2, s3) {\n    return (T01[((s0 << 8) & 0xff00) | ((s1 >>> 8) & 0xff)] ^\n        T23[((s2 >>> 8) & 0xff00) | ((s3 >>> 24) & 0xff)]);\n}\nfunction applySbox(sbox2, s0, s1, s2, s3) {\n    return (sbox2[(s0 & 0xff) | (s1 & 0xff00)] |\n        (sbox2[((s2 >>> 16) & 0xff) | ((s3 >>> 16) & 0xff00)] << 16));\n}\nfunction encrypt(xk, s0, s1, s2, s3) {\n    const { sbox2, T01, T23 } = tableEncoding;\n    let k = 0;\n    (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n    const rounds = xk.length / 4 - 2;\n    for (let i = 0; i < rounds; i++) {\n        const t0 = xk[k++] ^ apply0123(T01, T23, s0, s1, s2, s3);\n        const t1 = xk[k++] ^ apply0123(T01, T23, s1, s2, s3, s0);\n        const t2 = xk[k++] ^ apply0123(T01, T23, s2, s3, s0, s1);\n        const t3 = xk[k++] ^ apply0123(T01, T23, s3, s0, s1, s2);\n        (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n    }\n    // last round (without mixcolumns, so using SBOX2 table)\n    const t0 = xk[k++] ^ applySbox(sbox2, s0, s1, s2, s3);\n    const t1 = xk[k++] ^ applySbox(sbox2, s1, s2, s3, s0);\n    const t2 = xk[k++] ^ applySbox(sbox2, s2, s3, s0, s1);\n    const t3 = xk[k++] ^ applySbox(sbox2, s3, s0, s1, s2);\n    return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\nfunction decrypt(xk, s0, s1, s2, s3) {\n    const { sbox2, T01, T23 } = tableDecoding;\n    let k = 0;\n    (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n    const rounds = xk.length / 4 - 2;\n    for (let i = 0; i < rounds; i++) {\n        const t0 = xk[k++] ^ apply0123(T01, T23, s0, s3, s2, s1);\n        const t1 = xk[k++] ^ apply0123(T01, T23, s1, s0, s3, s2);\n        const t2 = xk[k++] ^ apply0123(T01, T23, s2, s1, s0, s3);\n        const t3 = xk[k++] ^ apply0123(T01, T23, s3, s2, s1, s0);\n        (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n    }\n    // Last round\n    const t0 = xk[k++] ^ applySbox(sbox2, s0, s3, s2, s1);\n    const t1 = xk[k++] ^ applySbox(sbox2, s1, s0, s3, s2);\n    const t2 = xk[k++] ^ applySbox(sbox2, s2, s1, s0, s3);\n    const t3 = xk[k++] ^ applySbox(sbox2, s3, s2, s1, s0);\n    return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\nfunction getDst(len, dst) {\n    if (!dst)\n        return new Uint8Array(len);\n    abytes(dst);\n    if (dst.length < len)\n        throw new Error(`aes: wrong destination length, expected at least ${len}, got: ${dst.length}`);\n    return dst;\n}\n// TODO: investigate merging with ctr32\nfunction ctrCounter(xk, nonce, src, dst) {\n    abytes(nonce, BLOCK_SIZE);\n    abytes(src);\n    const srcLen = src.length;\n    dst = getDst(srcLen, dst);\n    const ctr = nonce;\n    const c32 = u32(ctr);\n    // Fill block (empty, ctr=0)\n    let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n    const src32 = u32(src);\n    const dst32 = u32(dst);\n    // process blocks\n    for (let i = 0; i + 4 <= src32.length; i += 4) {\n        dst32[i + 0] = src32[i + 0] ^ s0;\n        dst32[i + 1] = src32[i + 1] ^ s1;\n        dst32[i + 2] = src32[i + 2] ^ s2;\n        dst32[i + 3] = src32[i + 3] ^ s3;\n        // Full 128 bit counter with wrap around\n        let carry = 1;\n        for (let i = ctr.length - 1; i >= 0; i--) {\n            carry = (carry + (ctr[i] & 0xff)) | 0;\n            ctr[i] = carry & 0xff;\n            carry >>>= 8;\n        }\n        ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n    }\n    // leftovers (less than block)\n    // It's possible to handle > u32 fast, but is it worth it?\n    const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n    if (start < srcLen) {\n        const b32 = new Uint32Array([s0, s1, s2, s3]);\n        const buf = u8(b32);\n        for (let i = start, pos = 0; i < srcLen; i++, pos++)\n            dst[i] = src[i] ^ buf[pos];\n    }\n    return dst;\n}\n// AES CTR with overflowing 32 bit counter\n// It's possible to do 32le significantly simpler (and probably faster) by using u32.\n// But, we need both, and perf bottleneck is in ghash anyway.\nfunction ctr32(xk, isLE, nonce, src, dst) {\n    abytes(nonce, BLOCK_SIZE);\n    abytes(src);\n    dst = getDst(src.length, dst);\n    const ctr = nonce; // write new value to nonce, so it can be re-used\n    const c32 = u32(ctr);\n    const view = createView(ctr);\n    const src32 = u32(src);\n    const dst32 = u32(dst);\n    const ctrPos = isLE ? 0 : 12;\n    const srcLen = src.length;\n    // Fill block (empty, ctr=0)\n    let ctrNum = view.getUint32(ctrPos, isLE); // read current counter value\n    let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n    // process blocks\n    for (let i = 0; i + 4 <= src32.length; i += 4) {\n        dst32[i + 0] = src32[i + 0] ^ s0;\n        dst32[i + 1] = src32[i + 1] ^ s1;\n        dst32[i + 2] = src32[i + 2] ^ s2;\n        dst32[i + 3] = src32[i + 3] ^ s3;\n        ctrNum = (ctrNum + 1) >>> 0; // u32 wrap\n        view.setUint32(ctrPos, ctrNum, isLE);\n        ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n    }\n    // leftovers (less than a block)\n    const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n    if (start < srcLen) {\n        const b32 = new Uint32Array([s0, s1, s2, s3]);\n        const buf = u8(b32);\n        for (let i = start, pos = 0; i < srcLen; i++, pos++)\n            dst[i] = src[i] ^ buf[pos];\n    }\n    return dst;\n}\n/**\n * CTR: counter mode. Creates stream cipher.\n * Requires good IV. Parallelizable. OK, but no MAC.\n */\nexport const ctr = wrapCipher({ blockSize: 16, nonceLength: 16 }, function ctr(key, nonce) {\n    abytes(key);\n    abytes(nonce, BLOCK_SIZE);\n    function processCtr(buf, dst) {\n        const xk = expandKeyLE(key);\n        const n = nonce.slice();\n        const out = ctrCounter(xk, n, buf, dst);\n        xk.fill(0);\n        n.fill(0);\n        return out;\n    }\n    return {\n        encrypt: (plaintext, dst) => processCtr(plaintext, dst),\n        decrypt: (ciphertext, dst) => processCtr(ciphertext, dst),\n    };\n});\nfunction validateBlockDecrypt(data) {\n    abytes(data);\n    if (data.length % BLOCK_SIZE !== 0) {\n        throw new Error(`aes/(cbc-ecb).decrypt ciphertext should consist of blocks with size ${BLOCK_SIZE}`);\n    }\n}\nfunction validateBlockEncrypt(plaintext, pcks5, dst) {\n    let outLen = plaintext.length;\n    const remaining = outLen % BLOCK_SIZE;\n    if (!pcks5 && remaining !== 0)\n        throw new Error('aec/(cbc-ecb): unpadded plaintext with disabled padding');\n    const b = u32(plaintext);\n    if (pcks5) {\n        let left = BLOCK_SIZE - remaining;\n        if (!left)\n            left = BLOCK_SIZE; // if no bytes left, create empty padding block\n        outLen = outLen + left;\n    }\n    const out = getDst(outLen, dst);\n    const o = u32(out);\n    return { b, o, out };\n}\nfunction validatePCKS(data, pcks5) {\n    if (!pcks5)\n        return data;\n    const len = data.length;\n    if (!len)\n        throw new Error(`aes/pcks5: empty ciphertext not allowed`);\n    const lastByte = data[len - 1];\n    if (lastByte <= 0 || lastByte > 16)\n        throw new Error(`aes/pcks5: wrong padding byte: ${lastByte}`);\n    const out = data.subarray(0, -lastByte);\n    for (let i = 0; i < lastByte; i++)\n        if (data[len - i - 1] !== lastByte)\n            throw new Error(`aes/pcks5: wrong padding`);\n    return out;\n}\nfunction padPCKS(left) {\n    const tmp = new Uint8Array(16);\n    const tmp32 = u32(tmp);\n    tmp.set(left);\n    const paddingByte = BLOCK_SIZE - left.length;\n    for (let i = BLOCK_SIZE - paddingByte; i < BLOCK_SIZE; i++)\n        tmp[i] = paddingByte;\n    return tmp32;\n}\n/**\n * ECB: Electronic CodeBook. Simple deterministic replacement.\n * Dangerous: always map x to y. See [AES Penguin](https://words.filippo.io/the-ecb-penguin/).\n */\nexport const ecb = wrapCipher({ blockSize: 16 }, function ecb(key, opts = {}) {\n    abytes(key);\n    const pcks5 = !opts.disablePadding;\n    return {\n        encrypt: (plaintext, dst) => {\n            abytes(plaintext);\n            const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n            const xk = expandKeyLE(key);\n            let i = 0;\n            for (; i + 4 <= b.length;) {\n                const { s0, s1, s2, s3 } = encrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            if (pcks5) {\n                const tmp32 = padPCKS(plaintext.subarray(i * 4));\n                const { s0, s1, s2, s3 } = encrypt(xk, tmp32[0], tmp32[1], tmp32[2], tmp32[3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            xk.fill(0);\n            return _out;\n        },\n        decrypt: (ciphertext, dst) => {\n            validateBlockDecrypt(ciphertext);\n            const xk = expandKeyDecLE(key);\n            const out = getDst(ciphertext.length, dst);\n            const b = u32(ciphertext);\n            const o = u32(out);\n            for (let i = 0; i + 4 <= b.length;) {\n                const { s0, s1, s2, s3 } = decrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            xk.fill(0);\n            return validatePCKS(out, pcks5);\n        },\n    };\n});\n/**\n * CBC: Cipher-Block-Chaining. Key is previous round’s block.\n * Fragile: needs proper padding. Unauthenticated: needs MAC.\n */\nexport const cbc = wrapCipher({ blockSize: 16, nonceLength: 16 }, function cbc(key, iv, opts = {}) {\n    abytes(key);\n    abytes(iv, 16);\n    const pcks5 = !opts.disablePadding;\n    return {\n        encrypt: (plaintext, dst) => {\n            const xk = expandKeyLE(key);\n            const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n            const n32 = u32(iv);\n            // prettier-ignore\n            let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n            let i = 0;\n            for (; i + 4 <= b.length;) {\n                (s0 ^= b[i + 0]), (s1 ^= b[i + 1]), (s2 ^= b[i + 2]), (s3 ^= b[i + 3]);\n                ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            if (pcks5) {\n                const tmp32 = padPCKS(plaintext.subarray(i * 4));\n                (s0 ^= tmp32[0]), (s1 ^= tmp32[1]), (s2 ^= tmp32[2]), (s3 ^= tmp32[3]);\n                ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            xk.fill(0);\n            return _out;\n        },\n        decrypt: (ciphertext, dst) => {\n            validateBlockDecrypt(ciphertext);\n            const xk = expandKeyDecLE(key);\n            const n32 = u32(iv);\n            const out = getDst(ciphertext.length, dst);\n            const b = u32(ciphertext);\n            const o = u32(out);\n            // prettier-ignore\n            let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n            for (let i = 0; i + 4 <= b.length;) {\n                // prettier-ignore\n                const ps0 = s0, ps1 = s1, ps2 = s2, ps3 = s3;\n                (s0 = b[i + 0]), (s1 = b[i + 1]), (s2 = b[i + 2]), (s3 = b[i + 3]);\n                const { s0: o0, s1: o1, s2: o2, s3: o3 } = decrypt(xk, s0, s1, s2, s3);\n                (o[i++] = o0 ^ ps0), (o[i++] = o1 ^ ps1), (o[i++] = o2 ^ ps2), (o[i++] = o3 ^ ps3);\n            }\n            xk.fill(0);\n            return validatePCKS(out, pcks5);\n        },\n    };\n});\n/**\n * CFB: Cipher Feedback Mode. The input for the block cipher is the previous cipher output.\n * Unauthenticated: needs MAC.\n */\nexport const cfb = wrapCipher({ blockSize: 16, nonceLength: 16 }, function cfb(key, iv) {\n    abytes(key);\n    abytes(iv, 16);\n    function processCfb(src, isEncrypt, dst) {\n        const xk = expandKeyLE(key);\n        const srcLen = src.length;\n        dst = getDst(srcLen, dst);\n        const src32 = u32(src);\n        const dst32 = u32(dst);\n        const next32 = isEncrypt ? dst32 : src32;\n        const n32 = u32(iv);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        for (let i = 0; i + 4 <= src32.length;) {\n            const { s0: e0, s1: e1, s2: e2, s3: e3 } = encrypt(xk, s0, s1, s2, s3);\n            dst32[i + 0] = src32[i + 0] ^ e0;\n            dst32[i + 1] = src32[i + 1] ^ e1;\n            dst32[i + 2] = src32[i + 2] ^ e2;\n            dst32[i + 3] = src32[i + 3] ^ e3;\n            (s0 = next32[i++]), (s1 = next32[i++]), (s2 = next32[i++]), (s3 = next32[i++]);\n        }\n        // leftovers (less than block)\n        const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n        if (start < srcLen) {\n            ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n            const buf = u8(new Uint32Array([s0, s1, s2, s3]));\n            for (let i = start, pos = 0; i < srcLen; i++, pos++)\n                dst[i] = src[i] ^ buf[pos];\n            buf.fill(0);\n        }\n        xk.fill(0);\n        return dst;\n    }\n    return {\n        encrypt: (plaintext, dst) => processCfb(plaintext, true, dst),\n        decrypt: (ciphertext, dst) => processCfb(ciphertext, false, dst),\n    };\n});\n// TODO: merge with chacha, however gcm has bitLen while chacha has byteLen\nfunction computeTag(fn, isLE, key, data, AAD) {\n    const h = fn.create(key, data.length + (AAD?.length || 0));\n    if (AAD)\n        h.update(AAD);\n    h.update(data);\n    const num = new Uint8Array(16);\n    const view = createView(num);\n    if (AAD)\n        setBigUint64(view, 0, BigInt(AAD.length * 8), isLE);\n    setBigUint64(view, 8, BigInt(data.length * 8), isLE);\n    h.update(num);\n    return h.digest();\n}\n/**\n * GCM: Galois/Counter Mode.\n * Good, modern version of CTR, parallel, with MAC.\n * Be careful: MACs can be forged.\n */\nexport const gcm = wrapCipher({ blockSize: 16, nonceLength: 12, tagLength: 16 }, function gcm(key, nonce, AAD) {\n    abytes(nonce);\n    // Nonce can be pretty much anything (even 1 byte). But smaller nonces less secure.\n    if (nonce.length === 0)\n        throw new Error('aes/gcm: empty nonce');\n    const tagLength = 16;\n    function _computeTag(authKey, tagMask, data) {\n        const tag = computeTag(ghash, false, authKey, data, AAD);\n        for (let i = 0; i < tagMask.length; i++)\n            tag[i] ^= tagMask[i];\n        return tag;\n    }\n    function deriveKeys() {\n        const xk = expandKeyLE(key);\n        const authKey = EMPTY_BLOCK.slice();\n        const counter = EMPTY_BLOCK.slice();\n        ctr32(xk, false, counter, counter, authKey);\n        if (nonce.length === 12) {\n            counter.set(nonce);\n        }\n        else {\n            // Spec (NIST 800-38d) supports variable size nonce.\n            // Not supported for now, but can be useful.\n            const nonceLen = EMPTY_BLOCK.slice();\n            const view = createView(nonceLen);\n            setBigUint64(view, 8, BigInt(nonce.length * 8), false);\n            // ghash(nonce || u64be(0) || u64be(nonceLen*8))\n            ghash.create(authKey).update(nonce).update(nonceLen).digestInto(counter);\n        }\n        const tagMask = ctr32(xk, false, counter, EMPTY_BLOCK);\n        return { xk, authKey, counter, tagMask };\n    }\n    return {\n        encrypt: (plaintext) => {\n            abytes(plaintext);\n            const { xk, authKey, counter, tagMask } = deriveKeys();\n            const out = new Uint8Array(plaintext.length + tagLength);\n            ctr32(xk, false, counter, plaintext, out);\n            const tag = _computeTag(authKey, tagMask, out.subarray(0, out.length - tagLength));\n            out.set(tag, plaintext.length);\n            xk.fill(0);\n            return out;\n        },\n        decrypt: (ciphertext) => {\n            abytes(ciphertext);\n            if (ciphertext.length < tagLength)\n                throw new Error(`aes/gcm: ciphertext less than tagLen (${tagLength})`);\n            const { xk, authKey, counter, tagMask } = deriveKeys();\n            const data = ciphertext.subarray(0, -tagLength);\n            const passedTag = ciphertext.subarray(-tagLength);\n            const tag = _computeTag(authKey, tagMask, data);\n            if (!equalBytes(tag, passedTag))\n                throw new Error('aes/gcm: invalid ghash tag');\n            const out = ctr32(xk, false, counter, data);\n            authKey.fill(0);\n            tagMask.fill(0);\n            xk.fill(0);\n            return out;\n        },\n    };\n});\nconst limit = (name, min, max) => (value) => {\n    if (!Number.isSafeInteger(value) || min > value || value > max)\n        throw new Error(`${name}: invalid value=${value}, must be [${min}..${max}]`);\n};\n/**\n * AES-GCM-SIV: classic AES-GCM with nonce-misuse resistance.\n * Guarantees that, when a nonce is repeated, the only security loss is that identical\n * plaintexts will produce identical ciphertexts.\n * RFC 8452, https://datatracker.ietf.org/doc/html/rfc8452\n */\nexport const siv = wrapCipher({ blockSize: 16, nonceLength: 12, tagLength: 16 }, function siv(key, nonce, AAD) {\n    const tagLength = 16;\n    // From RFC 8452: Section 6\n    const AAD_LIMIT = limit('AAD', 0, 2 ** 36);\n    const PLAIN_LIMIT = limit('plaintext', 0, 2 ** 36);\n    const NONCE_LIMIT = limit('nonce', 12, 12);\n    const CIPHER_LIMIT = limit('ciphertext', 16, 2 ** 36 + 16);\n    abytes(nonce);\n    NONCE_LIMIT(nonce.length);\n    if (AAD) {\n        abytes(AAD);\n        AAD_LIMIT(AAD.length);\n    }\n    function deriveKeys() {\n        const len = key.length;\n        if (len !== 16 && len !== 24 && len !== 32)\n            throw new Error(`key length must be 16, 24 or 32 bytes, got: ${len} bytes`);\n        const xk = expandKeyLE(key);\n        const encKey = new Uint8Array(len);\n        const authKey = new Uint8Array(16);\n        const n32 = u32(nonce);\n        // prettier-ignore\n        let s0 = 0, s1 = n32[0], s2 = n32[1], s3 = n32[2];\n        let counter = 0;\n        for (const derivedKey of [authKey, encKey].map(u32)) {\n            const d32 = u32(derivedKey);\n            for (let i = 0; i < d32.length; i += 2) {\n                // aes(u32le(0) || nonce)[:8] || aes(u32le(1) || nonce)[:8] ...\n                const { s0: o0, s1: o1 } = encrypt(xk, s0, s1, s2, s3);\n                d32[i + 0] = o0;\n                d32[i + 1] = o1;\n                s0 = ++counter; // increment counter inside state\n            }\n        }\n        xk.fill(0);\n        return { authKey, encKey: expandKeyLE(encKey) };\n    }\n    function _computeTag(encKey, authKey, data) {\n        const tag = computeTag(polyval, true, authKey, data, AAD);\n        // Compute the expected tag by XORing S_s and the nonce, clearing the\n        // most significant bit of the last byte and encrypting with the\n        // message-encryption key.\n        for (let i = 0; i < 12; i++)\n            tag[i] ^= nonce[i];\n        tag[15] &= 0x7f; // Clear the highest bit\n        // encrypt tag as block\n        const t32 = u32(tag);\n        // prettier-ignore\n        let s0 = t32[0], s1 = t32[1], s2 = t32[2], s3 = t32[3];\n        ({ s0, s1, s2, s3 } = encrypt(encKey, s0, s1, s2, s3));\n        (t32[0] = s0), (t32[1] = s1), (t32[2] = s2), (t32[3] = s3);\n        return tag;\n    }\n    // actual decrypt/encrypt of message.\n    function processSiv(encKey, tag, input) {\n        let block = tag.slice();\n        block[15] |= 0x80; // Force highest bit\n        return ctr32(encKey, true, block, input);\n    }\n    return {\n        encrypt: (plaintext) => {\n            abytes(plaintext);\n            PLAIN_LIMIT(plaintext.length);\n            const { encKey, authKey } = deriveKeys();\n            const tag = _computeTag(encKey, authKey, plaintext);\n            const out = new Uint8Array(plaintext.length + tagLength);\n            out.set(tag, plaintext.length);\n            out.set(processSiv(encKey, tag, plaintext));\n            encKey.fill(0);\n            authKey.fill(0);\n            return out;\n        },\n        decrypt: (ciphertext) => {\n            abytes(ciphertext);\n            CIPHER_LIMIT(ciphertext.length);\n            const tag = ciphertext.subarray(-tagLength);\n            const { encKey, authKey } = deriveKeys();\n            const plaintext = processSiv(encKey, tag, ciphertext.subarray(0, -tagLength));\n            const expectedTag = _computeTag(encKey, authKey, plaintext);\n            encKey.fill(0);\n            authKey.fill(0);\n            if (!equalBytes(tag, expectedTag))\n                throw new Error('invalid polyval tag');\n            return plaintext;\n        },\n    };\n});\nfunction isBytes32(a) {\n    return (a != null &&\n        typeof a === 'object' &&\n        (a instanceof Uint32Array || a.constructor.name === 'Uint32Array'));\n}\nfunction encryptBlock(xk, block) {\n    abytes(block, 16);\n    if (!isBytes32(xk))\n        throw new Error('_encryptBlock accepts result of expandKeyLE');\n    const b32 = u32(block);\n    let { s0, s1, s2, s3 } = encrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n    (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n    return block;\n}\nfunction decryptBlock(xk, block) {\n    abytes(block, 16);\n    if (!isBytes32(xk))\n        throw new Error('_decryptBlock accepts result of expandKeyLE');\n    const b32 = u32(block);\n    let { s0, s1, s2, s3 } = decrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n    (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n    return block;\n}\n// Highly unsafe private functions for implementing new modes or ciphers based on AES\n// Can change at any time, no API guarantees\nexport const unsafe = {\n    expandKeyLE,\n    expandKeyDecLE,\n    encrypt,\n    decrypt,\n    encryptBlock,\n    decryptBlock,\n    ctrCounter,\n    ctr32,\n};\n//# sourceMappingURL=aes.js.map","import ByteBuffer from 'bytebuffer-hex-custom'\nimport { sha256, sha512 } from './crypto.js'\nimport { cbc as AESCBC } from '@noble/ciphers/aes'\nimport { secp256k1 } from '@noble/curves/secp256k1'\nconst Long = ByteBuffer.Long\n\nexport const encrypt = (\n  privateKey,\n  publicKey,\n  message,\n  nonce = uniqueNonce()\n) => crypt(privateKey, publicKey, nonce, message)\n\nexport const decrypt = async (privateKey, publicKey, nonce, message, checksum) => {\n  const d = await crypt(privateKey, publicKey, nonce, message, checksum)\n  return d.message\n}\n\n/**\n * @arg {Buffer} message - Encrypted or plain text message (see checksum)\n * @arg {number} checksum - shared secret checksum (null to encrypt, non-null to decrypt)\n */\nconst crypt = async (privateKey, publicKey, nonce, message, checksum) => {\n  const nonceL = toLongObj(nonce)\n  const S = privateKey.getSharedSecret(publicKey)\n  let ebuf = new ByteBuffer(\n    ByteBuffer.DEFAULT_CAPACITY,\n    ByteBuffer.LITTLE_ENDIAN\n  )\n  ebuf.writeUint64(nonceL)\n  ebuf.append(S.toString('binary'), 'binary')\n  ebuf = Buffer.from(ebuf.copy(0, ebuf.offset).toBinary(), 'binary')\n  const encryptionKey = sha512(ebuf)\n  const iv = encryptionKey.subarray(32, 48)\n  const tag = encryptionKey.subarray(0, 32)\n\n  // check if first 64 bit of sha256 hash treated as uint64_t truncated to 32 bits.\n  const check = sha256(encryptionKey).subarray(0, 4)\n  const cbuf = ByteBuffer.fromBinary(\n    check.toString('binary'),\n    ByteBuffer.DEFAULT_CAPACITY,\n    ByteBuffer.LITTLE_ENDIAN\n  )\n  ByteBuffer.fromBinary(\n    check.toString('binary'),\n    ByteBuffer.DEFAULT_CAPACITY,\n    ByteBuffer.LITTLE_ENDIAN\n  )\n  const check32 = cbuf.readUint32()\n  if (checksum) {\n    if (check32 !== checksum) {\n      throw new Error('Invalid key')\n    }\n    message = await cryptoJsDecrypt(message, tag, iv)\n  } else {\n    message = await cryptoJsEncrypt(message, tag, iv)\n  }\n  return { nonce: nonceL, message, checksum: check32 }\n}\n\n/**\n * This method does not use a checksum, the returned data must be validated some other way.\n * @arg {string|Buffer} ciphertext - binary format\n * @return {Buffer} the decrypted message\n */\nconst cryptoJsDecrypt = async (message, tag, iv) => {\n  let messageBuffer = message\n  const decipher = AESCBC(tag, iv)\n  messageBuffer = await decipher.decrypt(messageBuffer)\n  return Buffer.from(messageBuffer)\n}\n\n/**\n * This method does not use a checksum, the returned data must be validated some other way.\n * @arg {string|Buffer} plaintext - binary format\n * @return {Buffer} binary\n */\nexport const cryptoJsEncrypt = async (message, tag, iv) => {\n  let messageBuffer = message\n  const cipher = AESCBC(tag, iv)\n  messageBuffer = await cipher.encrypt(messageBuffer)\n  return Buffer.from(messageBuffer)\n}\n\n/** @return {string} unique 64 bit unsigned number string.  Being time based,\n * this is careful to never choose the same nonce twice.  This value could\n * clsbe recorded in the blockchain for a long time.\n */\nlet uniqueNonceEntropy = null\n\nconst uniqueNonce = () => {\n  if (uniqueNonceEntropy === null) {\n    const uint8randomArr = new Uint8Array(2)\n    for (let i = 0; i < 2; ++i) {\n      uint8randomArr[i] = secp256k1.utils.randomPrivateKey().at(i)\n    }\n    uniqueNonceEntropy = Math.round(\n      (uint8randomArr[0] << 8) | uint8randomArr[1]\n    )\n  }\n  let long = Long.fromNumber(Date.now())\n  const entropy = ++uniqueNonceEntropy % 0xffff\n  long = long.shiftLeft(16).or(Long.fromNumber(entropy))\n  return long.toString()\n}\n\nconst toLongObj = (o) => (o ? (Long.isLong(o) ? o : Long.fromString(o)) : o)\n","import ByteBuffer from 'bytebuffer-hex-custom'\nimport { PublicKey } from './PublicKey.js'\n\nconst PublicKeyDeserializer = (buf) => {\n  const c = fixedBuf(buf, 33)\n  return new PublicKey(c)\n}\n\nconst UInt64Deserializer = (b) => b.readUint64()\n\nconst UInt32Deserializer = (b) => b.readUint32()\n\nconst BinaryDeserializer = (b) => {\n  const len = b.readVarint32()\n  const bCopy = b.copy(b.offset, b.offset + len)\n  b.skip(len)\n  return Buffer.from(bCopy.toBinary(), 'binary')\n}\n\nconst BufferDeserializer =\n  (keyDeserializers) =>\n    (buf) => {\n      const obj = {}\n      for (const [key, deserializer] of keyDeserializers) {\n        try {\n        // Decodes a binary encoded string to a ByteBuffer.\n          buf = ByteBuffer.fromBinary(\n            buf.toString('binary'),\n            ByteBuffer.LITTLE_ENDIAN\n          )\n          obj[key] = deserializer(buf)\n        } catch (error) {\n          error.message = `${key}: ${error.message}`\n          throw error\n        }\n      }\n      return obj\n    }\n\nfunction fixedBuf (b, len) {\n  if (!b) {\n    throw Error('No buffer found on first parameter')\n  } else {\n    const bCopy = b.copy(b.offset, b.offset + len)\n    b.skip(len)\n    return Buffer.from(bCopy.toBinary(), 'binary')\n  }\n}\n\nconst EncryptedMemoDeserializer = BufferDeserializer([\n  ['from', PublicKeyDeserializer],\n  ['to', PublicKeyDeserializer],\n  ['nonce', UInt64Deserializer],\n  ['check', UInt32Deserializer],\n  ['encrypted', BinaryDeserializer]\n])\n\nexport const Deserializer = {\n  Memo: EncryptedMemoDeserializer\n}\n","import bs58 from 'bs58'\nimport ByteBuffer from 'bytebuffer-hex-custom'\nimport { Serializer } from './serializer.js'\nimport { PrivateKey } from './PrivateKey.js'\nimport * as Aes from './aes.js'\nimport { PublicKey } from './PublicKey.js'\nimport { Deserializer } from './deserializer.js'\n\n/**\n * Memo/Any message encoding using AES (aes-cbc algorithm)\n * @param {Buffer|string} private_key Private memo key of sender\n * @param {Buffer|string} public_key public memo key of recipient\n * @param {string} memo message to be encrypted\n * @param {number} testNonce nonce with high entropy\n */\nconst encode = async (privateKey, publicKey, memo, testNonce) => {\n  if (!memo.startsWith('#')) {\n    return memo\n  }\n  memo = memo.substring(1)\n  await checkEncryption()\n  privateKey = toPrivateObj(privateKey)\n  publicKey = toPublicObj(publicKey)\n  const mbuf = new ByteBuffer(\n    ByteBuffer.DEFAULT_CAPACITY,\n    ByteBuffer.LITTLE_ENDIAN\n  )\n  mbuf.writeVString(memo)\n  const memoBuffer = Buffer.from(mbuf.copy(0, mbuf.offset).toBinary(), 'binary')\n  const { nonce, message, checksum } = await Aes.encrypt(\n    privateKey,\n    publicKey,\n    memoBuffer,\n    testNonce\n  )\n  const mbuf2 = new ByteBuffer(\n    ByteBuffer.DEFAULT_CAPACITY,\n    ByteBuffer.LITTLE_ENDIAN\n  )\n  Serializer.Memo(mbuf2, {\n    check: checksum,\n    encrypted: message,\n    from: privateKey.createPublic(),\n    nonce,\n    to: publicKey\n  })\n  mbuf2.flip()\n  const data = Buffer.from(mbuf2.toBuffer())\n  return '#' + bs58.encode(data)\n}\n\n/**\n * Encrypted memo/message decryption\n * @param {PrivateKey|string} private_key Private memo key of recipient\n * @param {string}memo Encrypted message/memo\n */\nconst decode = async (privateKey, memo) => {\n  if (!memo.startsWith('#')) {\n    return memo\n  }\n  memo = memo.substring(1)\n  await checkEncryption()\n  privateKey = toPrivateObj(privateKey)\n  memo = bs58.decode(memo)\n  let memoBuffer = Deserializer.Memo(Buffer.from(memo, 'binary'))\n  const { from, to, nonce, check, encrypted } = memoBuffer\n  const pubkey = privateKey.createPublic().toString()\n  const otherpub =\n      pubkey === new PublicKey(from.key).toString()\n        ? new PublicKey(to.key)\n        : new PublicKey(from.key)\n  memoBuffer = await Aes.decrypt(privateKey, otherpub, nonce, encrypted, check)\n  const mbuf = ByteBuffer.fromBinary(\n    memoBuffer.toString('binary'),\n    ByteBuffer.LITTLE_ENDIAN\n  )\n  try {\n    mbuf.mark()\n    return '#' + mbuf.readVString()\n  } catch (e) {\n    mbuf.reset()\n    // Sender did not length-prefix the memo\n    memo = Buffer.from(mbuf.toString('binary'), 'binary')\n    return '#' + memo\n  }\n}\n\nlet encodeTest\nconst checkEncryption = async () => {\n  if (encodeTest === undefined) {\n    let plaintext\n    encodeTest = true // prevent infinate looping\n    try {\n      const wif = '5JdeC9P7Pbd1uGdFVEsJ41EkEnADbbHGq6p1BwFxm6txNBsQnsw'\n      const pubkey = 'STM8m5UgaFAAYQRuaNejYdS8FVLVp9Ss3K1qAVk5de6F8s3HnVbvA'\n      const cyphertext = await encode(wif, pubkey, '#memo爱')\n      plaintext = await decode(wif, cyphertext)\n    } catch (e) {\n      throw new Error(e)\n    } finally {\n      encodeTest = plaintext === '#memo爱'\n    }\n  }\n  if (encodeTest === false) {\n    throw new Error('This environment does not support encryption.')\n  }\n}\n\nconst toPrivateObj = (o) => (o ? (o.key ? o : PrivateKey.fromString(o)) : o)\nconst toPublicObj = (o) => (o ? (o.key ? o : PublicKey.fromString(o)) : o)\n\nexport const Memo = {\n  decode,\n  encode\n}\n","import { Serializer } from './serializer.js'\nimport ByteBuffer from 'bytebuffer-hex-custom'\n\n/** Return null for a valid username */\nexport const validateUsername = (username) => {\n  let suffix = 'Account name should '\n  if (!username) {\n    return suffix + 'not be empty.'\n  }\n  const length = username.length\n  if (length < 3) {\n    return suffix + 'be longer.'\n  }\n  if (length > 16) {\n    return suffix + 'be shorter.'\n  }\n  if (/\\./.test(username)) {\n    suffix = 'Each account segment should '\n  }\n  const ref = username.split('.')\n  const len = ref.length\n  for (let i = 0; i < len; i++) {\n    const label = ref[i]\n    if (!/^[a-z]/.test(label)) {\n      return suffix + 'start with a lowercase letter.'\n    }\n    if (!/^[a-z0-9-]*$/.test(label)) {\n      return suffix + 'have only lowercase letters, digits, or dashes.'\n    }\n    if (!/[a-z0-9]$/.test(label)) {\n      return suffix + 'end with a lowercase letter or digit.'\n    }\n    if (!(label.length >= 3)) {\n      return suffix + 'be longer'\n    }\n  }\n  return null\n}\n\nexport const operations = {\n  vote: 0,\n  comment: 1,\n  transfer: 2,\n  transfer_to_vesting: 3,\n  withdraw_vesting: 4,\n  limit_order_create: 5,\n  limit_order_cancel: 6,\n  feed_publish: 7,\n  convert: 8,\n  account_create: 9,\n  account_update: 10,\n  witness_update: 11,\n  account_witness_vote: 12,\n  account_witness_proxy: 13,\n  pow: 14,\n  custom: 15,\n  report_over_production: 16,\n  delete_comment: 17,\n  custom_json: 18,\n  comment_options: 19,\n  set_withdraw_vesting_route: 20,\n  limit_order_create2: 21,\n  claim_account: 22,\n  create_claimed_account: 23,\n  request_account_recovery: 24,\n  recover_account: 25,\n  change_recovery_account: 26,\n  escrow_transfer: 27,\n  escrow_dispute: 28,\n  escrow_release: 29,\n  pow2: 30,\n  escrow_approve: 31,\n  transfer_to_savings: 32,\n  transfer_from_savings: 33,\n  cancel_transfer_from_savings: 34,\n  custom_binary: 35,\n  decline_voting_rights: 36,\n  reset_account: 37,\n  set_reset_account: 38,\n  claim_reward_balance: 39,\n  delegate_vesting_shares: 40,\n  account_create_with_delegation: 41,\n  witness_set_properties: 42,\n  account_update2: 43,\n  create_proposal: 44,\n  update_proposal_votes: 45,\n  remove_proposal: 46,\n  update_proposal: 47,\n  collateralized_convert: 48,\n  recurrent_transfer: 49,\n  // virtual ops\n  fill_convert_request: 50,\n  author_reward: 51,\n  curation_reward: 52,\n  comment_reward: 53,\n  liquidity_reward: 54,\n  interest: 55,\n  fill_vesting_withdraw: 56,\n  fill_order: 57,\n  shutdown_witness: 58,\n  fill_transfer_from_savings: 59,\n  hardfork: 60,\n  comment_payout_update: 61,\n  return_vesting_delegation: 62,\n  comment_benefactor_reward: 63,\n  producer_reward: 64,\n  clear_null_account_balance: 65,\n  proposal_pay: 66,\n  sps_fund: 67,\n  hardfork_hive: 68,\n  hardfork_hive_restore: 69,\n  delayed_voting: 70,\n  consolidate_treasury_balance: 71,\n  effective_comment_vote: 72,\n  ineffective_delete_comment: 73,\n  sps_convert: 74,\n  expired_account_notification: 75,\n  changed_recovery_account: 76,\n  transfer_to_vesting_completed: 77,\n  pow_reward: 78,\n  vesting_shares_split: 79,\n  account_created: 80,\n  fill_collateralized_convert_request: 81,\n  system_warning: 82,\n  fill_recurrent_transfer: 83,\n  failed_recurrent_transfer: 84,\n  limit_order_cancelled: 85,\n  producer_missed: 86,\n  proposal_fee: 87,\n  collateralized_convert_immediate_conversion: 88,\n  escrow_approved: 89,\n  escrow_rejected: 90,\n  proxy_cleared: 91,\n  declined_voting_rights: 92\n}\n\n/**\n * Make bitmask filter to be used with get_account_history call\n */\nexport const makeBitMaskFilter = (allowedOperations) => {\n  return allowedOperations\n    .reduce(reduceFunction, [BigInt(0), BigInt(0)])\n    .map((value) =>\n      (value !== BigInt(0)) ? value.toString() : null\n    )\n}\nconst reduceFunction = ([low, high], allowedOperation) => {\n  if (allowedOperation < 64) {\n    return [low | (BigInt(1) << BigInt(allowedOperation)), high]\n  } else {\n    return [low, high | (BigInt(1) << BigInt(allowedOperation - 64))]\n  }\n}\n\n/**\n * Needed for witness_set_properties operation\n * Example in utils.d.ts\n */\nexport const buildWitnessSetProperties = (owner, props) => {\n  const data = {\n    extensions: [],\n    owner,\n    props: []\n  }\n  for (const key of Object.keys(props)) {\n    let type\n    switch (key) {\n      case 'key':\n      case 'new_signing_key':\n        type = Serializer.PublicKey\n        break\n      case 'account_subsidy_budget':\n      case 'account_subsidy_decay':\n      case 'maximum_block_size':\n        type = Serializer.UInt32\n        break\n      case 'hbd_interest_rate':\n        type = Serializer.UInt16\n        break\n      case 'url':\n        type = Serializer.String\n        break\n      case 'hbd_exchange_rate':\n        type = Serializer.Price\n        break\n      case 'account_creation_fee':\n        type = Serializer.Asset\n        break\n      default:\n        throw new Error(`Unknown witness prop: ${key}`)\n    }\n    data.props.push([key, serialize(type, props[key])])\n  }\n  data.props.sort((a, b) => a[0].localeCompare(b[0]))\n  return ['witness_set_properties', data]\n}\n\nconst serialize = (serializer, data) => {\n  const buffer = new ByteBuffer(\n    ByteBuffer.DEFAULT_CAPACITY,\n    ByteBuffer.LITTLE_ENDIAN\n  )\n  serializer(buffer, data)\n  buffer.flip()\n  // `props` values must be hex\n  return buffer.toString('hex')\n}\n","import { signTransaction, transactionDigest } from './transactions/signTransaction.js'\r\nimport { createTransaction } from './transactions/createTransaction.js'\r\nimport { broadcastTransaction } from './transactions/broadcastTransaction.js'\r\nimport { PrivateKey } from './helpers/PrivateKey.js'\r\nimport { PublicKey } from './helpers/PublicKey.js'\r\nimport { Signature } from './helpers/Signature.js'\r\nimport { call } from './helpers/call.js'\r\nimport { config } from './config.js'\r\nimport { Memo } from './helpers/memo.js'\r\nimport * as utils from './helpers/utils.js'\r\n\r\n/** Transaction for Hive blockchain */\r\nclass Transaction {\r\n  /** A transaction object could be passed or created later\r\n   * @param {{}} trx Object of transaction - Optional\r\n   */\r\n  constructor (trx = null) {\r\n    this.created = true\r\n    if (!trx) {\r\n      this.created = false\r\n    }\r\n    this.transaction = trx\r\n  }\r\n\r\n  /** Create the transaction by operations\r\n   * @param {[Array]} operations\r\n   * @param {Number} expiration Optional - Default 60 seconds\r\n   */\r\n  async create (operations, expiration = 60) {\r\n    this.transaction = await createTransaction(operations, expiration)\r\n    this.created = true\r\n    return this.transaction\r\n  }\r\n\r\n  /** Sign the transaction by key or keys[] (supports multi signature).\r\n   * It is also possible to sign with one key at a time for multi signature.\r\n   * @param {PrivateKey|[PrivateKey]} keys single key or multiple keys in array\r\n   */\r\n  sign (keys) {\r\n    if (!this.created) {\r\n      throw new Error('First create a transaction by .create(operations)')\r\n    }\r\n    if (this.signedTransaction) {\r\n      const { signedTransaction, txId } = signTransaction(this.signedTransaction, keys)\r\n      this.signedTransaction = signedTransaction\r\n      this.txId = txId\r\n    } else {\r\n      const { signedTransaction, txId } = signTransaction(this.transaction, keys)\r\n      this.signedTransaction = signedTransaction\r\n      this.txId = txId\r\n    }\r\n    return this.signedTransaction\r\n  }\r\n\r\n  /** Broadcast the signed transaction. */\r\n  async broadcast () {\r\n    if (!this.created) {\r\n      throw new Error('First create a transaction by .create(operations)')\r\n    }\r\n    if (!this.signedTransaction) {\r\n      throw new Error('First sign the transaction by .sign(keys)')\r\n    }\r\n    const result = await broadcastTransaction(this.signedTransaction)\r\n    if (result.error) {\r\n      return result\r\n    }\r\n    if (!this.txId) {\r\n      this.txId = this.digest().txId\r\n    }\r\n    return {\r\n      id: 1,\r\n      jsonrpc: '2.0',\r\n      result: { tx_id: this.txId, status: 'unkown' }\r\n    }\r\n  }\r\n\r\n  /** Return the transaction hash which can be used to verify against a signature */\r\n  digest () {\r\n    if (!this.created) {\r\n      throw new Error('First create a transaction by .create(operations)')\r\n    }\r\n    return transactionDigest(this.transaction)\r\n  }\r\n\r\n  /**\r\n   * Add a signature to already created transaction. You can add multiple signatures to one transaction but one at a time.\r\n   * This method is used when you sign your transaction with other tools instead of built-in .sign() method.\r\n   */\r\n  addSignature (signature = '') {\r\n    if (!this.created) {\r\n      throw new Error('First create a transaction by .create(operations)')\r\n    }\r\n    if (typeof signature !== 'string') {\r\n      throw new Error('Signature must be string')\r\n    }\r\n    if (signature.length !== 130) {\r\n      throw new Error('Signature must be 130 characters long')\r\n    }\r\n    if (!this.signedTransaction) {\r\n      this.signedTransaction = { ...this.transaction }\r\n    }\r\n    if (Array.isArray(this.signedTransaction.signature)) {\r\n      this.signedTransaction.signatures.push(signature)\r\n    } else {\r\n      this.signedTransaction.signatures = [signature]\r\n    }\r\n    return this.signedTransaction\r\n  }\r\n}\r\n\r\nexport { Transaction, PrivateKey, call, config, PublicKey, Signature, Memo, utils }\r\n","import { getGlobalProps } from '../helpers/globalProps.js'\r\n\r\n/** Create transaction by operations */\r\nexport const createTransaction = async (operations, exp) => {\r\n  const expireTime = exp ? 1000 * exp : 1000 * 60\r\n  const props = await getGlobalProps()\r\n  const refBlockNum = props.head_block_number & 0xffff\r\n  const refBlockPrefix = Buffer.from(props.head_block_id, 'hex').readUInt32LE(4)\r\n  const expiration = new Date(Date.now() + expireTime)\r\n    .toISOString()\r\n    .slice(0, -5)\r\n  const extensions = []\r\n  return {\r\n    expiration,\r\n    extensions,\r\n    operations,\r\n    ref_block_num: refBlockNum,\r\n    ref_block_prefix: refBlockPrefix\r\n  }\r\n}\r\n","import { call } from \"./call.js\"\r\n\r\n/** return global properties */\r\nexport const getGlobalProps = async () => {\r\n  const res = await call('condenser_api.get_dynamic_global_properties')\r\n  if (!res) {\r\n    throw new Error(\"Couldn't resolve global properties\")\r\n  }\r\n  if (res && (!res.id || !res.result)) {\r\n    throw new Error('Bad response @ global props')\r\n  }\r\n  return res.result\r\n}\r\n","import { call } from \"../helpers/call.js\"\r\n\r\n/** Broadcast signed transaction */\r\nexport const broadcastTransaction = async signedTransaction => {\r\n  const result = await call('condenser_api.broadcast_transaction', [\r\n    signedTransaction\r\n  ])\r\n  return result\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","this","ALPHABET","length","TypeError","BASE_MAP","Uint8Array","j","i","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","decodeUnsafe","source","psz","zeroes","size","b256","carry","it3","Error","it4","vch","encode","ArrayBuffer","isView","buffer","byteOffset","byteLength","Array","isArray","from","pbegin","pend","b58","it1","it2","str","repeat","decode","string","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","code","indexOf","start","end","num","output","basex","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","allocUnsafe","value","encoding","isEncoding","actual","write","slice","fromString","arrayView","isInstance","copy","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","data","fromObject","toPrimitive","assertSize","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","Long","ByteBuffer","capacity","DEFAULT_CAPACITY","DEFAULT_ENDIAN","DEFAULT_NOASSERT","EMPTY_BUFFER","markedOffset","VERSION","LITTLE_ENDIAN","BIG_ENDIAN","ByteBufferPrototype","__isByteBuffer__","stringFromCharCode","accessor","allocate","buffers","k","isByteBuffer","wrap","bi","bb","fromBase64","fromHex","fromBinary","fromUTF8","fromDebug","clone","writeBitSet","relative","bits","bit","writeVarint32","writeByte","readBitSet","readVarint32","readByte","readBytes","capacity0","resize","capacity1","writeInt16","capacity2","writeShort","readInt16","readShort","writeUint16","capacity3","writeUInt16","readUint16","readUInt16","writeInt32","capacity4","writeInt","readInt32","readInt","writeUint32","capacity5","writeUInt32","readUint32","readUInt32","writeInt64","fromNumber","capacity6","low","high","writeLong","readInt64","readLong","writeUint64","capacity7","writeUInt64","readUint64","readUInt64","writeFloat32","capacity8","readFloat32","readFloat","writeFloat64","capacity9","readFloat64","readDouble","MAX_VARINT32_BYTES","calculateVarint32","zigZagEncode32","zigZagDecode32","capacity10","writeVarint32ZigZag","err","readVarint32ZigZag","MAX_VARINT64_BYTES","calculateVarint64","part0","toInt","part1","shiftRightUnsigned","part2","zigZagEncode64","unsigned","toSigned","shiftLeft","xor","shiftRight","toUnsigned","zigZagDecode64","and","ONE","negate","writeVarint64","capacity11","writeVarint64ZigZag","readVarint64","fromBits","readVarint64ZigZag","writeCString","capacity12","readCString","temp","writeIString","capacity13","readIString","readUTF8String","METRICS_BYTES","METRICS_CHARS","writeUTF8String","capacity14","writeString","calculateUTF8Chars","utfx","calculateUTF16asUTF8","s","calculateUTF8Bytes","calculateString","metrics","sd","cs","ps","decodeUTF8","bind","cp","UTF8toUTF16","readString","writeVString","l","capacity15","readVString","append","capacity16","appendTo","writeBytes","assert","clear","compact","begin","copyTo","targetOffset","sourceOffset","sourceLimit","targetRelative","ensureCapacity","current","flip","mark","order","LE","BE","bigEndian","prepend","diff","prependTo","printDebug","toDebug","reset","reverse","skip","toBuffer","forceCopy","toArrayBuffer","ab","toUTF8","toBase64","toHex","toBinary","toColumns","btoa","atob","columns","hex","asc","toUpperCase","ch","rs","ho","hm","hl","fail","isNaN","d","c1","c2","UTF16toUTF8","encodeUTF8","memcpy","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","isLong","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","radix","p","substring","radixToPower","result","power","add","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","UONE","NEG_ONE","LongPrototype","toNumber","isZero","isNegative","eq","radixLong","div","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","isPositive","isOdd","isEven","other","notEquals","neq","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","b00","divide","divisor","approx","shru","shr","shl","log2","ceil","delta","approxRes","approxRem","modulo","mod","or","numBits","toBytes","le","toBytesLE","toBytesBE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","key","o","prop","hasOwnProperty","r","toStringTag","config","node","chain_id","address_prefix","axiosAdapter","number","isSafeInteger","lengths","exists","instance","checkFinished","destroyed","finished","globalThis","crypto","createView","DataView","rotr","word","shift","rotl","TextEncoder","Uint32Array","Hash","_cloneInto","hashCons","hashC","update","digest","outputLen","blockLen","create","bytesLength","getRandomValues","Maj","HashMD","padOffset","view","take","process","dataView","roundClean","digestInto","setBigUint64","_32n","_u32_max","wh","wl","h","setUint32","oview","outLen","state","destroy","to","SHA256_K","SHA256_IV","SHA256_W","SHA256","A","B","C","D","F","G","H","getUint32","W15","W2","s0","s1","T1","T2","U32_MASK64","fromBig","lst","Ah","Al","_l","Bh","Bl","Cl","Ch","Dl","Dh","Eh","El","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","Rho","Id","_","idxL","idxR","shifts","shiftsL","idx","shiftsR","Kl","Kr","f","group","z","R_BUF","RIPEMD160","h0","h1","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rl","rr","sl","sr","tl","tr","ripemd160","HMAC","hash","_key","iHash","pad","oHash","getPrototypeOf","hmac","_1n","_2n","item","padStart","hexToNumber","_0","_9","_A","_F","_a","_f","char","ai","n1","n2","numberToBytesLE","title","expectedLength","arrays","sum","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","v","reseed","seed","gen","pred","validatorFns","bigint","function","boolean","stringOrUint8Array","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","entries","_3n","_4n","_5n","_8n","pow2","invert","u","q","FIELD_FIELDS","nLength","nBitLength","_nBitLength","nByteLength","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","validateBasic","curve","reduce","ORDER","MASK","BYTES","BITS","Gx","Gy","freeze","bytesToNumberBE","b2n","hexToBytes","h2b","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","sig","rhl","weierstrass","curveDef","CURVE","opts","randomBytes","bits2int","bits2int_modN","lowS","validateOpts","compressedLen","uncompressedLen","modN","CURVE_ORDER","invN","ProjectivePoint","Point","normPrivateKeyToScalar","weierstrassEquation","isWithinCurveOrder","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","clearCofactor","allowInfinityPoint","fromBytes","endo","eql","beta","splitScalar","validatePointOpts","_c","point","_isCompressed","toAffine","tail","x2","sqr","x3","assertGE","pointPrecomputes","Map","assertPrjPoint","px","py","pz","fromAffine","is0","normalizeZ","points","toInv","invertBatch","P","assertValidity","fromPrivateKey","privateKey","_setWindowSize","windowSize","_WINDOW_SIZE","delete","left","right","hasEvenY","X1","Y1","Z1","X2","Y2","Z2","U1","U2","double","b3","X3","Y3","Z3","t0","t1","t2","t3","t4","t5","wNAF","wnaf","wNAFCached","multiplyUnsafe","I","unsafeLadder","k1neg","k1","k2neg","k2","k1p","k2p","scalar","fake","f1p","f2p","constTimeNegate","multiplyAndAddUnsafe","Q","iz","inv","ax","ay","zz","cofactor","toRawBytes","isCompressed","_bits","condition","W","windows","elm","precomputeWindow","base","window","precomputes","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","precomputesMap","transform","weierstrassPoints","cat","head","y2","sqrt","sqrtError","suffix","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","prefix","R","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","utils","isValidPrivateKey","randomPrivateKey","fieldLen","minLen","reduced","precompute","isProbPub","ORDER_MASK","int2octets","defaultSigOpts","prehash","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","sign","privKey","k2sig","some","extraEntropy","ent","h1int","seedArgs","kBytes","ik","normS","prepSig","drbg","verify","signature","publicKey","sg","_sig","derError","is","getHash","msgs","secp256k1P","secp256k1N","divNearest","bitLen","redef","sqrtP","p1div4","nv","legendreC","S","Z","Q1div2","g","ge","tonelliShanks","FpSqrt","lhs","rhs","FpPow","sqrN","addN","subN","mulN","nums","lastMultiplied","acc","inverted","reduceRight","FpInvertBatch","cmov","Field","_6n","_11n","_22n","_23n","_44n","_88n","b2","b6","b9","b11","b22","b44","b88","b176","b220","b223","secp256k1","defHash","createCurve","a1","b1","a2","POW_2_128","DEFAULT_ADDRESS_PREFIX","PublicKey","wif","decodePublic","encodePublic","checksum","bs58","encodedKey","Asset","expectedSymbol","amountString","symbol","amount","parseFloat","getPrecision","toFixed","HexBuffer","VoidSerializer","StringSerializer","Int16Serializer","Int64Serializer","UInt16Serializer","UInt32Serializer","UInt64Serializer","BooleanSerializer","StaticVariantSerializer","itemSerializers","id","AssetSerializer","asset","precision","round","DateSerializer","Date","getTime","PublicKeySerializer","BinarySerializer","VariableBinarySerializer","FlatMapSerializer","keySerializer","valueSerializer","ArraySerializer","itemSerializer","ObjectSerializer","keySerializers","serializer","OptionalSerializer","AuthoritySerializer","BeneficiarySerializer","PriceSerializer","SignedBlockHeaderSerializer","ChainPropertiesSerializer","OperationDataSerializer","operationId","definitions","objectSerializer","OperationSerializers","account_create","account_create_with_delegation","account_update","account_witness_proxy","account_witness_vote","cancel_transfer_from_savings","change_recovery_account","claim_account","claim_reward_balance","comment","comment_options","convert","create_claimed_account","custom","custom_binary","custom_json","decline_voting_rights","delegate_vesting_shares","delete_comment","escrow_approve","escrow_dispute","escrow_release","escrow_transfer","feed_publish","limit_order_cancel","limit_order_create","limit_order_create2","recover_account","report_over_production","request_account_recovery","reset_account","set_reset_account","set_withdraw_vesting_route","transfer","transfer_from_savings","transfer_to_savings","transfer_to_vesting","vote","withdraw_vesting","witness_update","witness_set_properties","account_update2","create_proposal","update_proposal_votes","remove_proposal","ProposalUpdateSerializer","update_proposal","collateralized_convert","recurrent_transfer","OperationSerializer","operation","TransactionSerializer","EncryptedMemoSerializer","Serializer","Authority","Binary","Boolean","FlatMap","Int16","Int32","Int64","Int8","Memo","Operation","Optional","Price","StaticVariant","Transaction","UInt16","UInt32","UInt64","UInt8","Void","CHAIN_ID","signTransaction","transaction","keys","txId","transactionDigest","signedTransaction","signatures","customToString","chainId","cause","transactionData","thisArg","kindOf","thing","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","iterator","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","forEach","allOwnKeys","getOwnPropertyNames","findKey","_global","self","global","isContextDefined","context","isTypedArray","TypedArray","isHTMLForm","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","defineProperties","ALPHA","DIGIT","ALPHA_DIGIT","isAsyncFn","isFormData","kind","FormData","isArrayBufferView","isBoolean","isStream","pipe","merge","caseless","assignValue","targetKey","extend","stripBOM","content","inherits","superConstructor","props","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","endsWith","searchString","position","lastIndex","toArray","forEachEntry","next","done","pair","matchAll","regExp","matches","exec","hasOwnProp","freezeMethods","toObjectSet","arrayOrString","delimiter","toCamelCase","p1","p2","noop","toFiniteNumber","defaultValue","generateString","random","isSpecCompliantForm","toJSONObject","visit","reducedValue","isThenable","then","catch","AxiosError","request","response","captureStackTrace","description","fileName","lineNumber","columnNumber","status","customProps","axiosError","isVisitable","removeBrackets","renderKey","path","dots","token","predicates","test","formData","options","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","JSON","stringify","isFlatArray","index","exposedHelpers","build","pop","charMap","encodeURIComponent","match","AxiosURLSearchParams","params","_pairs","encoder","_encode","buildURL","url","serializeFn","serialize","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","document","hasStandardBrowserEnv","product","navigator","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","origin","location","href","buildPath","isNumericKey","isLast","arrayToObject","parsePropPath","defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","platform","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","parse","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","line","parseHeaders","tokens","tokensRE","parseTokens","has","matcher","deleted","deleteHeader","normalize","format","normalized","w","formatHeader","targets","asStrings","computed","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","buildAccessors","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","resolve","reject","ERR_BAD_REQUEST","listener","isDownloadStream","freq","bytesNotified","_speedometer","samplesCount","timestamps","firstSampleTS","chunkLength","now","startedAt","bytesCount","passed","timestamp","threshold","timer","force","clearTimeout","setTimeout","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","msie","userAgent","urlParsingNode","createElement","originURL","resolveURL","setAttribute","protocol","host","search","hostname","port","pathname","requestURL","expires","domain","secure","cookie","toGMTString","RegExp","decodeURIComponent","remove","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","username","password","unescape","isURLSameOrigin","xsrfValue","cookies","XMLHttpRequest","Promise","_config","resolveConfig","requestData","requestHeaders","onCanceled","unsubscribe","signal","removeEventListener","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","addEventListener","progressEventReducer","upload","cancel","abort","subscribe","aborted","parseProtocol","send","signals","controller","AbortController","reason","streamChunk","chunk","chunkSize","trackStream","stream","onProgress","onFinish","async","iterable","ReadableStream","pull","close","enqueue","return","highWaterMark","fetchProgressDecorator","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","encodeText","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","body","duplex","supportsResponseStream","resolvers","ERR_NOT_SUPPORT","fetchOptions","composedSignal","stopTimeout","requestContentLength","getContentLength","getBodyLength","resolveBodyLength","contentTypeHeader","_request","isStreamResponse","responseContentLength","responseData","knownAdapters","http","xhr","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","deprecatedWarnings","validator","version","formatMessage","opt","desc","ERR_DEPRECATED","warn","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","configOrUrl","dummy","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","toFormData","Cancel","all","promises","spread","callback","isAxiosError","payload","formToJSON","getAdapter","default","resolved","conf","post","jsonrpc","compressed","NETWORK_ID","PrivateKey","decodePrivate","fromSeed","fromLogin","role","rv","createPublic","encodePrivate","randomKey","wrapCipher","BLOCK_SIZE","ZEROS16","ZEROS32","swapLE","GHASH","s2","s3","kView","k0","k3","doubles","estimateWindow","items","byte","d0","d1","d2","d3","t","_updateBlock","o0","o1","o2","o3","bytePos","bitPos","e0","e1","e2","e3","blocks","o32","Polyval","ghKey","hiBit","_toGHASHKey","wrapConstructorWithKey","ghash","polyval","EMPTY_BLOCK","sbox","box","invSbox","rotr32_8","rotl32_8","genTtable","T0","T3","T01","T23","sbox2","Uint16Array","tableEncoding","tableDecoding","xPowers","expandKeyLE","k32","Nk","subByte","applySbox","xk","expandKeyDecLE","encKey","apply0123","encrypt","rounds","decrypt","getDst","ctr32","nonce","ctr","src32","dst32","ctrPos","srcLen","ctrNum","validateBlockDecrypt","validateBlockEncrypt","plaintext","pcks5","validatePCKS","lastByte","padPCKS","tmp32","paddingByte","blockSize","nonceLength","processCtr","ctrCounter","ciphertext","disablePadding","_out","cbc","iv","n32","ps0","ps1","ps2","ps3","computeTag","AAD","processCfb","isEncrypt","next32","tagLength","_computeTag","authKey","tagMask","tag","deriveKeys","counter","nonceLen","passedTag","AAD_LIMIT","PLAIN_LIMIT","NONCE_LIMIT","CIPHER_LIMIT","derivedKey","d32","t32","processSiv","block","expectedTag","crypt","nonceL","toLongObj","ebuf","encryptionKey","check","cbuf","check32","cryptoJsDecrypt","cryptoJsEncrypt","messageBuffer","decipher","cipher","uniqueNonceEntropy","PublicKeyDeserializer","bCopy","fixedBuf","keyDeserializers","Deserializer","deserializer","memo","testNonce","startsWith","checkEncryption","toPrivateObj","toPublicObj","mbuf","memoBuffer","uint8randomArr","at","long","entropy","uniqueNonce","mbuf2","encrypted","otherpub","encodeTest","pubkey","cyphertext","validateUsername","ref","label","operations","fill_convert_request","author_reward","curation_reward","comment_reward","liquidity_reward","interest","fill_vesting_withdraw","fill_order","shutdown_witness","fill_transfer_from_savings","hardfork","comment_payout_update","return_vesting_delegation","comment_benefactor_reward","producer_reward","clear_null_account_balance","proposal_pay","sps_fund","hardfork_hive","hardfork_hive_restore","delayed_voting","consolidate_treasury_balance","effective_comment_vote","ineffective_delete_comment","sps_convert","expired_account_notification","changed_recovery_account","transfer_to_vesting_completed","pow_reward","vesting_shares_split","account_created","fill_collateralized_convert_request","system_warning","fill_recurrent_transfer","failed_recurrent_transfer","limit_order_cancelled","producer_missed","proposal_fee","collateralized_convert_immediate_conversion","escrow_approved","escrow_rejected","proxy_cleared","declined_voting_rights","makeBitMaskFilter","allowedOperations","reduceFunction","allowedOperation","buildWitnessSetProperties","owner","extensions","sort","localeCompare","trx","created","expiration","exp","expireTime","getGlobalProps","refBlockNum","head_block_number","refBlockPrefix","head_block_id","ref_block_num","ref_block_prefix","createTransaction","broadcast","broadcastTransaction","tx_id","addSignature"],"sourceRoot":""}